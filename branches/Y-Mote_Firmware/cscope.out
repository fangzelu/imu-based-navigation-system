cscope 15 /opt/msp_firmware/Ymote2_0_test_/Full               0000491166
	@adc.c

1 
	~<io.h
>

2 
	~<sig«l.h
>

3 
	~<sys/öây≥s.h
>

4 
	~"Àd.h
"

5 
	~"dñay.h
"

6 
	~"ußπ.h
"

7 
	~"comm⁄_def.h
"

8 
	~"adc.h
"

12 
uöt8_t
 
	gis_adc_busy
 = 0;

14 
uöt8_t
 
	gADCCh™√l
 = 0;

15 
uöt16_t
 
	gADCResu…
[8] = {0,};

17 
	$öãºu±
(
ADC12_VECTOR
Ë
	$adc_öt
()

19 
uöt16_t
 
d©a
 = 
ADC12MEM0
;

21 
ADCResu…
[
ADCCh™√l
] = 
d©a
;

25 
is_adc_busy
 = 0;

26 
	}
}

28 
	$adc_£ns‹_öô
()

32 
	`SET_PORT_IN_ADC0_PIN
();

33 
	`SET_PORT_IN_ADC1_PIN
();

34 
	`SET_PORT_IN_ADC2_PIN
();

35 
	`SET_PORT_IN_ADC3_PIN
();

36 
	`SET_PORT_IN_ADC4_PIN
();

37 
	`SET_PORT_IN_ADC5_PIN
();

38 
	`SET_PORT_IN_ADC6_PIN
();

39 
	`SET_PORT_IN_ADC7_PIN
();

42 
	`SET_PORT_MOD_ADC0_PIN
();

43 
	`SET_PORT_MOD_ADC1_PIN
();

44 
	`SET_PORT_MOD_ADC2_PIN
();

45 
	`SET_PORT_MOD_ADC3_PIN
();

46 
	`SET_PORT_MOD_ADC4_PIN
();

47 
	`SET_PORT_MOD_ADC5_PIN
();

48 
	`SET_PORT_MOD_ADC6_PIN
();

49 
	`SET_PORT_MOD_ADC7_PIN
();

50 
	}
}

52 
uöt8_t
 
	$adc_gë
(
uöt8_t
 
ch™√l
)

54 
	`CRITICAL_SECTION_START
();

55 
is_adc_busy
 = 1;

56 
	`CRITICAL_SECTION_END
();

59 
ADC12CTL0
 = 
ADC12ON
 | 
REFON
 | 
REF2_5V
 | 
SHT0_6
;

64 
ADC12MCTL0
 = 
ch™√l
 + 
SREF_0
;

65 
ADC12IE
 = 0x01;

66 
ADC12CTL1
 = 
SHP
 | 
ADC12SSEL_3
;

69 
ADC12CTL0
 |
ENC
 | 
ADC12SC
;

72 
ADCCh™√l
 = 
ch™√l
;

74 
	}
}

	@app.c

20 
	~"¡rxdû.h
"

21 
	~"hw˛ock.h
"

22 
	~"¡rxutû.h
"

24 
	~"¬•i.h
"

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

28 
	~"ußπ.h
"

33 
	s≠pMemS


35 
MyAddrT
 
	m§c
;

36 
MyAddrT
 
	mde°
;

37 } 
	t≠pMemT
;

39 
≠pMemT
 
	g≠pM
;

40 
≠pMemT
 *
	g≠p
;

51 
	$AµlCÆlback
 (
MyAddrT
 
sour˚
, 
MyByã8T
 *
∑ylﬂd
, 
MyI¡16T
 
Àn
)

53 
	}
}

63 
uöt32_t
 
	gRF_£q
 = 0;

64 
öt16_t
 
	gRF_‰ac
 = 0, 
	gRF_numbî
 = 0;

66 
	~<dñay.h
>

67 
	$PﬁlAµliˇti⁄
()

70 #i‡(
	`deföed
(
RANGE_DEMO_ANCHOR
))

71 
MyDoubÀ32T
 
di°
;

73 
di°
 = 
	`NTRXR™ge
(
≠p
->
de°
);

78 i‡(
di°
 < 0.0)

81 
RF_numbî
 = 
di°
;

82 
RF_‰ac
 = 0;

86 
RF_‰ac
 = (
uöt16_t
)(
di°
*100.0) - ((uint16_t)dist*100);

87 
RF_numbî
 = (
uöt16_t
)
di°
;

93 
RF_£q
++;

98 #ifde‡
USE_UCIRQ


99 
	`msdñay
(10);

102 #ñi‡(
	`deföed
(
RANGE_DEMO_TAG
))

107 
	}
}

117 
	$InôAµliˇti⁄
()

121 
≠p
 = &
≠pM
;

124 #i‡(
	`deföed
(
RANGE_DEMO_ANCHOR
))

126 
≠p
->
§c
[0] = 0x10;

127 
≠p
->
§c
[1] = 0x00;

128 
≠p
->
§c
[2] = 0x00;

129 
≠p
->
§c
[3] = 0x00;

130 
≠p
->
§c
[4] = 0x00;

131 
≠p
->
§c
[5] = 0x00;

133 
	`NTRXSëSèAddªss
 (
≠p
->
§c
);

135 
≠p
->
de°
[0] = 0x11;

136 
≠p
->
de°
[1] = 0x00;

137 
≠p
->
de°
[2] = 0x00;

138 
≠p
->
de°
[3] = 0x00;

139 
≠p
->
de°
[4] = 0x00;

140 
≠p
->
de°
[5] = 0x00;

141 #ñi‡(
	`deföed
(
RANGE_DEMO_TAG
))

143 
≠p
->
§c
[0] = 0x11;

144 
≠p
->
§c
[1] = 0x00;

145 
≠p
->
§c
[2] = 0x00;

146 
≠p
->
§c
[3] = 0x00;

147 
≠p
->
§c
[4] = 0x00;

148 
≠p
->
§c
[5] = 0x00;

150 
	`NTRXSëSèAddªss
 (
≠p
->
§c
);

152 
≠p
->
de°
[0] = 0x00;

153 
≠p
->
de°
[1] = 0x00;

154 
≠p
->
de°
[2] = 0x00;

155 
≠p
->
de°
[3] = 0x00;

156 
≠p
->
de°
[4] = 0x00;

157 
≠p
->
de°
[5] = 0x00;

162 
	}
}

	@bm.c

6 
	~"bm.h
"

7 
	~"i2c.h
"

8 
	~"comm⁄_def.h
"

9 
	~"ymŸe2_io.h
"

13 
	#PER_VOLT
 ()(4.88)

	)

14 
	#PER_TEMP
 ()(0.125)

	)

16 
	#SHUNT_RESISTOR
 200

17 

	)

19 #if 
SHUNT_RESISTOR
 == 1000

22 
	#PER_IAVG
 ()(1.5625)

	)

23 
	#PER_CURRENT
 ()(1.5625)

	)

24 
	#PER_ACRL
 ()(1.5625)

	)

25 
	#PER_ACR
 ()(6.25)

	)

27 #ñi‡ 
SHUNT_RESISTOR
 == 200

30 
	#PER_IAVG
 ()(7.8125)

	)

31 
	#PER_CURRENT
 ()(7.8125)

	)

32 
	#PER_ACRL
 ()(7.8125)

	)

33 
	#PER_ACR
 ()(31.25)

	)

43 
uöt8_t
 
	$RódDS2782SètusReg
()

45 
uöt8_t
 
D©a
;

47 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
STATUS
, 1, &
D©a
);

49  
D©a
;

50 
	}
}

56 
	$WrôeDS2782SètusReg
(
uöt8_t
 
D©a
)

58 
	`WrôeI2CDevi˚REG
(
I2C_DS2782_ADD
, 
STATUS
, 1, &
D©a
);

59 
	}
}

65 
uöt16_t
 
	$RódDS2782RAACReg
()

67 
uöt8_t
 
Buf
[2];

69 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
RAAC_M
, 2, 
Buf
);

71  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

73 
	}
}

79 
uöt16_t
 
	$RódDS2782RSACReg
()

81 
uöt8_t
 
Buf
[2];

83 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
RSAC_M
, 2, 
Buf
);

85  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

86 
	}
}

92 
uöt8_t
 
	$RódDS2782RARCReg
()

94 
uöt8_t
 
Buf
[1];

96 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
RARC
, 1, 
Buf
);

98  
Buf
[0];

99 
	}
}

105 
uöt8_t
 
	$RódDS2782RSRCReg
()

107 
uöt8_t
 
Buf
[1];

109 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
RSRC
, 1, 
Buf
);

111  
Buf
[0];

112 
	}
}

118 
öt32_t
 
	$RódDS2782IAVGReg
()

120 
uöt8_t
 
Buf
[2];

121 
öt32_t
 
D©a
;

123 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
IAVG_M
, 2, 
Buf
);

125 
D©a
 = 
	`BYTES2INT
(
Buf
[0], Buf[1]);

128 if(
D©a
 > 0)

129 
D©a
 = (
öt32_t
)(()D©®* 
PER_IAVG
 + ()0.5);

131 
D©a
 = (
öt32_t
)(()D©®* 
PER_IAVG
 - ()0.5);

133  
D©a
;

135 
	}
}

141 
uöt16_t
 
	$RódDS2782TEMPReg
()

143 
uöt8_t
 
Buf
[2];

144 
uöt16_t
 
D©a
;

146 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
TEMP_M
, 2, 
Buf
);

148 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]) >> 5;

150 
D©a
 = (
uöt16_t
)(()D©®* 
PER_TEMP
 + ()0.5);

152  
D©a
;

154 
	}
}

160 
öt16_t
 
	$RódDS2782VOLTReg
()

162 
uöt8_t
 
Buf
[2];

163 
öt16_t
 
D©a
;

165 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
VOLT_M
, 2, 
Buf
);

167 
D©a
 = 
	`BYTES2INT
(
Buf
[0], Buf[1]) >> 5;

168 
D©a
 = ()(()D©®* 
PER_VOLT
 + ()0.5);

170  
D©a
;

171 
	}
}

177 
öt32_t
 
	$RódDS2782CURRENTReg
()

179 
uöt8_t
 
Buf
[2];

180 
öt32_t
 
D©a
;

182 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
CURRENT_M
, 2, 
Buf
);

184 
D©a
 = (
öt32_t
)
	`BYTES2INT
(
Buf
[0], Buf[1]);

186 if(
D©a
 > 0)

187 
D©a
 = (
öt32_t
)(()D©®* 
PER_CURRENT
 + ()0.5);

189 
D©a
 = (
öt32_t
)(()D©®* 
PER_CURRENT
 - ()0.5);

191  
D©a
;

192 
	}
}

198 
uöt32_t
 
	$RódDS2782ACRReg
()

200 
uöt8_t
 
Buf
[2];

201 
uöt32_t
 
D©a
;

204 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
ACR_M
, 2, 
Buf
);

206 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]);

208 
D©a
 = (
uöt32_t
)(()D©®* 
PER_ACR
 + ()0.5);

210  
D©a
;

212 
	}
}

218 
	$WrôeDS2782ACRReg
(
uöt16_t
 
D©a
)

220 
uöt8_t
 
Buf
[2];

222 
Buf
[0] = (
uöt8_t
)((
D©a
 >> 8) & 0xFF);

223 
Buf
[1] = (
uöt8_t
)(
D©a
 & 0xFF);

225 
	`WrôeI2CDevi˚REG
(
I2C_DS2782_ADD
, 
ACR_M
, 2, 
Buf
);

227 
	}
}

233 
uöt16_t
 
	$RódDS2782ACRLReg
()

235 
uöt8_t
 
Buf
[2];

236 
uöt16_t
 
D©a
;

238 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
ACRL_M
, 2, 
Buf
);

240 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]) >> 4;

242 
D©a
 = (
uöt16_t
)(()D©®* 
PER_ACRL
+ ()0.5);

244  
D©a
;

245 
	}
}

251 
uöt8_t
 
	$RódDS2782ASReg
()

253 
uöt8_t
 
Buf
[1];

255 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
AS
, 1, 
Buf
);

257  
Buf
[0];

259 
	}
}

265 
	$WrôeDS2782ASReg
(
uöt8_t
 
D©a
)

267 
	`WrôeI2CDevi˚REG
(
I2C_DS2782_ADD
, 
AS
, 1, &
D©a
);

268 
	}
}

274 
uöt8_t
 
	$RódDS2782SFRReg
()

276 
uöt8_t
 
Buf
[1];

278 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
SFR
, 1, 
Buf
);

280  
Buf
[0];

281 
	}
}

287 
	$WrôeDS2782SFRReg
(
uöt8_t
 
D©a
)

289 
	`WrôeI2CDevi˚REG
(
I2C_DS2782_ADD
, 
SFR
, 1, &
D©a
);

290 
	}
}

296 
uöt16_t
 
	$RódDS2782FULLReg
()

298 
uöt8_t
 
Buf
[2];

300 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
FULL_M
, 2, 
Buf
);

302  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

303 
	}
}

309 
uöt16_t
 
	$RódDS2782AEReg
()

311 
uöt8_t
 
Buf
[2];

313 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
AE_M
, 2, 
Buf
);

315  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

316 
	}
}

322 
uöt16_t
 
	$RódDS2782SEReg
()

324 
uöt8_t
 
Buf
[2];

326 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
SE_M
, 2, 
Buf
);

328  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

329 
	}
}

335 
uöt8_t
 
	$RódDS2782EEPROMREG
()

337 
uöt8_t
 
Buf
[1];

339 
	`RódI2CDevi˚REG
(
I2C_DS2782_ADD
, 
EEPROM_REG
, 1, 
Buf
);

341  
Buf
[0];

342 
	}
}

348 
	$WrôeDS2782EEPROMREG
(
uöt8_t
 
D©a
)

350 
	`WrôeI2CDevi˚REG
(
I2C_DS2782_ADD
, 
EEPROM_REG
, 1, &
D©a
);

351 
	}
}

358 
	$Fun˘i⁄CMDDS2782
(
DS2782_CMD
 
Comm™d
)

360 
	`WrôeI2CDevi˚REG
(
I2C_DS2782_ADD
, 
EEPROM_FCR
, 1, (
uöt8_t
 *)&
Comm™d
);

361 
	}
}

	@compass.c

1 
	~<io.h
>

2 
	~<sig«l.h
>

3 
	~<°dio.h
>

4 
	~<sys/öây≥s.h
>

6 
	~"comm⁄_def.h
"

7 
	~"ymŸe2_io.h
"

8 
	~"Àd.h
"

9 
	~"dñay.h
"

10 
	~"i2c.h
"

11 
	~"com∑ss.h
"

13 
	#I2C_COMPASS_ADD
 (()(0x1E))

	)

16 
HMC5843_CREGA_REG
 
	gCom∑ssCRAReg
;

17 
HMC5843_CREGB_REG
 
	gCom∑ssCRBReg
;

18 
HMC5843_MODEREG_REG
 
	gCom∑ssMRReg
;

24 
uöt8_t
 
	$RódCom∑ssSètusReg
()

26 
uöt8_t
 
Buf
[1];

28 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
STATUSREG
, 1, 
Buf
);

30  
Buf
[0];

32 
	}
}

39 
uöt8_t
 
	$RódCom∑ssIREGA
()

41 
uöt8_t
 
Buf
[1];

43 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
IREGA
, 1, 
Buf
);

45  
Buf
[0];

46 
	}
}

52 
uöt8_t
 
	$RódCom∑ssIREGB
()

54 
uöt8_t
 
Buf
[1];

56 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
IREGB
, 1, 
Buf
);

58  
Buf
[0];

59 
	}
}

65 
uöt8_t
 
	$RódCom∑ssIREGC
()

67 
uöt8_t
 
Buf
[1];

69 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
IREGC
, 1, 
Buf
);

71  
Buf
[0];

72 
	}
}

78 
uöt16_t
 
	$RódCom∑ssXAxis
()

80 
uöt8_t
 
Buf
[2];

81 
uöt16_t
 
D©a
;

83 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
X_AXIS_MSBREG
, 2, 
Buf
);

85 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]);

87  
D©a
;

88 
	}
}

94 
uöt16_t
 
	$RódCom∑ssYAxis
()

96 
uöt8_t
 
Buf
[2];

97 
uöt16_t
 
D©a
;

99 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
Y_AXIS_MSBREG
, 2, 
Buf
);

101 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]);

103  
D©a
;

104 
	}
}

110 
uöt16_t
 
	$RódCom∑ssZAxis
()

112 
uöt8_t
 
Buf
[2];

113 
uöt16_t
 
D©a
;

115 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
Z_AXIS_MSBREG
, 2, 
Buf
);

117 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]);

119  
D©a
;

120 
	}
}

123 
	$WrôeCom∑ssCREGA
(
uöt8_t
 
Buf
)

125 
	`WrôeI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
CREGA
, 1, &
Buf
);

126 
	}
}

128 
uöt8_t
 
	$RódCom∑ssCREGA
()

130 
uöt8_t
 
Buf
[1];

132 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
CREGA
, 1, 
Buf
);

134  
Buf
[0];

135 
	}
}

137 
	$WrôeCom∑ssCREGB
(
uöt8_t
 
Buf
)

139 
	`WrôeI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
CREGB
, 1, &
Buf
);

140 
	}
}

142 
uöt8_t
 
	$RódCom∑ssCREGB
()

144 
uöt8_t
 
Buf
[1];

146 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
CREGB
, 1, 
Buf
);

148  
Buf
[0];

149 
	}
}

151 
	$WrôeCom∑ssMODEREG
(
uöt8_t
 
Buf
)

153 
	`WrôeI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
MODEREG
, 1, &
Buf
);

154 
	}
}

156 
uöt8_t
 
	$RódCom∑ssMODEREG
()

158 
uöt8_t
 
Buf
[1];

160 
	`RódI2CDevi˚REG
(
I2C_COMPASS_ADD
, 
MODEREG
, 1, 
Buf
);

162  
Buf
[0];

163 
	}
}

	@dco.c

3 
	~<io.h
>

4 
	~<sig«l.h
>

5 
	~"utû.h
"

6 
	~"dco.h
"

11 
	#ACLK_CALIB_PERIOD
 128

	)

12 
	#ACLK_KHZ
 32

	)

13 
	#TARGET_DCO_KHZ
 4096

	)

14 
	#TARGET_DCO_DELTA
 (
TARGET_DCO_KHZ
 / 
ACLK_KHZ
 * 
ACLK_CALIB_PERIOD
)

	)

16 
	#TARGET_DELTA
 2048

17 
	#MAX_DEVIATION
 7

18 

	)

19 
uöt16_t
 
	gm•430_ˇlib_¥ev
;

59 
	$£t_dco_ˇlib
(
ˇlib
)

61 
BCSCTL1
 = (BCSCTL1 & ~0x07Ë| ((
ˇlib
 >> 8) & 0x07);

62 
DCOCTL
 = 
ˇlib
 & 0xff;

63 
	}
}

65 
uöt16_t
 
	$ã°_ˇlib_busywaô_dñè
(
ˇlib
)

67 
öt8_t
 
a˛k_cou¡
 = 2;

68 
uöt16_t
 
dco_¥ev
 = 0;

69 
uöt16_t
 
dco_cuº
 = 0;

71 
	`£t_dco_ˇlib
(
ˇlib
);

73 
a˛k_cou¡
-- > 0) {

74 
TBCCR0
 = 
TBR
 + 
ACLK_CALIB_PERIOD
;

75 
TBCCTL0
 &~
CCIFG
;

76 (
TBCCTL0
 & 
CCIFG
) == 0);

77 
dco_¥ev
 = 
dco_cuº
;

78 
dco_cuº
 = 
TAR
;

80  
dco_cuº
 - 
dco_¥ev
;

81 
	}
}

83 
	$busy_ˇlibøã_dco
()

85 
ˇlib
;

86 
°ï
;

89 
TACTL
 = 
TASSEL1
 | 
MC1
;

90 
TBCTL
 = 
TBSSEL0
 | 
MC1
;

91 
BCSCTL1
 = 
XT2OFF
 | 
RSEL2
;

92 
BCSCTL2
 = 0;

93 
TBCCTL0
 = 
CM0
;

99 
ˇlib
 = 0, 
°ï
 = 0x800; step != 0; step >>= 1) {

101 i‡(
	`ã°_ˇlib_busywaô_dñè
(
ˇlib
|
°ï
Ë<
TARGET_DCO_DELTA
)

102 
ˇlib
 |
°ï
;

107 i‡((
ˇlib
 & 0x0e0) == 0x0e0)

108 
ˇlib
 &= ~0x01f;

110 
	`£t_dco_ˇlib
–
ˇlib
 );

111 
	}
}

113 
	$m•430_timî_öô
()

115 
TACTL
 = 
TACLR
;

116 
TAIV
 = 0;

117 
TBCTL
 = 
TBCLR
;

118 
TBIV
 = 0;

120 
	`busy_ˇlibøã_dco
();

122 
	`DINT
();

123 
BCSCTL1
 = 0x80 | (BCSCTL1 & ((0x04 | 0x02) | 0x01));

124 
BCSCTL2
 = 0x04;

125 
IE1
 &= ~(1 << 1);

130 
	`EINT
();

131 
	}
}

	@delay.c

1 
	~<io.h
>

2 
	~"dñay.h
"

4 
ölöe
 
	$usdñay
(
uöt16_t
 
us
)

6 
uöt16_t
 
i
;

7 i‡(
us
 < 500) {

8 
i
 = 2; i < 
us
; i++) {

9 
__asm
 volatile (

16 
i
 = 0; i < 
us
; i++) {

17 
__asm
 volatile (

24 
	}
}

26 
ölöe
 
	$msdñay
(
uöt16_t
 
ms
)

28 
ms
-- != 0)

29 
	`usdñay
(1000);

30 
	}
}

32 
ölöe
 
	$hwdñay
(
uöt32_t
 
us
)

34 
	`usdñay
(
us
);

35 
	}
}

	@gps.c

1 
	~<sys/öây≥s.h
>

2 
	~<io.h
>

3 
	~<sig«l.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~"gps.h
"

8 
	~"comm⁄_def.h
"

10 
	~"utû.h
"

11 
	~"Àd.h
"

12 
	~"dñay.h
"

13 
	~"ußπ.h
"

14 
	~"maö.h
"

15 
	~"timî.h
"

16 
	~"i2c.h
"

18 
	#RX_BUF_SIZE
 2048

	)

19 
	#RX_BUF_MASK
 ( 
RX_BUF_SIZE
 - 1 )

	)

21 
	ggpsSATU£
 = 0;

22 
	ggpsHDOP
 = 0;

23 
	gGPSRowD©a
[256];

25 vﬁ©ûê
	gRX_HódPå
;

26 vﬁ©ûê
	gRX_TaûPå
;

27 vﬁ©ûê
	gRX_Buf„r
[ 
RX_BUF_SIZE
 ];

28 
	gBufGPSLöe
[256];

29 
	ggpsAvaûabÀ
=0;

35 
	ggpsUTCTime
=0;

36 
	ggpsKORTimeY
=0;

37 
	ggpsKORTimeM
=0;

38 
	ggpsKORTimeD
=0;

39 
	ggpsKORTimeHH
=0;

40 
	ggpsKORTimeMM
=0;

41 
	ggpsKORTimeSS
=0;

44 
	$InôGPSU¨t
()

46 
	`msdñay
(1);

49 
	`SET_PORT_IO_I2C_SDA_PIN
();

50 
	`SET_PORT_IO_I2C_SCL_PIN
();

54 
	`SET_PORT_MOD_UTX0_PIN
();

55 
	`SET_PORT_MOD_URX0_PIN
();

59 
U0CTL
 = 0;

62 
U0CTL
 = 
CHAR
 + 
SWRST
;

63 
ME1
 = 
UTXE0
 + 
URXE0
;

64 
U0TCTL
 = 
SSEL_ACLK
;

65 
U0BR1
 = 0x00;

66 
U0BR0
 = 0x03;

67 
U0MCTL
 = 0x4A;

68 
U0CTL
 &~
SWRST
;

70 
	`BIT_CLEAR
(
IFG1
, 
UTXIFG0
);

71 
	`BIT_CLEAR
(
IFG1
, 
URXIFG0
);

73 
IFG1
 &~
URXIFG0
; 
IE1
 |
URXIE0
;

79 
	}
}

82 
	$öãºu±
(
USART0RX_VECTOR
Ë
	$U¨t0Rx
()

84 
c
 = 
U0RXBUF
;

86 
tmp_hód
;

88 if(
U¨tTy≥
 =
SCI_GPS
)

90 
tmp_hód
 = (
RX_HódPå
 + 1Ë& 
RX_BUF_MASK
;

93 if–
tmp_hód
 =
RX_TaûPå
 )

96 
RX_Buf„r
[ 
RX_HódPå
 = 
tmp_hód
 ] = 
c
;

98 
	`Àd2_toggÀ
();

101 if(
U¨tTy≥
 =
SCI_BT
)

106 
	}
}

108 
	$U¨t0GëByã
(*
c
)

110 
Rëu∫VÆue
 = 
TRUE
;

111 
tmp_èû
;

113 
	`CRITICAL_SECTION_START
();

115 if(
RX_HódPå
 =
RX_TaûPå
)

116 
Rëu∫VÆue
 = 
FALSE
;

118 if(
Rëu∫VÆue
 =
TRUE
)

120 
RX_TaûPå
 = 
tmp_èû
 = ( RX_TaûPå + 1 ) & 
RX_BUF_MASK
;

121 *
c
 = 
RX_Buf„r
[
tmp_èû
];

124 
	`CRITICAL_SECTION_END
();

126  
Rëu∫VÆue
;

128 
	}
}

131 
	$GPSGëD©a
()

133 
c
;

134 
i
=0;

137 
TRUE
)

139 if(
	`U¨t0GëByã
(&
c
))

141 if(!
c
) ;

143 if(!
i
)

144 if(
c
!='$') ;

146 
BufGPSLöe
[
i
++] = 
c
;

148 if(
c
=='\n')

150 if(
i
 >(
BufGPSLöe
))

151 
i
 = (
BufGPSLöe
) - 1;

155 
BufGPSLöe
[
i
] = 0;

160 if(
i
>=(
BufGPSLöe
))

161 
i
=0;

187  
i
;

188 
	}
}

190 
	$GPS_isVaûd
(
Àn
)

192 
i
=1;

193 
c1
;

194 
c2
;

195 
checksum
=0;

196 
i
<
Àn
-2)

198 if(
BufGPSLöe
[
i
]=='*')

201 
checksum
^=
BufGPSLöe
[
i
++];

204 
c1
 = 
BufGPSLöe
[
i
+1];

205 
c2
 = 
BufGPSLöe
[
i
+2];

207 if(
c1
 >='A')

208 
c1
 = c1 -'A' + 10;

210 
c1
 = c1 -'0';

212 if(
c2
 >='A')

213 
c2
 = c2 -'A' + 10;

215 
c2
 = c2 -'0';

216 
c1
 = c1<<4 | 
c2
;

218 
checksum
 ^
c1
;

220  
checksum
;

221 
	}
}

224 
	$GPS_∑r£GPGGA
(
Àn
)

226 
i
=7;

227 
œt0
,
œt1
, 
l⁄0
, 
l⁄1
;

231 if(
BufGPSLöe
[
i
]==',' &&BufGPSLine[i+1]==',')

234 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

237 
œt0
 = (()(
BufGPSLöe
[
i
]- 0x30) * 1000) + \

238 (()(
BufGPSLöe
[
i
+1] - 0x30) * 100) + \

239 (()(
BufGPSLöe
[
i
+2] - 0x30) * 10) + \

240 (()(
BufGPSLöe
[
i
+3] - 0x30));

242 
œt1
 = (()(
BufGPSLöe
[
i
+5]- 0x30) * 1000) + \

243 (()(
BufGPSLöe
[
i
+6] - 0x30) * 100) + \

244 (()(
BufGPSLöe
[
i
+7] - 0x30) * 10) + \

245 (()(
BufGPSLöe
[
i
+8] - 0x30));

248 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

250 if(
BufGPSLöe
[
i
] == 'S')

251 
œt0
 = -lat0;

252 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

256 
l⁄0
 = (()(
BufGPSLöe
[
i
]- 0x30) * 10000) + \

257 (()(
BufGPSLöe
[
i
+1]- 0x30) * 1000) + \

258 (()(
BufGPSLöe
[
i
+2] - 0x30) * 100) + \

259 (()(
BufGPSLöe
[
i
+3] - 0x30) * 10) + \

260 (()(
BufGPSLöe
[
i
+4] - 0x30));

262 
l⁄1
 = (()(
BufGPSLöe
[
i
+6]- 0x30) * 1000) + \

263 (()(
BufGPSLöe
[
i
+7] - 0x30) * 100) + \

264 (()(
BufGPSLöe
[
i
+8] - 0x30) * 10) + \

265 (()(
BufGPSLöe
[
i
+9] - 0x30));

268 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

270 if(
BufGPSLöe
[
i
] == 'W')

271 
l⁄0
 = -lon0;

273 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

275 if((
BufGPSLöe
[
i
] != '0') && (BufGPSLine[i] != ','))

276 
gpsAvaûabÀ
 = 1;

278 
gpsAvaûabÀ
 = 0;

279 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

281 
gpsSATU£
 = 
	`©oi
(&
BufGPSLöe
[
i
]);

282 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

285 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

288 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

297 
	}
}

300 
	$GPS_∑r£GPRMC
(
Àn
)

302 
i
=7;

303 
ãmp
[3];

304 
ovî
=0;

306 if(
BufGPSLöe
[
i
]==',' &&BufGPSLine[i+1]==',')

310 
gpsKORTimeHH
 = 
gpsUTCTime
/10000;

311 
gpsKORTimeHH
 += 9;

312 if(
gpsKORTimeHH
>=24){

313 
ovî
 = 1;

314 
gpsKORTimeHH
 -=24;

316 
gpsKORTimeMM
 = (
gpsUTCTime
%10000)/100;

317 
gpsKORTimeSS
 = (
gpsUTCTime
%100);

319 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

321 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

323 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

325 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

327 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

329 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

331 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

333 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

336 
ãmp
[2] = 0;

337 
ãmp
[0] = 
BufGPSLöe
[
i
++];

338 
ãmp
[1] = 
BufGPSLöe
[
i
++];

339 
gpsKORTimeD
 = 
	`©oi
(
ãmp
);

340 
gpsKORTimeD
 +
ovî
;

341 
ãmp
[0] = 
BufGPSLöe
[
i
++];

342 
ãmp
[1] = 
BufGPSLöe
[
i
++];

343 
gpsKORTimeM
 = 
	`©oi
(
ãmp
);

344 
ãmp
[0] = 
BufGPSLöe
[
i
++];

345 
ãmp
[1] = 
BufGPSLöe
[
i
];

346 
gpsKORTimeY
 = 
	`©oi
(
ãmp
);

347 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

351 
	}
}

353 
	$GPS_∑r£GPVTG
(
Àn
)

355 
i
=7;

357 if(
BufGPSLöe
[
i
]==',' &&BufGPSLine[i+1]==',')

361 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

363 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

365 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

367 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

369 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

371 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

373 
BufGPSLöe
[
i
++] !','){if(i>=
Àn
) ;}

377 
	}
}

379 
	$GPSTask
()

381 
i
;

393 
	`_DINT
();

394 
	`InôGPSU¨t
();

395 
	`_EINT
();

397 
	`SCIDebugExtSñe˘
(
SCI_GPS
);

402 
i
 = 
	`GPSGëD©a
();

405 if(
	`GPS_isVaûd
(
i
))

408 if(!
	`°∫cmp
("$GPGGA", 
BufGPSLöe
, 6))

410 
	`GPS_∑r£GPGGA
(
i
);

412 
	`mem˝y
(
GPSRowD©a
, 
BufGPSLöe
, 256);

427 if(
BTC⁄sﬁe
 =
OFF
)

429 
	`_DINT
();

430 
	`u¨t_öô
();

431 
	`_EINT
();

432 
	`SCIDebugExtSñe˘
(
SCI_DEBUG
);

437 
	`_DINT
();

438 
	`InôBTU¨t
();

439 
	`_EINT
();

440 
	`SCIDebugExtSñe˘
(
SCI_BT
);

460 
	}
}

	@h/OffstMapInit.h

42 
	#NA_SpiBôOrdî_O
 (0x0)

	)

43 
	#NA_SpiBôOrdî_B
 (0)

	)

44 
	#NA_SpiBôOrdî_I
 (0x0)

	)

45 
	#NA_SpiBôOrdîLsbFú°_C
 (0x0)

	)

46 
	#NA_SpiBôOrdîMsbFú°_C
 (0x1)

	)

49 
	#NA_SpiTxDrivî_O
 (0x0)

	)

50 
	#NA_SpiTxDrivî_B
 (1)

	)

51 
	#NA_SpiTxDrivî_I
 (0x0)

	)

52 
	#NA_SpiTxDrivîO≥nDøö_C
 (0x0)

	)

53 
	#NA_SpiTxDrivîPushPuŒ_C
 (0x1)

	)

56 
	#NA_IrqPﬁ¨ôy_O
 (0x0)

	)

57 
	#NA_IrqPﬁ¨ôy_B
 (2)

	)

58 
	#NA_IrqPﬁ¨ôy_I
 (0x0)

	)

59 
	#NA_IrqPﬁ¨ôyA˘iveLow_C
 (0x0)

	)

60 
	#NA_IrqPﬁ¨ôyA˘iveHigh_C
 (0x1)

	)

63 
	#NA_IrqDrivî_O
 (0x0)

	)

64 
	#NA_IrqDrivî_B
 (3)

	)

65 
	#NA_IrqDrivî_I
 (0x0)

	)

66 
	#NA_IrqDrivîO≥nDøö_C
 (0x0)

	)

67 
	#NA_IrqDrivîPushPuŒ_C
 (0x1)

	)

71 
	#NA_Vîsi⁄_O
 (0x1)

	)

72 
	#NA_Vîsi⁄_MSB
 (7)

	)

73 
	#NA_Vîsi⁄_LSB
 (0)

	)

74 
	#NA_Vîsi⁄_I
 (0x5)

	)

77 
	#NA_WakeUpTimeByã_O
 (0x1)

	)

78 
	#NA_WakeUpTimeByã_MSB
 (7)

	)

79 
	#NA_WakeUpTimeByã_LSB
 (0)

	)

80 
	#NA_WakeUpTimeByã_I
 (0x0)

	)

84 
	#NA_Revisi⁄_O
 (0x2)

	)

85 
	#NA_Revisi⁄_MSB
 (7)

	)

86 
	#NA_Revisi⁄_LSB
 (0)

	)

87 
	#NA_Revisi⁄_I
 (0x1)

	)

90 
	#NA_WakeUpTimeWe_O
 (0x2)

	)

91 
	#NA_WakeUpTimeWe_MSB
 (3)

	)

92 
	#NA_WakeUpTimeWe_LSB
 (1)

	)

93 
	#NA_WakeUpTimeWe_I
 (0x0)

	)

97 
	#NA_B©tMgmtE«bÀ_O
 (0x3)

	)

98 
	#NA_B©tMgmtE«bÀ_B
 (7)

	)

99 
	#NA_B©tMgmtE«bÀ_I
 (0x0)

	)

102 
	#NA_B©tMgmtThªshﬁd_O
 (0x3)

	)

103 
	#NA_B©tMgmtThªshﬁd_MSB
 (4)

	)

104 
	#NA_B©tMgmtThªshﬁd_LSB
 (1)

	)

105 
	#NA_B©tMgmtThªshﬁd_I
 (0x0)

	)

108 
	#NA_B©tMgmtCom∑ª_O
 (0x3)

	)

109 
	#NA_B©tMgmtCom∑ª_B
 (0)

	)

110 
	#NA_B©tMgmtCom∑ª_I
 (0x0)

	)

114 
	#NA_DioDúe˘i⁄_O
 (0x4)

	)

115 
	#NA_DioDúe˘i⁄_B
 (0)

	)

116 
	#NA_DioDúe˘i⁄_I
 (0x0)

	)

119 
	#NA_DioOutVÆueAœrmE«bÀ_O
 (0x4)

	)

120 
	#NA_DioOutVÆueAœrmE«bÀ_B
 (1)

	)

121 
	#NA_DioOutVÆueAœrmE«bÀ_I
 (0x0)

	)

124 
	#NA_DioAœrmSèπ_O
 (0x4)

	)

125 
	#NA_DioAœrmSèπ_B
 (2)

	)

126 
	#NA_DioAœrmSèπ_I
 (0x0)

	)

129 
	#NA_DioAœrmPﬁ¨ôy_O
 (0x4)

	)

130 
	#NA_DioAœrmPﬁ¨ôy_B
 (3)

	)

131 
	#NA_DioAœrmPﬁ¨ôy_I
 (0x0)

	)

134 
	#NA_DioU£PuŒup_O
 (0x4)

	)

135 
	#NA_DioU£PuŒup_B
 (4)

	)

136 
	#NA_DioU£PuŒup_I
 (0x0)

	)

139 
	#NA_DioU£PuŒdown_O
 (0x4)

	)

140 
	#NA_DioU£PuŒdown_B
 (5)

	)

141 
	#NA_DioU£PuŒdown_I
 (0x0)

	)

144 
	#NA_DioInVÆueAœrmSètus_O
 (0x4)

	)

145 
	#NA_DioInVÆueAœrmSètus_MSB
 (3)

	)

146 
	#NA_DioInVÆueAœrmSètus_LSB
 (0)

	)

147 
	#NA_DioInVÆueAœrmSètus_I
 (0x0)

	)

151 
	#NA_DioP‹tWe_O
 (0x5)

	)

152 
	#NA_DioP‹tWe_MSB
 (3)

	)

153 
	#NA_DioP‹tWe_LSB
 (0)

	)

154 
	#NA_DioP‹tWe_I
 (0x0)

	)

158 
	#NA_E«bÀWakeUpRtc_O
 (0x6)

	)

159 
	#NA_E«bÀWakeUpRtc_B
 (0)

	)

160 
	#NA_E«bÀWakeUpRtc_I
 (0x0)

	)

163 
	#NA_E«bÀWakeUpDio_O
 (0x6)

	)

164 
	#NA_E«bÀWakeUpDio_B
 (1)

	)

165 
	#NA_E«bÀWakeUpDio_I
 (0x0)

	)

168 
	#NA_PowîUpTime_O
 (0x6)

	)

169 
	#NA_PowîUpTime_MSB
 (6)

	)

170 
	#NA_PowîUpTime_LSB
 (4)

	)

171 
	#NA_PowîUpTime_I
 (0x0)

	)

172 
	#NA_PowîUpTime1Ticks_C
 (0x1)

	)

173 
	#NA_PowîUpTime2Ticks_C
 (0x2)

	)

174 
	#NA_PowîUpTime4Ticks_C
 (0x3)

	)

175 
	#NA_PowîUpTime8Ticks_C
 (0x4)

	)

176 
	#NA_PowîUpTime16Ticks_C
 (0x5)

	)

177 
	#NA_PowîUpTime32Ticks_C
 (0x6)

	)

178 
	#NA_PowîUpTime64Ticks_C
 (0x7)

	)

179 
	#NA_PowîUpTime128Ticks_C
 (0x0)

	)

182 
	#NA_PowîDownMode_O
 (0x6)

	)

183 
	#NA_PowîDownMode_B
 (7)

	)

184 
	#NA_PowîDownMode_I
 (0x0)

	)

185 
	#NA_PowîDownModeFuŒ_C
 (0x0)

	)

186 
	#NA_PowîDownModePad_C
 (0x1)

	)

190 
	#NA_PowîDown_O
 (0x7)

	)

191 
	#NA_PowîDown_B
 (0)

	)

192 
	#NA_PowîDown_I
 (0x0)

	)

195 
	#NA_Re£tBbClockG©e_O
 (0x7)

	)

196 
	#NA_Re£tBbClockG©e_B
 (1)

	)

197 
	#NA_Re£tBbClockG©e_I
 (0x1)

	)

200 
	#NA_Re£tBbRadioCål_O
 (0x7)

	)

201 
	#NA_Re£tBbRadioCål_B
 (2)

	)

202 
	#NA_Re£tBbRadioCål_I
 (0x1)

	)

205 
	#NA_U£PuŒup4Te°_O
 (0x7)

	)

206 
	#NA_U£PuŒup4Te°_B
 (6)

	)

207 
	#NA_U£PuŒup4Te°_I
 (0x0)

	)

210 
	#NA_U£PuŒdown4Te°_O
 (0x7)

	)

211 
	#NA_U£PuŒdown4Te°_B
 (7)

	)

212 
	#NA_U£PuŒdown4Te°_I
 (0x0)

	)

216 
	#NA_E«bÀBbCry°Æ_O
 (0x8)

	)

217 
	#NA_E«bÀBbCry°Æ_B
 (0)

	)

218 
	#NA_E«bÀBbCry°Æ_I
 (0x0)

	)

221 
	#NA_E«bÀBbClock_O
 (0x8)

	)

222 
	#NA_E«bÀBbClock_B
 (1)

	)

223 
	#NA_E«bÀBbClock_I
 (0x0)

	)

226 
	#NA_By∑ssBbCry°Æ_O
 (0x8)

	)

227 
	#NA_By∑ssBbCry°Æ_B
 (3)

	)

228 
	#NA_By∑ssBbCry°Æ_I
 (0x0)

	)

231 
	#NA_FótuªClockFªq_O
 (0x8)

	)

232 
	#NA_FótuªClockFªq_MSB
 (6)

	)

233 
	#NA_FótuªClockFªq_LSB
 (4)

	)

234 
	#NA_FótuªClockFªq_I
 (0x0)

	)

236 
	#NA_FótuªClockDiv1_C
 (0x7)

	)

237 
	#NA_FótuªClockDiv2_C
 (0x6)

	)

238 
	#NA_FótuªClockDiv4_C
 (0x5)

	)

239 
	#NA_FótuªClockDiv8_C
 (0x4)

	)

240 
	#NA_FótuªClockDiv16_C
 (0x3)

	)

241 
	#NA_FótuªClockDiv32_C
 (0x2)

	)

242 
	#NA_FótuªClockDiv64_C
 (0x1)

	)

243 
	#NA_FótuªClockDiv128_C
 (0x0)

	)

246 
	#NA_E«bÀFótuªClock_O
 (0x8)

	)

247 
	#NA_E«bÀFótuªClock_B
 (7)

	)

248 
	#NA_E«bÀFótuªClock_I
 (0x0)

	)

252 
	#NA_U£PuŒup4Spi˛k_O
 (0x9)

	)

253 
	#NA_U£PuŒup4Spi˛k_B
 (0)

	)

254 
	#NA_U£PuŒup4Spi˛k_I
 (0x0)

	)

257 
	#NA_U£PuŒdown4Spi˛k_O
 (0x9)

	)

258 
	#NA_U£PuŒdown4Spi˛k_B
 (1)

	)

259 
	#NA_U£PuŒdown4Spi˛k_I
 (0x0)

	)

262 
	#NA_U£PuŒup4Spis¢_O
 (0x9)

	)

263 
	#NA_U£PuŒup4Spis¢_B
 (2)

	)

264 
	#NA_U£PuŒup4Spis¢_I
 (0x0)

	)

267 
	#NA_U£PuŒdown4Spis¢_O
 (0x9)

	)

268 
	#NA_U£PuŒdown4Spis¢_B
 (3)

	)

269 
	#NA_U£PuŒdown4Spis¢_I
 (0x0)

	)

272 
	#NA_U£PuŒup4Spúxd_O
 (0x9)

	)

273 
	#NA_U£PuŒup4Spúxd_B
 (4)

	)

274 
	#NA_U£PuŒup4Spúxd_I
 (0x0)

	)

277 
	#NA_U£PuŒdown4Spúxd_O
 (0x9)

	)

278 
	#NA_U£PuŒdown4Spúxd_B
 (5)

	)

279 
	#NA_U£PuŒdown4Spúxd_I
 (0x0)

	)

282 
	#NA_U£PuŒup4Spôxd_O
 (0x9)

	)

283 
	#NA_U£PuŒup4Spôxd_B
 (6)

	)

284 
	#NA_U£PuŒup4Spôxd_I
 (0x0)

	)

287 
	#NA_U£PuŒdown4Spôxd_O
 (0x9)

	)

288 
	#NA_U£PuŒdown4Spôxd_B
 (7)

	)

289 
	#NA_U£PuŒdown4Spôxd_I
 (0x0)

	)

293 
	#NA_U£PuŒup4P‹_O
 (0xA)

	)

294 
	#NA_U£PuŒup4P‹_B
 (0)

	)

295 
	#NA_U£PuŒup4P‹_I
 (0x0)

	)

298 
	#NA_U£PuŒdown4P‹_O
 (0xA)

	)

299 
	#NA_U£PuŒdown4P‹_B
 (1)

	)

300 
	#NA_U£PuŒdown4P‹_I
 (0x0)

	)

303 
	#NA_U£PuŒup4Pamp_O
 (0xA)

	)

304 
	#NA_U£PuŒup4Pamp_B
 (2)

	)

305 
	#NA_U£PuŒup4Pamp_I
 (0x0)

	)

308 
	#NA_U£PuŒdown4Pamp_O
 (0xA)

	)

309 
	#NA_U£PuŒdown4Pamp_B
 (3)

	)

310 
	#NA_U£PuŒdown4Pamp_I
 (0x0)

	)

313 
	#NA_U£PuŒup4Ucúq_O
 (0xA)

	)

314 
	#NA_U£PuŒup4Ucúq_B
 (4)

	)

315 
	#NA_U£PuŒup4Ucúq_I
 (0x0)

	)

318 
	#NA_U£PuŒdown4Ucúq_O
 (0xA)

	)

319 
	#NA_U£PuŒdown4Ucúq_B
 (5)

	)

320 
	#NA_U£PuŒdown4Ucúq_I
 (0x0)

	)

323 
	#NA_U£PuŒup4U¸°_O
 (0xA)

	)

324 
	#NA_U£PuŒup4U¸°_B
 (6)

	)

325 
	#NA_U£PuŒup4U¸°_I
 (0x0)

	)

328 
	#NA_U£PuŒdown4U¸°_O
 (0xA)

	)

329 
	#NA_U£PuŒdown4U¸°_B
 (7)

	)

330 
	#NA_U£PuŒdown4U¸°_I
 (0x0)

	)

334 
	#NA_WrôePuŒs4Spi_O
 (0xB)

	)

335 
	#NA_WrôePuŒs4Spi_B
 (0)

	)

336 
	#NA_WrôePuŒs4Spi_I
 (0x0)

	)

339 
	#NA_WrôePuŒs4Pads_O
 (0xB)

	)

340 
	#NA_WrôePuŒs4Pads_B
 (1)

	)

341 
	#NA_WrôePuŒs4Pads_I
 (0x0)

	)

353 
	#NA_RamIndex_O
 (0xE)

	)

354 
	#NA_RamIndex_MSB
 (1)

	)

355 
	#NA_RamIndex_LSB
 (0)

	)

356 
	#NA_RamIndex_I
 (0x0)

	)

359 
	#NA_Devi˚Sñe˘_O
 (0xE)

	)

360 
	#NA_Devi˚Sñe˘_MSB
 (5)

	)

361 
	#NA_Devi˚Sñe˘_LSB
 (4)

	)

362 
	#NA_Devi˚Sñe˘_I
 (0x0)

	)

363 
	#NA_Devi˚Sñe˘BbRam0_C
 (0x0)

	)

364 
	#NA_Devi˚Sñe˘BbRam1_C
 (0x1)

	)

365 
	#NA_Devi˚Sñe˘Csq_C
 (0x2)

	)

366 
	#NA_Devi˚Sñe˘D3l_C
 (0x3)

	)

370 
	#NA_TxIrqE«bÀ_O
 (0xF)

	)

371 
	#NA_TxIrqE«bÀ_B
 (0)

	)

372 
	#NA_TxIrqE«bÀ_I
 (0x0)

	)

375 
	#NA_RxIrqE«bÀ_O
 (0xF)

	)

376 
	#NA_RxIrqE«bÀ_B
 (1)

	)

377 
	#NA_RxIrqE«bÀ_I
 (0x0)

	)

380 
	#NA_BbTimîIrqE«bÀ_O
 (0xF)

	)

381 
	#NA_BbTimîIrqE«bÀ_B
 (2)

	)

382 
	#NA_BbTimîIrqE«bÀ_I
 (0x0)

	)

385 
	#NA_LoIrqE«bÀ_O
 (0xF)

	)

386 
	#NA_LoIrqE«bÀ_B
 (3)

	)

387 
	#NA_LoIrqE«bÀ_I
 (0x0)

	)

390 
	#NA_TxIrqSètus_O
 (0xF)

	)

391 
	#NA_TxIrqSètus_B
 (4)

	)

392 
	#NA_TxIrqSètus_I
 (0x0)

	)

395 
	#NA_RxIrqSètus_O
 (0xF)

	)

396 
	#NA_RxIrqSètus_B
 (5)

	)

397 
	#NA_RxIrqSètus_I
 (0x0)

	)

400 
	#NA_BbTimîIrqSètus_O
 (0xF)

	)

401 
	#NA_BbTimîIrqSètus_B
 (6)

	)

402 
	#NA_BbTimîIrqSètus_I
 (0x0)

	)

405 
	#NA_LoIrqSètus_O
 (0xF)

	)

406 
	#NA_LoIrqSètus_B
 (7)

	)

407 
	#NA_LoIrqSètus_I
 (0x0)

	)

412 
	#NA_WakeUpTime_MSB
 (31)

	)

413 
	#NA_WakeUpTime_LSB
 (8)

	)

414 
	#NA_WakeUpTime_I
 (0x0)

	)

433 
	#NA_TxI¡sRawSèt_O
 (0x10)

	)

434 
	#NA_TxI¡sRawSèt_MSB
 (5)

	)

435 
	#NA_TxI¡sRawSèt_LSB
 (0)

	)

436 
	#NA_TxI¡sRawSèt_I
 (0x0)

	)

439 
	#NA_TxI¡sRe£t_O
 (0x10)

	)

440 
	#NA_TxI¡sRe£t_MSB
 (5)

	)

441 
	#NA_TxI¡sRe£t_LSB
 (0)

	)

442 
	#NA_TxI¡sRe£t_I
 (0x0)

	)

444 
	#NA_TxTimeSlŸEnd_B
 (5)

	)

445 
	#NA_TxTimeSlŸTOut_B
 (4)

	)

446 
	#NA_TxUndîrun_B
 (3)

	)

447 
	#NA_TxEnd_B
 (2)

	)

448 
	#NA_TxBuf„rRdy_MSB
 (1)

	)

449 
	#NA_TxBuf„rRdy_LSB
 (0)

	)

453 
	#NA_RxI¡sRawSèt_O
 (0x11)

	)

454 
	#NA_RxI¡sRawSèt_MSB
 (6)

	)

455 
	#NA_RxI¡sRawSèt_LSB
 (0)

	)

456 
	#NA_RxI¡sRawSèt_I
 (0x0)

	)

459 
	#NA_RxI¡sRe£t_O
 (0x11)

	)

460 
	#NA_RxI¡sRe£t_MSB
 (6)

	)

461 
	#NA_RxI¡sRe£t_LSB
 (0)

	)

462 
	#NA_RxI¡sRe£t_I
 (0x0)

	)

464 
	#NA_RxTimeSlŸEnd_B
 (6)

	)

465 
	#NA_RxTimeSlŸTOut_B
 (5)

	)

466 
	#NA_RxOvîÊow_B
 (4)

	)

467 
	#NA_RxHódîEnd_B
 (3)

	)

468 
	#NA_RxEnd_B
 (2)

	)

469 
	#NA_RxBuf„rRdy_MSB
 (1)

	)

470 
	#NA_RxBuf„rRdy_LSB
 (0)

	)

474 
	#NA_LoI¡sRawSèt_O
 (0x12)

	)

475 
	#NA_LoI¡sRawSèt_B
 (1)

	)

476 
	#NA_LoI¡sRawSèt_I
 (0x0)

	)

479 
	#NA_LoI¡sRe£t_O
 (0x12)

	)

480 
	#NA_LoI¡sRe£t_B
 (1)

	)

481 
	#NA_LoI¡sRe£t_MSB
 (1)

	)

482 
	#NA_LoI¡sRe£t_LSB
 (0)

	)

483 
	#NA_LoI¡sRe£t_I
 (0x0)

	)

485 
	#NA_LoTunögRódy_B
 (1)

	)

488 
	#NA_CÀ¨Ba£b™dTimîI¡_O
 (0x12)

	)

489 
	#NA_CÀ¨Ba£b™dTimîI¡_B
 (7)

	)

490 
	#NA_CÀ¨Ba£b™dTimîI¡_I
 (0)

	)

494 
	#NA_TxI¡sEn_O
 (0x13)

	)

495 
	#NA_TxI¡sEn_MSB
 (5)

	)

496 
	#NA_TxI¡sEn_LSB
 (0)

	)

497 
	#NA_TxI¡sEn_I
 (0x0)

	)

501 
	#NA_RxI¡sEn_O
 (0x14)

	)

502 
	#NA_RxI¡sEn_MSB
 (6)

	)

503 
	#NA_RxI¡sEn_LSB
 (0)

	)

504 
	#NA_RxI¡sEn_I
 (0x0)

	)

508 
	#NA_LoI¡sEn_O
 (0x15)

	)

509 
	#NA_LoI¡sEn_B
 (1)

	)

510 
	#NA_LoI¡sEn_I
 (0x0)

	)

519 
	#NA_LoRxC≠sVÆue_O
 (0x16)

	)

520 
	#NA_LoRxC≠sVÆue_MSB
 (21)

	)

521 
	#NA_LoRxC≠sVÆue_LSB
 (0)

	)

522 
	#NA_LoRxC≠sVÆue_I
 (0x200040)

	)

526 
	#NA_LoTxC≠sVÆue_O
 (0x19)

	)

527 
	#NA_LoTxC≠sVÆue_MSB
 (21)

	)

528 
	#NA_LoTxC≠sVÆue_LSB
 (0)

	)

529 
	#NA_LoTxC≠sVÆue_I
 (0x200040)

	)

533 
	#NA_LoE«bÀFa°Tunög_O
 (0x1C)

	)

534 
	#NA_LoE«bÀFa°Tunög_B
 (0)

	)

535 
	#NA_LoE«bÀFa°Tunög_I
 (0x0)

	)

540 
	#NA_LoFa°TunögLevñ_O
 (0x1C)

	)

541 
	#NA_LoFa°TunögLevñ_MSB
 (3)

	)

542 
	#NA_LoFa°TunögLevñ_LSB
 (1)

	)

543 
	#NA_LoFa°TunögLevñ_I
 (0x0)

	)

546 
	#NA_LoE«bÀLsbNeg_O
 (0x1C)

	)

547 
	#NA_LoE«bÀLsbNeg_B
 (4)

	)

548 
	#NA_LoE«bÀLsbNeg_I
 (0x0)

	)

551 
	#NA_U£LoRxC≠s_O
 (0x1C)

	)

552 
	#NA_U£LoRxC≠s_B
 (7)

	)

553 
	#NA_U£LoRxC≠s_I
 (0x0)

	)

557 
	#NA_LoT¨gëVÆue_O
 (0x1D)

	)

558 
	#NA_LoT¨gëVÆue_MSB
 (15)

	)

559 
	#NA_LoT¨gëVÆue_LSB
 (0)

	)

560 
	#NA_LoT¨gëVÆue_I
 (0x0000)

	)

569 
	#NA_AgcThªsHﬁd1_O
 (0x1F)

	)

570 
	#NA_AgcThªsHﬁd1_MSB
 (7)

	)

571 
	#NA_AgcThªsHﬁd1_LSB
 (0)

	)

572 
	#NA_AgcThªsHﬁd1_I
 (0x3)

	)

576 
	#NA_AgcThªsHﬁd2_O
 (0x20)

	)

577 
	#NA_AgcThªsHﬁd2_MSB
 (7)

	)

578 
	#NA_AgcThªsHﬁd2_LSB
 (0)

	)

579 
	#NA_AgcThªsHﬁd2_I
 (0x6)

	)

583 
	#NA_HﬁdAgcInBôSync_O
 (0x21)

	)

584 
	#NA_HﬁdAgcInBôSync_MSB
 (6)

	)

585 
	#NA_HﬁdAgcInBôSync_LSB
 (0)

	)

586 
	#NA_HﬁdAgcInBôSync_I
 (0x18)

	)

589 
	#NA_HﬁdAgcInFømeSync_O
 (0x21)

	)

590 
	#NA_HﬁdAgcInFømeSync_B
 (7)

	)

591 
	#NA_HﬁdAgcInFømeSync_I
 (0x1)

	)

595 
	#NA_AgcDódTime_O
 (0x22)

	)

596 
	#NA_AgcDódTime_MSB
 (5)

	)

597 
	#NA_AgcDódTime_LSB
 (0)

	)

598 
	#NA_AgcDódTime_I
 (0xC)

	)

601 
	#NA_AgcNªgLígth_O
 (0x22)

	)

602 
	#NA_AgcNªgLígth_MSB
 (7)

	)

603 
	#NA_AgcNªgLígth_LSB
 (6)

	)

604 
	#NA_AgcNªgLígth_I
 (0x0)

	)

608 
	#NA_AgcI¡Time_O
 (0x23)

	)

609 
	#NA_AgcI¡Time_MSB
 (11)

	)

610 
	#NA_AgcI¡Time_LSB
 (0)

	)

611 
	#NA_AgcI¡Time_I
 (0x200)

	)

622 
	#NA_AgcVÆue_O
 (0x25)

	)

623 
	#NA_AgcVÆue_MSB
 (5)

	)

624 
	#NA_AgcVÆue_LSB
 (0)

	)

625 
	#NA_AgcVÆue_I
 (0x3F)

	)

628 
	#NA_AgcDeÁu…En_O
 (0x25)

	)

629 
	#NA_AgcDeÁu…En_B
 (6)

	)

630 
	#NA_AgcDeÁu…En_I
 (0x0)

	)

633 
	#NA_AgcHﬁd_O
 (0x25)

	)

634 
	#NA_AgcHﬁd_B
 (7)

	)

635 
	#NA_AgcHﬁd_I
 (0x0)

	)

640 
	#NA_AgcRssiThªs_O
 (0x26)

	)

641 
	#NA_AgcRssiThªs_MSB
 (5)

	)

642 
	#NA_AgcRssiThªs_LSB
 (0)

	)

643 
	#NA_AgcRssiThªs_I
 (0x1E)

	)

646 
	#NA_AgcGaö_O
 (0x26)

	)

647 
	#NA_AgcGaö_MSB
 (5)

	)

648 
	#NA_AgcGaö_LSB
 (0)

	)

649 
	#NA_AgcGaö_I
 (0x0)

	)

658 
	#NA_ChúpFûãrC≠s_O
 (0x27)

	)

659 
	#NA_ChúpFûãrC≠s_MSB
 (3)

	)

660 
	#NA_ChúpFûãrC≠s_LSB
 (0)

	)

661 
	#NA_ChúpFûãrC≠s_I
 (0x6)

	)

664 
	#NA_F˘ClockEn_O
 (0x27)

	)

665 
	#NA_F˘ClockEn_B
 (4)

	)

666 
	#NA_F˘ClockEn_I
 (0x0)

	)

669 
	#NA_SèπF˘Mósuª_O
 (0x27)

	)

670 
	#NA_SèπF˘Mósuª_B
 (5)

	)

671 
	#NA_SèπF˘Mósuª_I
 (0x0)

	)

674 
	#NA_E«bÀTx_O
 (0x27)

	)

675 
	#NA_E«bÀTx_B
 (7)

	)

676 
	#NA_E«bÀTx_I
 (0x0)

	)

679 
	#NA_F˘Pîiod_O
 (0x27)

	)

680 
	#NA_F˘Pîiod_MSB
 (5)

	)

681 
	#NA_F˘Pîiod_LSB
 (0)

	)

682 
	#NA_F˘Pîiod_I
 (0x0)

	)

691 
	#NA_Ba£b™dTimîSèπVÆue_O
 (0x28)

	)

692 
	#NA_Ba£b™dTimîSèπVÆue_MSB
 (15)

	)

693 
	#NA_Ba£b™dTimîSèπVÆue_LSB
 (0)

	)

694 
	#NA_Ba£b™dTimîSèπVÆue_I
 (0x0)

	)

703 
	#NA_SyncW‹d_O
 (0x2A)

	)

704 
	#NA_SyncW‹d_MSB
 (63)

	)

705 
	#NA_SyncW‹d_LSB
 (0)

	)

706 
	#NA_SyncW‹d_I
 (0xAB69CA9492D52CAB)

	)

715 
	#NA_TﬂOff£tMónAck_O
 (0x2A)

	)

716 
	#NA_TﬂOff£tMónAck_MSB
 (12)

	)

717 
	#NA_TﬂOff£tMónAck_LSB
 (0)

	)

718 
	#NA_TﬂOff£tMónAck_I
 (0x0)

	)

721 
	#NA_TﬂOff£tMónAckVÆid_O
 (0x2B)

	)

722 
	#NA_TﬂOff£tMónAckVÆid_B
 (7)

	)

723 
	#NA_TﬂOff£tMónAckVÆid_I
 (0x0)

	)

727 
	#NA_TxRe•Time_O
 (0x2C)

	)

728 
	#NA_TxRe•Time_MSB
 (15)

	)

729 
	#NA_TxRe•Time_LSB
 (0)

	)

730 
	#NA_TxRe•Time_I
 (0x0)

	)

734 
	#NA_Pha£Off£tAck_O
 (0x2E)

	)

735 
	#NA_Pha£Off£tAck_MSB
 (2)

	)

736 
	#NA_Pha£Off£tAck_LSB
 (0)

	)

737 
	#NA_Pha£Off£tAck_I
 (0x0)

	)

740 
	#NA_Pha£Off£tD©a_O
 (0x2E)

	)

741 
	#NA_Pha£Off£tD©a_MSB
 (6)

	)

742 
	#NA_Pha£Off£tD©a_LSB
 (4)

	)

743 
	#NA_Pha£Off£tD©a_I
 (0x0)

	)

747 
	#NA_TﬂOff£tMónD©a_O
 (0x2F)

	)

748 
	#NA_TﬂOff£tMónD©a_MSB
 (12)

	)

749 
	#NA_TﬂOff£tMónD©a_LSB
 (0)

	)

750 
	#NA_TﬂOff£tMónD©a_I
 (0x0)

	)

753 
	#NA_TﬂOff£tMónD©aVÆid_O
 (0x30)

	)

754 
	#NA_TﬂOff£tMónD©aVÆid_B
 (7)

	)

755 
	#NA_TﬂOff£tMónD©aVÆid_I
 (0x0)

	)

764 
	#NA_RxPackëTy≥_O
 (0x31)

	)

765 
	#NA_RxPackëTy≥_MSB
 (3)

	)

766 
	#NA_RxPackëTy≥_LSB
 (0)

	)

767 
	#NA_RxPackëTy≥_I
 (0x0)

	)

770 
	#NA_RxAddrM©ch_O
 (0x31)

	)

771 
	#NA_RxAddrM©ch_MSB
 (5)

	)

772 
	#NA_RxAddrM©ch_LSB
 (4)

	)

773 
	#NA_RxAddrM©ch_I
 (0x0)

	)

776 
	#NA_RxCrc1Sèt_O
 (0x31)

	)

777 
	#NA_RxCrc1Sèt_B
 (6)

	)

778 
	#NA_RxCrc1Sèt_I
 (0x0)

	)

781 
	#NA_RxCrc2Sèt_O
 (0x31)

	)

782 
	#NA_RxCrc2Sèt_B
 (7)

	)

783 
	#NA_RxCrc2Sèt_I
 (0x0)

	)

787 
	#NA_RxC‹rBôEº_O
 (0x32)

	)

788 
	#NA_RxC‹rBôEº_MSB
 (3)

	)

789 
	#NA_RxC‹rBôEº_LSB
 (0)

	)

790 
	#NA_RxC‹rBôEº_I
 (0x0)

	)

793 
	#NA_RxC‹rEºThªs_O
 (0x32)

	)

794 
	#NA_RxC‹rEºThªs_MSB
 (7)

	)

795 
	#NA_RxC‹rEºThªs_LSB
 (4)

	)

796 
	#NA_RxC‹rEºThªs_I
 (0x3)

	)

800 
	#NA_RxAddrSegEsM©ch_O
 (0x33)

	)

801 
	#NA_RxAddrSegEsM©ch_B
 (0)

	)

802 
	#NA_RxAddrSegEsM©ch_I
 (0x0)

	)

805 
	#NA_RxAddrSegIsM©ch_O
 (0x33)

	)

806 
	#NA_RxAddrSegIsM©ch_B
 (1)

	)

807 
	#NA_RxAddrSegIsM©ch_I
 (0x0)

	)

810 
	#NA_RxCry±En_O
 (0x33)

	)

811 
	#NA_RxCry±En_B
 (4)

	)

812 
	#NA_RxCry±En_I
 (0x0)

	)

815 
	#NA_RxCry±Id_O
 (0x33)

	)

816 
	#NA_RxCry±Id_MSB
 (6)

	)

817 
	#NA_RxCry±Id_LSB
 (5)

	)

818 
	#NA_RxCry±Id_I
 (0x0)

	)

821 
	#NA_RxCry±SeqN_O
 (0x33)

	)

822 
	#NA_RxCry±SeqN_B
 (7)

	)

823 
	#NA_RxCry±SeqN_I
 (0x0)

	)

827 
	#NA_RxFec1BôEº_O
 (0x34)

	)

828 
	#NA_RxFec1BôEº_MSB
 (14)

	)

829 
	#NA_RxFec1BôEº_LSB
 (0)

	)

830 
	#NA_RxFec1BôEº_I
 (0x0)

	)

839 
	#NA_TxTimeSlŸSèπ_O
 (0x33)

	)

840 
	#NA_TxTimeSlŸSèπ_MSB
 (15)

	)

841 
	#NA_TxTimeSlŸSèπ_LSB
 (0)

	)

842 
	#NA_TxTimeSlŸSèπ_I
 (0x0)

	)

846 
	#NA_TxTimeSlŸEnd_O
 (0x35)

	)

847 
	#NA_TxTimeSlŸEnd_MSB
 (15)

	)

848 
	#NA_TxTimeSlŸEnd_LSB
 (0)

	)

849 
	#NA_TxTimeSlŸEnd_I
 (0x0)

	)

853 
	#NA_TxTimeSlŸC⁄åﬁ_O
 (0x37)

	)

854 
	#NA_TxTimeSlŸC⁄åﬁ_B
 (0)

	)

855 
	#NA_TxTimeSlŸC⁄åﬁ_I
 (0x0)

	)

858 
	#NA_RxTimeSlŸC⁄åﬁ_O
 (0x37)

	)

859 
	#NA_RxTimeSlŸC⁄åﬁ_B
 (1)

	)

860 
	#NA_RxTimeSlŸC⁄åﬁ_I
 (0x0)

	)

864 
	#NA_RxPackëSlŸ_O
 (0x38)

	)

865 
	#NA_RxPackëSlŸ_MSB
 (15)

	)

866 
	#NA_RxPackëSlŸ_LSB
 (0)

	)

867 
	#NA_RxPackëSlŸ_I
 (0x0)

	)

870 
	#NA_RxTimeSlŸSèπ_O
 (0x38)

	)

871 
	#NA_RxTimeSlŸSèπ_MSB
 (15)

	)

872 
	#NA_RxTimeSlŸSèπ_LSB
 (0)

	)

873 
	#NA_RxTimeSlŸSèπ_I
 (0x0)

	)

877 
	#NA_RxTimeSlŸEnd_O
 (0x3A)

	)

878 
	#NA_RxTimeSlŸEnd_MSB
 (15)

	)

879 
	#NA_RxTimeSlŸEnd_LSB
 (0)

	)

880 
	#NA_RxTimeSlŸEnd_I
 (0x0)

	)

889 
	#NA_TxArqC¡_O
 (0x3C)

	)

890 
	#NA_TxArqC¡_MSB
 (3)

	)

891 
	#NA_TxArqC¡_LSB
 (0)

	)

892 
	#NA_TxArqC¡_I
 (0x0)

	)

895 
	#NA_TxArqMax_O
 (0x3C)

	)

896 
	#NA_TxArqMax_MSB
 (7)

	)

897 
	#NA_TxArqMax_LSB
 (4)

	)

898 
	#NA_TxArqMax_I
 (0xE)

	)

907 
	#NA_CsqDôhîVÆue_O
 (0x3D)

	)

908 
	#NA_CsqDôhîVÆue_MSB
 (1)

	)

909 
	#NA_CsqDôhîVÆue_LSB
 (0)

	)

910 
	#NA_CsqDôhîVÆue_I
 (0x0)

	)

913 
	#NA_CsqU£Pha£Shi·_O
 (0x3D)

	)

914 
	#NA_CsqU£Pha£Shi·_B
 (2)

	)

915 
	#NA_CsqU£Pha£Shi·_I
 (0x1)

	)

918 
	#NA_CsqU£4Pha£s_O
 (0x3D)

	)

919 
	#NA_CsqU£4Pha£s_B
 (3)

	)

920 
	#NA_CsqU£4Pha£s_I
 (0x0)

	)

923 
	#NA_CsqAsyMode_O
 (0x3D)

	)

924 
	#NA_CsqAsyMode_B
 (4)

	)

925 
	#NA_CsqAsyMode_I
 (0x0)

	)

928 
	#NA_CsqMemAddrInô_O
 (0x3D)

	)

929 
	#NA_CsqMemAddrInô_B
 (5)

	)

930 
	#NA_CsqMemAddrInô_I
 (0x0)

	)

933 
	#NA_CsqU£Ram_O
 (0x3D)

	)

934 
	#NA_CsqU£Ram_B
 (6)

	)

935 
	#NA_CsqU£Ram_I
 (0x0)

	)

952 
	#NA_D3lFixnM≠_O
 (0x3F)

	)

953 
	#NA_D3lFixnM≠_B
 (0)

	)

954 
	#NA_D3lFixnM≠_I
 (0x1)

	)

957 
	#NA_D3lPomEn_O
 (0x3F)

	)

958 
	#NA_D3lPomEn_B
 (1)

	)

959 
	#NA_D3lPomEn_I
 (0x0)

	)

962 
	#NA_D3lPomLí_O
 (0x3F)

	)

963 
	#NA_D3lPomLí_MSB
 (3)

	)

964 
	#NA_D3lPomLí_LSB
 (2)

	)

965 
	#NA_D3lPomLí_I
 (0x0)

	)

968 
	#NA_D3lUpDownEx_O
 (0x3F)

	)

969 
	#NA_D3lUpDownEx_B
 (7)

	)

970 
	#NA_D3lUpDownEx_I
 (0x0)

	)

974 
	#NA_LóveM≠Thªsh1InBôsync_O
 (0x40)

	)

975 
	#NA_LóveM≠Thªsh1InBôsync_MSB
 (6)

	)

976 
	#NA_LóveM≠Thªsh1InBôsync_LSB
 (0)

	)

977 
	#NA_LóveM≠Thªsh1InBôsync_I
 (0x3)

	)

980 
	#NA_U£M≠Thªsh1InFømesync_O
 (0x40)

	)

981 
	#NA_U£M≠Thªsh1InFømesync_B
 (7)

	)

982 
	#NA_U£M≠Thªsh1InFømesync_I
 (0x0)

	)

986 
	#NA_Go2M≠Thªsh1InBôsync_O
 (0x41)

	)

987 
	#NA_Go2M≠Thªsh1InBôsync_MSB
 (6)

	)

988 
	#NA_Go2M≠Thªsh1InBôsync_LSB
 (0)

	)

989 
	#NA_Go2M≠Thªsh1InBôsync_I
 (0x7)

	)

998 
	#NA_E«bÀLO_O
 (0x42)

	)

999 
	#NA_E«bÀLO_B
 (0)

	)

1000 
	#NA_E«bÀLO_I
 (0x0)

	)

1003 
	#NA_E«bÀLOdiv10_O
 (0x42)

	)

1004 
	#NA_E«bÀLOdiv10_B
 (1)

	)

1005 
	#NA_E«bÀLOdiv10_I
 (0x0)

	)

1008 
	#NA_E«bÀCsqClock_O
 (0x42)

	)

1009 
	#NA_E«bÀCsqClock_B
 (2)

	)

1010 
	#NA_E«bÀCsqClock_I
 (0x0)

	)

1013 
	#NA_InvîtRxClock_O
 (0x42)

	)

1014 
	#NA_InvîtRxClock_B
 (3)

	)

1015 
	#NA_InvîtRxClock_I
 (0x0)

	)

1018 
	#NA_E«bÀExtPA_O
 (0x42)

	)

1019 
	#NA_E«bÀExtPA_B
 (4)

	)

1020 
	#NA_E«bÀExtPA_I
 (0x0)

	)

1029 
	#NA_L«FªqAdju°_O
 (0x43)

	)

1030 
	#NA_L«FªqAdju°_MSB
 (2)

	)

1031 
	#NA_L«FªqAdju°_LSB
 (0)

	)

1032 
	#NA_L«FªqAdju°_I
 (0x3)

	)

1035 
	#NA_TxPaBüs_O
 (0x43)

	)

1036 
	#NA_TxPaBüs_MSB
 (6)

	)

1037 
	#NA_TxPaBüs_LSB
 (4)

	)

1038 
	#NA_TxPaBüs_I
 (0x0)

	)

1042 
	#NA_TxOuçutPowî0_O
 (0x44)

	)

1043 
	#NA_TxOuçutPowî0_MSB
 (5)

	)

1044 
	#NA_TxOuçutPowî0_LSB
 (0)

	)

1045 
	#NA_TxOuçutPowî0_I
 (0x3F)

	)

1049 
	#NA_TxOuçutPowî1_O
 (0x45)

	)

1050 
	#NA_TxOuçutPowî1_MSB
 (5)

	)

1051 
	#NA_TxOuçutPowî1_LSB
 (0)

	)

1052 
	#NA_TxOuçutPowî1_I
 (0x3F)

	)

1061 
	#NA_RfRxCompVÆueI_O
 (0x46)

	)

1062 
	#NA_RfRxCompVÆueI_MSB
 (4)

	)

1063 
	#NA_RfRxCompVÆueI_LSB
 (0)

	)

1064 
	#NA_RfRxCompVÆueI_I
 (0xF)

	)

1068 
	#NA_RfRxCompVÆueQ_O
 (0x47)

	)

1069 
	#NA_RfRxCompVÆueQ_MSB
 (4)

	)

1070 
	#NA_RfRxCompVÆueQ_LSB
 (0)

	)

1071 
	#NA_RfRxCompVÆueQ_I
 (0xF)

	)

1080 
	#NA_SymbﬁDur_O
 (0x48)

	)

1081 
	#NA_SymbﬁDur_MSB
 (2)

	)

1082 
	#NA_SymbﬁDur_LSB
 (0)

	)

1083 
	#NA_SymbﬁDur_I
 (0x3)

	)

1086 
	#NA_SymbﬁDur16000ns_C
 (0x5)

	)

1087 
	#NA_SymbﬁDur8000ns_C
 (0x4)

	)

1088 
	#NA_SymbﬁDur4000ns_C
 (0x3)

	)

1089 
	#NA_SymbﬁDur2000ns_C
 (0x2)

	)

1090 
	#NA_SymbﬁDur1000ns_C
 (0x1)

	)

1091 
	#NA_SymbﬁDur500ns_C
 (0x0)

	)

1094 
	#NA_SymbﬁR©e_O
 (0x48)

	)

1095 
	#NA_SymbﬁR©e_MSB
 (6)

	)

1096 
	#NA_SymbﬁR©e_LSB
 (4)

	)

1097 
	#NA_SymbﬁR©e_I
 (0x7)

	)

1099 
	#NA_SymbﬁR©e31k25Symbﬁs_VC_C
 (0x4)

	)

1100 
	#NA_SymbﬁR©e62k5Symbﬁs_VC_C
 (0x5)

	)

1101 
	#NA_SymbﬁR©e125kSymbﬁs_VC_C
 (0x6)

	)

1102 
	#NA_SymbﬁR©e250kSymbﬁs_VC_C
 (0x7)

	)

1103 
	#NA_SymbﬁR©e500kSymbﬁs_VC_C
 (0x0)

	)

1104 
	#NA_SymbﬁR©e1MSymbﬁs_VC_C
 (0x1)

	)

1105 
	#NA_SymbﬁR©e2MSymbﬁs_VC_C
 (0x2)

	)

1108 
	#NA_Moduœti⁄Sy°em_O
 (0x48)

	)

1109 
	#NA_Moduœti⁄Sy°em_B
 (7)

	)

1110 
	#NA_Moduœti⁄Sy°em_I
 (0x0)

	)

1112 
	#NA_Moduœti⁄Sy°em2¨y_BC_C
 (0x0)

	)

1113 
	#NA_Moduœti⁄Sy°em4¨y_BC_C
 (0x1)

	)

1117 
	#NA_Crc2Ty≥_O
 (0x49)

	)

1118 
	#NA_Crc2Ty≥_MSB
 (1)

	)

1119 
	#NA_Crc2Ty≥_LSB
 (0)

	)

1120 
	#NA_Crc2Ty≥_I
 (0x0)

	)

1122 
	#NA_Crc2Ty≥1_VC_C
 (0x0)

	)

1123 
	#NA_Crc2Ty≥2_VC_C
 (0x1)

	)

1124 
	#NA_Crc2Ty≥3_VC_C
 (0x2)

	)

1125 
	#NA_Crc2Ty≥1Bôs_IC_C
 (16)

	)

1126 
	#NA_Crc2Ty≥2Bôs_IC_C
 (16)

	)

1127 
	#NA_Crc2Ty≥3Bôs_IC_C
 (32)

	)

1130 
	#NA_U£Fec_O
 (0x49)

	)

1131 
	#NA_U£Fec_B
 (2)

	)

1132 
	#NA_U£Fec_I
 (0x0)

	)

1134 
	#NA_U£FecOff_BC_C
 (0x0)

	)

1135 
	#NA_U£FecOn_BC_C
 (0x1)

	)

1138 
	#NA_TxRxCry±Crc2Mode_O
 (0x49)

	)

1139 
	#NA_TxRxCry±Crc2Mode_B
 (3)

	)

1140 
	#NA_TxRxCry±Crc2Mode_I
 (0x0)

	)

1142 
	#NA_TxRxCry±Crc2ModeUn¸y±ed_BC_C
 (0x0)

	)

1143 
	#NA_TxRxCry±Crc2ModeEn¸y±ed_BC_C
 (0x1)

	)

1146 
	#NA_TxRxCry±ClkMode_O
 (0x49)

	)

1147 
	#NA_TxRxCry±ClkMode_MSB
 (7)

	)

1148 
	#NA_TxRxCry±ClkMode_LSB
 (4)

	)

1149 
	#NA_TxRxCry±ClkMode_I
 (0x0)

	)

1151 
	#NA_TxRxCry±ClkModeCry±Clock_BC_C
 (0x0)

	)

1152 
	#NA_TxRxCry±ClkModeS¸ambInô_BC_C
 (0x1)

	)

1156 
	#NA_Sw≠BbBuf„rs_O
 (0x4A)

	)

1157 
	#NA_Sw≠BbBuf„rs_B
 (0)

	)

1158 
	#NA_Sw≠BbBuf„rs_I
 (0x0)

	)

1161 
	#NA_TxRxBbBuf„rMode1_O
 (0x4A)

	)

1162 
	#NA_TxRxBbBuf„rMode1_B
 (1)

	)

1163 
	#NA_TxRxBbBuf„rMode1_I
 (0x0)

	)

1165 
	#NA_TxRxBuf„rMode1Du∂ex_BC_C
 (0x0)

	)

1166 
	#NA_TxRxBuf„rMode1Sim∂ex_BC_C
 (0x1)

	)

1169 
	#NA_TxRxBbBuf„rMode0_O
 (0x4A)

	)

1170 
	#NA_TxRxBbBuf„rMode0_B
 (2)

	)

1171 
	#NA_TxRxBbBuf„rMode0_I
 (0x0)

	)

1173 
	#NA_TxRxBuf„rMode0Auto_BC_C
 (0x0)

	)

1174 
	#NA_TxRxBuf„rMode0Tøn•¨ít_BC_C
 (0x1)

	)

1177 
	#NA_FdmaE«bÀ_O
 (0x4A)

	)

1178 
	#NA_FdmaE«bÀ_B
 (4)

	)

1179 
	#NA_FdmaE«bÀ_I
 (0x1)

	)

1182 
	#NA_TxRxMode_O
 (0x4A)

	)

1183 
	#NA_TxRxMode_B
 (7)

	)

1184 
	#NA_TxRxMode_I
 (0x0)

	)

1186 
	#NA_TxRxModeAuto_BC_C
 (0x0)

	)

1187 
	#NA_TxRxModeTøn•¨ít_BC_C
 (0x1)

	)

1191 
	#NA_ChúpM©rix0_O
 (0x4B)

	)

1192 
	#NA_ChúpM©rix0_MSB
 (2)

	)

1193 
	#NA_ChúpM©rix0_LSB
 (0)

	)

1194 
	#NA_ChúpM©rix0_I
 (0x0)

	)

1197 
	#NA_ChúpM©rix1_O
 (0x4B)

	)

1198 
	#NA_ChúpM©rix1_MSB
 (6)

	)

1199 
	#NA_ChúpM©rix1_LSB
 (4)

	)

1200 
	#NA_ChúpM©rix1_I
 (0x1)

	)

1204 
	#NA_ChúpM©rix2_O
 (0x4C)

	)

1205 
	#NA_ChúpM©rix2_MSB
 (2)

	)

1206 
	#NA_ChúpM©rix2_LSB
 (0)

	)

1207 
	#NA_ChúpM©rix2_I
 (0x3)

	)

1210 
	#NA_ChúpM©rix3_O
 (0x4C)

	)

1211 
	#NA_ChúpM©rix3_MSB
 (6)

	)

1212 
	#NA_ChúpM©rix3_LSB
 (4)

	)

1213 
	#NA_ChúpM©rix3_I
 (0x4)

	)

1215 
	#NA_ChúpDown_VC_C
 (0x0)

	)

1216 
	#NA_ChúpUp_VC_C
 (0x1)

	)

1217 
	#NA_ChúpFﬁdMöus_VC_C
 (0x2)

	)

1218 
	#NA_ChúpFﬁdPlus_VC_C
 (0x3)

	)

1219 
	#NA_ChúpOff_VC_C
 (0x4)

	)

1228 
	#NA_TxPªTøûM©rix0_O
 (0x4D)

	)

1229 
	#NA_TxPªTøûM©rix0_MSB
 (1)

	)

1230 
	#NA_TxPªTøûM©rix0_LSB
 (0)

	)

1231 
	#NA_TxPªTøûM©rix0_I
 (0x0)

	)

1234 
	#NA_TxPªTøûM©rix1_O
 (0x4D)

	)

1235 
	#NA_TxPªTøûM©rix1_MSB
 (3)

	)

1236 
	#NA_TxPªTøûM©rix1_LSB
 (2)

	)

1237 
	#NA_TxPªTøûM©rix1_I
 (0x1)

	)

1240 
	#NA_TxUndîrunIgn‹e_O
 (0x4D)

	)

1241 
	#NA_TxUndîrunIgn‹e_B
 (4)

	)

1242 
	#NA_TxUndîrunIgn‹e_I
 (0x1)

	)

1244 
	#NA_TxUndîrunIgn‹eOff_BC_C
 (0x0)

	)

1245 
	#NA_TxUndîrunIgn‹eOn_BC_C
 (0x1)

	)

1248 
	#NA_TxMacCifsDis_O
 (0x4D)

	)

1249 
	#NA_TxMacCifsDis_B
 (7)

	)

1250 
	#NA_TxMacCifsDis_I
 (0x0)

	)

1254 
	#NA_TxVC¨rSís_O
 (0x4E)

	)

1255 
	#NA_TxVC¨rSís_B
 (0)

	)

1256 
	#NA_TxVC¨rSís_I
 (0x0)

	)

1258 
	#NA_TxVC¨rSísOff_BC_C
 (0x0)

	)

1259 
	#NA_TxVC¨rSísOn_BC_C
 (0x1)

	)

1262 
	#NA_TxPhC¨rSí£Mode_O
 (0x4E)

	)

1263 
	#NA_TxPhC¨rSí£Mode_MSB
 (2)

	)

1264 
	#NA_TxPhC¨rSí£Mode_LSB
 (1)

	)

1265 
	#NA_TxPhC¨rSí£Mode_I
 (0x0)

	)

1267 
	#NA_TxPhC¨rSísModeOff_VC_C
 (0x0)

	)

1268 
	#NA_TxPhC¨rSísModeSymbﬁs_VC_C
 (0x1)

	)

1269 
	#NA_TxPhC¨rSísModeRssi_VC_C
 (0x2)

	)

1270 
	#NA_TxPhC¨rSísModeSymbﬁsRssi_VC_C
 (0x3)

	)

1273 
	#NA_TxVC¨rSísAck_O
 (0x4E)

	)

1274 
	#NA_TxVC¨rSísAck_B
 (3)

	)

1275 
	#NA_TxVC¨rSísAck_I
 (0x0)

	)

1277 
	#NA_TxVC¨rSísAckOff_BC_C
 (0x0)

	)

1278 
	#NA_TxVC¨rSísAckOn_BC_C
 (0x1)

	)

1281 
	#NA_TxArq_O
 (0x4E)

	)

1282 
	#NA_TxArq_B
 (4)

	)

1283 
	#NA_TxArq_I
 (0x1)

	)

1285 
	#NA_TxArqOff_BC_C
 (0x0)

	)

1286 
	#NA_TxArqOn_BC_C
 (0x1)

	)

1289 
	#NA_Tx3Way_O
 (0x4E)

	)

1290 
	#NA_Tx3Way_B
 (5)

	)

1291 
	#NA_Tx3Way_I
 (0x0)

	)

1293 
	#NA_Tx3WayOff_BC_C
 (0x0)

	)

1294 
	#NA_Tx3WayOn_BC_C
 (0x1)

	)

1297 
	#NA_TxBackOffAlg_O
 (0x4E)

	)

1298 
	#NA_TxBackOffAlg_B
 (6)

	)

1299 
	#NA_TxBackOffAlg_I
 (0x0)

	)

1301 
	#NA_TxBackOffAlgOff_BC_C
 (0x0)

	)

1302 
	#NA_TxBackOffAlgOn_BC_C
 (0x1)

	)

1305 
	#NA_TxFøgPrio_O
 (0x4E)

	)

1306 
	#NA_TxFøgPrio_B
 (7)

	)

1307 
	#NA_TxFøgPrio_I
 (0x0)

	)

1310 
	#NA_TxBackOffSìd_O
 (0x4F)

	)

1311 
	#NA_TxBackOffSìd_MSB
 (7)

	)

1312 
	#NA_TxBackOffSìd_LSB
 (0)

	)

1313 
	#NA_TxBackOffSìd_I
 (0x0)

	)

1317 
	#NA_TxCry±SeqRe£t_O
 (0x50)

	)

1318 
	#NA_TxCry±SeqRe£t_MSB
 (3)

	)

1319 
	#NA_TxCry±SeqRe£t_LSB
 (0)

	)

1320 
	#NA_TxCry±SeqRe£t_I
 (0x0)

	)

1323 
	#NA_TxCry±En_O
 (0x50)

	)

1324 
	#NA_TxCry±En_B
 (4)

	)

1325 
	#NA_TxCry±En_I
 (0x0)

	)

1328 
	#NA_TxCry±Id_O
 (0x50)

	)

1329 
	#NA_TxCry±Id_MSB
 (6)

	)

1330 
	#NA_TxCry±Id_LSB
 (5)

	)

1331 
	#NA_TxCry±Id_I
 (0x0)

	)

1334 
	#NA_TxCry±SeqN_O
 (0x50)

	)

1335 
	#NA_TxCry±SeqN_B
 (7)

	)

1336 
	#NA_TxCry±SeqN_I
 (0x0)

	)

1340 
	#NA_TxS¸ambInô_O
 (0x51)

	)

1341 
	#NA_TxS¸ambInô_MSB
 (6)

	)

1342 
	#NA_TxS¸ambInô_LSB
 (0)

	)

1343 
	#NA_TxS¸ambInô_I
 (0x7F)

	)

1346 
	#NA_TxS¸ambEn_O
 (0x51)

	)

1347 
	#NA_TxS¸ambEn_B
 (7)

	)

1348 
	#NA_TxS¸ambEn_I
 (0x1)

	)

1352 
	#NA_TxTønsByãs_O
 (0x52)

	)

1353 
	#NA_TxTønsByãs_MSB
 (12)

	)

1354 
	#NA_TxTønsByãs_LSB
 (0)

	)

1355 
	#NA_TxTønsByãs_I
 (0x0)

	)

1359 
	#NA_TxPackëTy≥_O
 (0x54)

	)

1360 
	#NA_TxPackëTy≥_MSB
 (3)

	)

1361 
	#NA_TxPackëTy≥_LSB
 (0)

	)

1362 
	#NA_TxPackëTy≥_I
 (0x0)

	)

1365 
	#NA_TxAddrSl˘_O
 (0x54)

	)

1366 
	#NA_TxAddrSl˘_B
 (7)

	)

1367 
	#NA_TxAddrSl˘_I
 (0x0)

	)

1371 
	#NA_TxCmdSt›_O
 (0x55)

	)

1372 
	#NA_TxCmdSt›_B
 (0)

	)

1373 
	#NA_TxCmdSt›_I
 (0x0)

	)

1376 
	#NA_TxCmdSèπ_O
 (0x55)

	)

1377 
	#NA_TxCmdSèπ_B
 (1)

	)

1378 
	#NA_TxCmdSèπ_I
 (0x0)

	)

1381 
	#NA_TxBuf„rCmd_O
 (0x55)

	)

1382 
	#NA_TxBuf„rCmd_MSB
 (3)

	)

1383 
	#NA_TxBuf„rCmd_LSB
 (2)

	)

1384 
	#NA_TxBuf„rCmd_I
 (0x0)

	)

1393 
	#NA_RxCmdSt›_O
 (0x56)

	)

1394 
	#NA_RxCmdSt›_B
 (0)

	)

1395 
	#NA_RxCmdSt›_I
 (0x0)

	)

1398 
	#NA_RxCmdSèπ_O
 (0x56)

	)

1399 
	#NA_RxCmdSèπ_B
 (1)

	)

1400 
	#NA_RxCmdSèπ_I
 (0x0)

	)

1403 
	#NA_RxBuf„rCmd_O
 (0x56)

	)

1404 
	#NA_RxBuf„rCmd_MSB
 (3)

	)

1405 
	#NA_RxBuf„rCmd_LSB
 (2)

	)

1406 
	#NA_RxBuf„rCmd_I
 (0x0)

	)

1410 
	#NA_RxCry±SeqRe£t_O
 (0x57)

	)

1411 
	#NA_RxCry±SeqRe£t_MSB
 (3)

	)

1412 
	#NA_RxCry±SeqRe£t_LSB
 (0)

	)

1413 
	#NA_RxCry±SeqRe£t_I
 (0x0)

	)

1417 
	#NA_RxTønsByãs_O
 (0x58)

	)

1418 
	#NA_RxTønsByãs_MSB
 (12)

	)

1419 
	#NA_RxTønsByãs_LSB
 (0)

	)

1420 
	#NA_RxTønsByãs_I
 (0x0)

	)

1424 
	#NA_RxTimeBCrc1Mode_O
 (0x5A)

	)

1425 
	#NA_RxTimeBCrc1Mode_B
 (0)

	)

1426 
	#NA_RxTimeBCrc1Mode_I
 (0x1)

	)

1428 
	#NA_RxTimeBCrc1ModeOff_BC_C
 (0x0)

	)

1429 
	#NA_RxTimeBCrc1ModeOn_BC_C
 (0x1)

	)

1432 
	#NA_RxCrc2Mode_O
 (0x5A)

	)

1433 
	#NA_RxCrc2Mode_B
 (1)

	)

1434 
	#NA_RxCrc2Mode_I
 (0x1)

	)

1436 
	#NA_RxCrc2ModeTrigOff_BC_C
 (0x0)

	)

1437 
	#NA_RxCrc2ModeTrigOn_BC_C
 (0x1)

	)

1440 
	#NA_RxArqMode_O
 (0x5A)

	)

1441 
	#NA_RxArqMode_MSB
 (3)

	)

1442 
	#NA_RxArqMode_LSB
 (2)

	)

1443 
	#NA_RxArqMode_I
 (0x2)

	)

1445 
	#NA_RxArqModeN⁄e_VC_C
 (0x0)

	)

1446 
	#NA_RxArqModeCrc1_VC_C
 (0x1)

	)

1447 
	#NA_RxArqModeCrc2_VC_C
 (0x2)

	)

1450 
	#NA_RxAddrSegEsMode_O
 (0x5A)

	)

1451 
	#NA_RxAddrSegEsMode_B
 (4)

	)

1452 
	#NA_RxAddrSegEsMode_I
 (0x0)

	)

1455 
	#NA_RxAddrSegIsMode_O
 (0x5A)

	)

1456 
	#NA_RxAddrSegIsMode_B
 (5)

	)

1457 
	#NA_RxAddrSegIsMode_I
 (0x0)

	)

1460 
	#NA_RxAddrSegDevIdL_O
 (0x5A)

	)

1461 
	#NA_RxAddrSegDevIdL_MSB
 (7)

	)

1462 
	#NA_RxAddrSegDevIdL_LSB
 (6)

	)

1463 
	#NA_RxAddrSegDevIdL_I
 (0x0)

	)

1467 
	#NA_RxD©aEn_O
 (0x5B)

	)

1468 
	#NA_RxD©aEn_B
 (0)

	)

1469 
	#NA_RxD©aEn_I
 (0x1)

	)

1470 
	#NA_RxD©aOff_BC_C
 (0x0)

	)

1471 
	#NA_RxD©aOn_BC_C
 (0x1)

	)

1474 
	#NA_RxBrdˇ°En_O
 (0x5B)

	)

1475 
	#NA_RxBrdˇ°En_B
 (1)

	)

1476 
	#NA_RxBrdˇ°En_I
 (0x1)

	)

1478 
	#NA_RxBrdˇ°Off_BC_C
 (0x0)

	)

1479 
	#NA_RxBrdˇ°On_BC_C
 (0x1)

	)

1482 
	#NA_RxTimeBEn_O
 (0x5B)

	)

1483 
	#NA_RxTimeBEn_B
 (2)

	)

1484 
	#NA_RxTimeBEn_I
 (0x1)

	)

1485 
	#NA_RxTimeBOff_BC_C
 (0x0)

	)

1486 
	#NA_RxTimeBOn_BC_C
 (0x1)

	)

1489 
	#NA_RxAddrMode_O
 (0x5B)

	)

1490 
	#NA_RxAddrMode_B
 (3)

	)

1491 
	#NA_RxAddrMode_I
 (0x1)

	)

1493 
	#NA_RxAddrModeOff_BC_C
 (0x0)

	)

1494 
	#NA_RxAddrModeOn_BC_C
 (0x1)

	)

1497 
	#NA_R™gögPul£s_O
 (0x5B)

	)

1498 
	#NA_R™gögPul£s_MSB
 (7)

	)

1499 
	#NA_R™gögPul£s_LSB
 (4)

	)

1500 
	#NA_R™gögPul£s_I
 (0x5)

	)

1502 
	#NA_R™gögPul£s1_VC_C
 (0x0)

	)

1503 
	#NA_R™gögPul£s2_VC_C
 (0x1)

	)

1504 
	#NA_R™gögPul£s4_VC_C
 (0x2)

	)

1505 
	#NA_R™gögPul£s8_VC_C
 (0x3)

	)

1506 
	#NA_R™gögPul£s16_VC_C
 (0x4)

	)

1507 
	#NA_R™gögPul£s24_VC_C
 (0x5)

	)

1508 
	#NA_R™gögPul£s32_VC_C
 (0x6)

	)

1509 
	#NA_R™gögPul£s40_VC_C
 (0x7)

	)

1510 
	#NA_R™gögPul£s48_VC_C
 (0x8)

	)

1511 
	#NA_R™gögPul£s56_VC_C
 (0x9)

	)

1512 
	#NA_R™gögPul£s64_VC_C
 (0xA)

	)

1516 
	#NA_Pul£DëDñay_O
 (0x5C)

	)

1517 
	#NA_Pul£DëDñay_MSB
 (4)

	)

1518 
	#NA_Pul£DëDñay_LSB
 (0)

	)

1519 
	#NA_Pul£DëDñay_I
 (0x5)

	)

1523 
	#NA_G©eAdjThªshﬁd_O
 (0x5D)

	)

1524 
	#NA_G©eAdjThªshﬁd_MSB
 (2)

	)

1525 
	#NA_G©eAdjThªshﬁd_LSB
 (0)

	)

1526 
	#NA_G©eAdjThªshﬁd_I
 (0x7)

	)

1529 
	#NA_DownPul£Dëe˘Dis_O
 (0x5D)

	)

1530 
	#NA_DownPul£Dëe˘Dis_B
 (4)

	)

1531 
	#NA_DownPul£Dëe˘Dis_I
 (0x0)

	)

1534 
	#NA_UpPul£Dëe˘Dis_O
 (0x5D)

	)

1535 
	#NA_UpPul£Dëe˘Dis_B
 (5)

	)

1536 
	#NA_UpPul£Dëe˘Dis_I
 (0x0)

	)

1540 
	#NA_G©eSizeUnsync_O
 (0x5E)

	)

1541 
	#NA_G©eSizeUnsync_MSB
 (1)

	)

1542 
	#NA_G©eSizeUnsync_LSB
 (0)

	)

1543 
	#NA_G©eSizeUnsync_I
 (0x1)

	)

1546 
	#NA_G©eSizeBôsync_O
 (0x5E)

	)

1547 
	#NA_G©eSizeBôsync_MSB
 (3)

	)

1548 
	#NA_G©eSizeBôsync_LSB
 (2)

	)

1549 
	#NA_G©eSizeBôsync_I
 (0x1)

	)

1552 
	#NA_G©eSizeFømesync_O
 (0x5E)

	)

1553 
	#NA_G©eSizeFømesync_MSB
 (5)

	)

1554 
	#NA_G©eSizeFømesync_LSB
 (4)

	)

1555 
	#NA_G©eSizeFømesync_I
 (0x1)

	)

1557 
	#NA_G©eSize3SlŸs_VC_C
 (0x0)

	)

1558 
	#NA_G©eSize5SlŸs_VC_C
 (0x1)

	)

1559 
	#NA_G©eSize7SlŸs_VC_C
 (0x2)

	)

1560 
	#NA_G©eSize9SlŸs_VC_C
 (0x3)

	)

1563 
	#NA_G©eAdjBôsyncEn_O
 (0x5E)

	)

1564 
	#NA_G©eAdjBôsyncEn_B
 (6)

	)

1565 
	#NA_G©eAdjBôsyncEn_I
 (0x1)

	)

1568 
	#NA_G©eAdjFømesyncEn_O
 (0x5E)

	)

1569 
	#NA_G©eAdjFømesyncEn_B
 (7)

	)

1570 
	#NA_G©eAdjFømesyncEn_I
 (0x1)

	)

1574 
	#NA_Go2BôsyncThªshﬁd_O
 (0x5F)

	)

1575 
	#NA_Go2BôsyncThªshﬁd_MSB
 (2)

	)

1576 
	#NA_Go2BôsyncThªshﬁd_LSB
 (0)

	)

1577 
	#NA_Go2BôsyncThªshﬁd_I
 (0x2)

	)

1580 
	#NA_LóveBôsyncThªshﬁd_O
 (0x5F)

	)

1581 
	#NA_LóveBôsyncThªshﬁd_MSB
 (6)

	)

1582 
	#NA_LóveBôsyncThªshﬁd_LSB
 (4)

	)

1583 
	#NA_LóveBôsyncThªshﬁd_I
 (0x6)

	)

1592 
	#NA_RtcTimeBTxAdj_O
 (0x60)

	)

1593 
	#NA_RtcTimeBTxAdj_MSB
 (7)

	)

1594 
	#NA_RtcTimeBTxAdj_LSB
 (0)

	)

1595 
	#NA_RtcTimeBTxAdj_I
 (0x0)

	)

1597 
	#NA_MacRtcTimeBTxAdj1M2Ary_IC_C
 (5)

	)

1598 
	#NA_MacRtcTimeBTxAdj1M4Ary_IC_C
 (3)

	)

1599 
	#NA_MacRtcTimeBTxAdj1M2AryFec_IC_C
 (7)

	)

1600 
	#NA_MacRtcTimeBTxAdj1M4AryFec_IC_C
 (4)

	)

1601 
	#NA_MacRtcTimeBTxAdj500k2Ary_IC_C
 (9)

	)

1602 
	#NA_MacRtcTimeBTxAdj500k4Ary_IC_C
 (7)

	)

1603 
	#NA_MacRtcTimeBTxAdj500k2AryFec_IC_C
 (15)

	)

1604 
	#NA_MacRtcTimeBTxAdj500k4AryFec_IC_C
 (13)

	)

1608 
	#NA_RtcTimeBRxAdj_O
 (0x61)

	)

1609 
	#NA_RtcTimeBRxAdj_MSB
 (7)

	)

1610 
	#NA_RtcTimeBRxAdj_LSB
 (0)

	)

1611 
	#NA_RtcTimeBRxAdj_I
 (0x0)

	)

1613 
	#NA_MacRtcTimeBRxAdj1M2Ary_IC_C
 (4)

	)

1614 
	#NA_MacRtcTimeBRxAdj1M4Ary_IC_C
 (8)

	)

1615 
	#NA_MacRtcTimeBRxAdj1M2AryFec_IC_C
 (9)

	)

1616 
	#NA_MacRtcTimeBRxAdj1M4AryFec_IC_C
 (10)

	)

1617 
	#NA_MacRtcTimeBRxAdj500k2Ary_IC_C
 (8)

	)

1618 
	#NA_MacRtcTimeBRxAdj500k4Ary_IC_C
 (11)

	)

1619 
	#NA_MacRtcTimeBRxAdj500k2AryFec_IC_C
 (12)

	)

1620 
	#NA_MacRtcTimeBRxAdj500k4AryFec_IC_C
 (13)

	)

1624 
	#NA_RtcCmdWr_O
 (0x62)

	)

1625 
	#NA_RtcCmdWr_B
 (0)

	)

1626 
	#NA_RtcCmdWr_I
 (0x0)

	)

1629 
	#NA_RtcCmdRd_O
 (0x62)

	)

1630 
	#NA_RtcCmdRd_B
 (1)

	)

1631 
	#NA_RtcCmdRd_I
 (0x0)

	)

1634 
	#NA_RtcTimeBAutoMode_O
 (0x62)

	)

1635 
	#NA_RtcTimeBAutoMode_B
 (4)

	)

1636 
	#NA_RtcTimeBAutoMode_I
 (0x0)

	)

1638 
	#NA_RtcTimeBAutoModeOff_BC_C
 (0x0)

	)

1639 
	#NA_RtcTimeBAutoModeOn_BC_C
 (0x1)

	)

1648 
	#NA_AgcAm∂ôude_O
 (0x63)

	)

1649 
	#NA_AgcAm∂ôude_MSB
 (4)

	)

1650 
	#NA_AgcAm∂ôude_LSB
 (0)

	)

1651 
	#NA_AgcAm∂ôude_I
 (0xC)

	)

1655 
	#NA_AgcR™geOff£t_O
 (0x64)

	)

1656 
	#NA_AgcR™geOff£t_MSB
 (3)

	)

1657 
	#NA_AgcR™geOff£t_LSB
 (0)

	)

1658 
	#NA_AgcR™geOff£t_I
 (0xA)

	)

1661 
	#NA_U£A…î«tiveAgc_O
 (0x64)

	)

1662 
	#NA_U£A…î«tiveAgc_B
 (7)

	)

1663 
	#NA_U£A…î«tiveAgc_I
 (0x0)

	)

1697 
	#NA_RamSèAddr0_O
 (0x80)

	)

1698 
	#NA_RamSèAddr0_MSB
 (47)

	)

1699 
	#NA_RamSèAddr0_LSB
 (0)

	)

1701 
	#NA_RamSèAddr1_O
 (0x88)

	)

1702 
	#NA_RamSèAddr1_MSB
 (47)

	)

1703 
	#NA_RamSèAddr1_LSB
 (0)

	)

1705 
	#NA_RamTxD°Addr_O
 (0x90)

	)

1706 
	#NA_RamTxD°Addr_MSB
 (47)

	)

1707 
	#NA_RamTxD°Addr_LSB
 (0)

	)

1711 
	#NA_RamTxLígth_O
 (0x98)

	)

1712 
	#NA_RamTxLígth_MSB
 (12)

	)

1713 
	#NA_RamTxLígth_LSB
 (0)

	)

1715 
	#NA_RamTxFøgC_O
 (0x99)

	)

1716 
	#NA_RamTxFøgC_B
 (5)

	)

1718 
	#NA_RamTxSeqN_O
 (0x99)

	)

1719 
	#NA_RamTxSeqN_B
 (6)

	)

1721 
	#NA_RamTxLCh_O
 (0x99)

	)

1722 
	#NA_RamTxLCh_B
 (7)

	)

1724 
	#NA_RamRxD°Addr_O
 (0xA8)

	)

1725 
	#NA_RamRxD°Addr_MSB
 (47)

	)

1726 
	#NA_RamRxD°Addr_LSB
 (0)

	)

1728 
	#NA_RamRxSrcAddr_O
 (0xB0)

	)

1729 
	#NA_RamRxSrcAddr_MSB
 (47)

	)

1730 
	#NA_RamRxSrcAddr_LSB
 (0)

	)

1734 
	#NA_RamRxLígth_O
 (0xB8)

	)

1735 
	#NA_RamRxLígth_MSB
 (12)

	)

1736 
	#NA_RamRxLígth_LSB
 (0)

	)

1738 
	#NA_RamRxFøgC_O
 (0xB9)

	)

1739 
	#NA_RamRxFøgC_B
 (5)

	)

1741 
	#NA_RamRxSeqN_O
 (0xB9)

	)

1742 
	#NA_RamRxSeqN_B
 (6)

	)

1744 
	#NA_RamRxLCh_O
 (0xB9)

	)

1745 
	#NA_RamRxLCh_B
 (7)

	)

1747 
	#NA_RamRtcTx_O
 (0xE0)

	)

1748 
	#NA_RamRtcTx_MSB
 (47)

	)

1749 
	#NA_RamRtcTx_LSB
 (0)

	)

1751 
	#NA_RamRtcRx_O
 (0xE8)

	)

1752 
	#NA_RamRtcRx_MSB
 (47)

	)

1753 
	#NA_RamRtcRx_LSB
 (0)

	)

1755 
	#NA_RamRtcReg_O
 (0xF0)

	)

1756 
	#NA_RamRtcReg_MSB
 (47)

	)

1757 
	#NA_RamRtcReg_LSB
 (0)

	)

1759 
	#NA_RamTxRxCry±Key_O
 (0x180)

	)

1760 
	#NA_RamTxRxCry±Key_MSB
 (127)

	)

1761 
	#NA_RamTxRxCry±Key_LSB
 (0)

	)

1763 
	#NA_RamTxCry±Clock_O
 (0x1C0)

	)

1764 
	#NA_RamTxCry±Clock_MSB
 (31)

	)

1765 
	#NA_RamTxCry±Clock_LSB
 (0)

	)

1767 
	#NA_RamRxCry±Clock_O
 (0x1E0)

	)

1768 
	#NA_RamRxCry±Clock_MSB
 (31)

	)

1769 
	#NA_RamRxCry±Clock_LSB
 (0)

	)

1771 
	#NA_RamRxBuf„r_O
 (0x280)

	)

1772 
	#NA_RamRxBuf„r_MSB
 (1023)

	)

1773 
	#NA_RamRxBuf„r_LSB
 (0)

	)

1775 
	#NA_RamTxBuf„r_O
 (0x380)

	)

1776 
	#NA_RamTxBuf„r_MSB
 (1023)

	)

1777 
	#NA_RamTxBuf„r_LSB
 (0)

	)

1779 
	#NA_RamTxRxBuf„r_O
 (0x280)

	)

1780 
	#NA_RamTxRxBuf„r_MSB
 (2047)

	)

1781 
	#NA_RamTxRxBuf„r_LSB
 (0)

	)

1783 
	#NA_RamRxTønsBuf„r_O
 (0x80)

	)

1784 
	#NA_RamRxTønsBuf„r_MSB
 (2047)

	)

1785 
	#NA_RamRxTønsBuf„r_LSB
 (0)

	)

1787 
	#NA_RamTxTønsBuf„r_O
 (0x280)

	)

1788 
	#NA_RamTxTønsBuf„r_MSB
 (2047)

	)

1789 
	#NA_RamTxTønsBuf„r_LSB
 (0)

	)

1791 
	#NA_RamTxRxTønsBuf„r_O
 (0x80)

	)

1792 
	#NA_RamTxRxTønsBuf„r_MSB
 (4095)

	)

1793 
	#NA_RamTxRxTønsBuf„r_LSB
 (0)

	)

1795 
	#NA_RamCsqD©aByã0_O
 (0x80)

	)

1796 
	#NA_RamCsqD©aByã0_MSB
 (7)

	)

1797 
	#NA_RamCsqD©aByã0_LSB
 (0)

	)

1798 
	#NA_RamCsqD©aPage0_O
 (0x0)

	)

1800 
	#NA_RamCsqD©aByã1_O
 (0x180)

	)

1801 
	#NA_RamCsqD©aByã1_MSB
 (7)

	)

1802 
	#NA_RamCsqD©aByã1_LSB
 (0)

	)

1803 
	#NA_RamCsqD©aPage1_O
 (0x1)

	)

1805 
	#NA_RamCsqD©aByã2_O
 (0x280)

	)

1806 
	#NA_RamCsqD©aByã2_MSB
 (7)

	)

1807 
	#NA_RamCsqD©aByã2_LSB
 (0)

	)

1808 
	#NA_RamCsqD©aPage2_O
 (0x2)

	)

1810 
	#NA_RamD3lP©I_O
 (0x80)

	)

1811 
	#NA_RamD3lP©I_MSB
 (255)

	)

1812 
	#NA_RamD3lP©I_LSB
 (0)

	)

1813 
	#NA_RamD3lP©I_I
 (0x00000000000000000000000000000000B64CCCE30E1F807FFE01F870C733326D)

	)

1814 
	#NA_RamD3lP©IPage_O
 (0x0)

	)

1816 
	#NA_RamD3lP©Q_O
 (0x180)

	)

1817 
	#NA_RamD3lP©Q_MSB
 (255)

	)

1818 
	#NA_RamD3lP©Q_LSB
 (0)

	)

1819 
	#NA_RamD3lP©Q_I
 (0x000000000000000000000000000000006C9999CE387C0FFFFFF03E1C73999936)

	)

1820 
	#NA_RamD3lP©QPage_O
 (0x1)

	)

1822 
	#NA_RamD3lThªshﬁd_O
 (0x280)

	)

1823 
	#NA_RamD3lThªshﬁdPage_O
 (0x2)

	)

1825 
	#NA_RamD3lThªsDown_MSB
 (17)

	)

1826 
	#NA_RamD3lThªsDown_LSB
 (0)

	)

1827 
	#NA_RamD3lThªsDown_I
 (0x6E37)

	)

1829 
	#NA_RamD3lThªsUp_MSB
 (17)

	)

1830 
	#NA_RamD3lThªsUp_LSB
 (0)

	)

1831 
	#NA_RamD3lThªsUp_I
 (0x6E37)

	)

1840 
	#NA_True_BC_C
 (0x1)

	)

1841 
	#NA_FÆ£_BC_C
 (0x0)

	)

1845 
	#NA_TxRxPackëLígth_MSB
 (12)

	)

1846 
	#NA_TxRxPackëLígth_LSB
 (0)

	)

1847 
	#NA_TxRxPackëLígth_INIT_C
 (0x0)

	)

1850 
	#NA_TxRxCry±Off_BC_C
 (0x0)

	)

1851 
	#NA_TxRxCry±On_BC_C
 (0x1)

	)

1854 
	#NA_ADC_IQ_MSB
 (4)

	)

1855 
	#NA_ADC_IQ_LSB
 (0)

	)

1857 
	#NA_Crc1Bôs_IC_C
 (16)

	)

1860 
	#NA_Cry±IdCou¡_IC_C
 (4)

	)

1863 
	#NA_Cry±Bôs_IC_C
 (4)

	)

1865 
	#NA_Cry±FõldEn_B
 (0)

	)

1866 
	#NA_Cry±FõldId_LSB
 (1)

	)

1867 
	#NA_Cry±FõldId_MSB
 (2)

	)

1868 
	#NA_Cry±FõldSeqN_B
 (3)

	)

1870 
	#NA_RtcTimeSlŸLsbs_IC_C
 (16)

	)

1872 
	#NA_MacTy≥Bôs_IC_C
 (2)

	)

1874 
	#NA_Ty≥CodeBôPos_IC_C
 (4)

	)

1875 
	#NA_Ty≥CodeBôs_IC_C
 (4)

	)

1877 
	#NA_PwrMngmtClockFªq_IC_C
 (3)

	)

1879 
	#NA_RtcReg_MSB
 (47)

	)

1880 
	#NA_RtcReg_LSB
 (0)

	)

1882 
	#NA_TxRxPackëFøgC_B
 (5)

	)

1883 
	#NA_TxRxPackëSeqN_B
 (6)

	)

1884 
	#NA_TxRxPackëLCh_B
 (7)

	)

1886 
	#NA_TaûSymbﬁs_IC_C
 (4)

	)

1887 
	#NA_SyncW‹dBôs_IC_C
 (64)

	)

1888 
	#NA_S¸ambInôBôs_IC_C
 (8)

	)

1889 
	#NA_MacCodeBôs_IC_C
 (8)

	)

1890 
	#NA_AddrBôs_IC_C
 (48)

	)

1891 
	#NA_LígthBôs_IC_C
 (16)

	)

1893 
	#NA_Ty≥CodeD©a_VC_C
 (0x0)

	)

1894 
	#NA_Ty≥CodeAck_VC_C
 (0x1)

	)

1895 
	#NA_Ty≥CodeTimeB_VC_C
 (0x2)

	)

1896 
	#NA_Ty≥CodeBrdˇ°_VC_C
 (0x3)

	)

1897 
	#NA_Ty≥CodeReq2s_VC_C
 (0x4)

	)

1898 
	#NA_Ty≥CodeCÃ2s_VC_C
 (0x5)

	)

1899 
	#NA_Ty≥CodeUndef_VC_C
 (0xFF)

	)

1901 
	#NA_MacTy≥_VC_C
 (0x0)

	)

1903 
	#NA_FótClockDeÁu…Dio_IC_C
 (3)

	)

1905 
	#NA_MacPªambÀSymbﬁs500ns_IC_C
 (50)

	)

1906 
	#NA_MacPªambÀSymbﬁs1000ns_IC_C
 (30)

	)

1907 
	#NA_MacPªambÀSymbﬁs2000ns_IC_C
 (20)

	)

1908 
	#NA_MacPªambÀSymbﬁs4000ns_IC_C
 (16)

	)

1909 
	#NA_MacPªambÀSymbﬁs8000ns_IC_C
 (14)

	)

1910 
	#NA_MacPªambÀSymbﬁs16000ns_IC_C
 (12)

	)

1912 
	#NA_Cry°ÆFªquícy_IC_C
 (32)

	)

	@h/adc.h

1 #i‚def 
__ADC_H__


2 
	#__ADC_H__


	)

4 
	~"pöma¸os.h
"

6 
	#GYRO_PTATS
 
ADC0_CH


	)

7 
	#ACC_X_CHANNEL
 
ADC5_CH


	)

8 
	#ACC_Y_CHANNEL
 
ADC4_CH


	)

9 
	#ACC_Z_CHANNEL
 
ADC3_CH


	)

10 
	#GYRO1_X_CHANNEL
 
ADC1_CH


	)

11 
	#GYRO1_Y_CHANNEL
 
ADC2_CH


	)

12 
	#GYRO2_X_CHANNEL
 
ADC6_CH


	)

13 
	#GYRO2_Y_CHANNEL
 
ADC7_CH


	)

15 
	#ADC0_CH
 0

	)

16 
	#ADC1_CH
 1

	)

17 
	#ADC2_CH
 2

	)

18 
	#ADC3_CH
 3

	)

19 
	#ADC4_CH
 4

	)

20 
	#ADC5_CH
 5

	)

21 
	#ADC6_CH
 6

	)

22 
	#ADC7_CH
 7

	)

24 
	#ADC_DELAY
 1

	)

26 
	#WAIT_ADC
(Ë
	`msdñay
(
ADC_DELAY
)

	)

29 
MAKE_PORT_MACRO
(
ADC0
, 6, 0);

30 
MAKE_PORT_MACRO
(
ADC1
, 6, 0);

31 
MAKE_PORT_MACRO
(
ADC2
, 6, 0);

32 
MAKE_PORT_MACRO
(
ADC3
, 6, 0);

33 
MAKE_PORT_MACRO
(
ADC4
, 6, 0);

34 
MAKE_PORT_MACRO
(
ADC5
, 6, 0);

35 
MAKE_PORT_MACRO
(
ADC6
, 6, 0);

36 
MAKE_PORT_MACRO
(
ADC7
, 6, 0);

43 
uöt8_t
 
ADCCh™√l
;

44 
uöt16_t
 
ADCResu…
[8];

46 
adc_£ns‹_öô
();

47 
uöt8_t
 
adc_gë
(uöt8_à
ch™√l
);

	@h/bm.h

1 #i‚de‡
__BM_H__


2 
	#__BM_H__


	)

4 
	~<sys/öây≥s.h
>

7 
	eDS2782_REG


9 
	mRSV
 = 0,

10 
	mSTATUS
,

11 
	mRAAC_M
,

12 
	mRAAC_L
,

13 
	mRSAC_M
,

14 
	mRSAC_L
,

15 
	mRARC
,

16 
	mRSRC
,

17 
	mIAVG_M
,

18 
	mIAVG_L
,

19 
	mTEMP_M
,

20 
	mTEMP_L
,

21 
	mVOLT_M
,

22 
	mVOLT_L
,

23 
	mCURRENT_M
,

24 
	mCURRENT_L
,

25 
	mACR_M
,

26 
	mACR_L
,

27 
	mACRL_M
,

28 
	mACRL_L
,

29 
	mAS
,

30 
	mSFR
,

31 
	mFULL_M
,

32 
	mFULL_L
,

33 
	mAE_M
,

34 
	mAE_L
,

35 
	mSE_M
,

36 
	mSE_L
,

37 
	mEEPROM_REG
 = 0x1F,

38 
	mEEPROM_CTL
 = 0x60,

39 
	mEEPROM_S_ADD
 = 0x7E,

40 
	mEEPROM_FCR
 = 0xFE,

43 
	eDS2782_CMD


45 
	mCOPY_B0
 = 0x42,

46 
	mCOPY_B1
 = 0x44,

47 
	mRECALL_B0
 = 0xB2,

48 
	mRECALL_B1
 = 0xB4,

49 
	mLOCK_B0
 = 0x63,

50 
	mLOCK_B1
 = 0x66

54 
	#I2C_DS2782_ADD
 ()(0x34)

	)

57 
uöt8_t
 
RódDS2782SètusReg
();

58 
WrôeDS2782SètusReg
(
D©a
);

59 
RódDS2782VOLTReg
();

60 
öt32_t
 
RódDS2782CURRENTReg
();

61 
uöt16_t
 
RódDS2782TEMPReg
();

	@h/common_def.h

1 #i‚def 
__COMMON_DEF_H__


2 
	#__COMMON_DEF_H__


	)

5 
	#TRUE
 1

	)

6 
	#ON
 1

	)

8 
	#FALSE
 0

	)

9 
	#OFF
 0

	)

12 
	#SCI_DEBUG
 0xØ

	)

13 
	#SCI_EXT
 0x66

	)

14 
	#SCI_BT
 0xcc

	)

15 
	#SCI_GPS
 0x33

	)

17 
	#BYTES2INT
(
x
,
y
Ë(
öt16_t
)(((
uöt16_t
)(xË<< 8Ë| (uöt16_t)(y))

	)

18 
	#BYTES2UINT
(
x
,
y
Ë(
uöt16_t
)(((uöt16_t)(xË<< 8Ë| (uöt16_t)(y))

	)

21 
	#BIT_SET
(
x
,
y
Ëx |(y)

	)

22 
	#BIT_CLEAR
(
x
,
y
Ëx &~(y)

	)

25 
	#BT_POWER_OFF
 {
	`BIT_SET
(
P3DIR
, 
BT_LDO_CE
); 
	`BIT_CLEAR
(
P3SEL
, BT_LDO_CE); BIT_CLEAR(
P3OUT
, BT_LDO_CE);}

	)

26 
	#GYRO_POWER_OFF
 {
	`BIT_SET
(
P4DIR
, 
GYRO_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, GYRO_LDO_CE); BIT_CLEAR(
P4OUT
, GYRO_LDO_CE);}

	)

27 
	#ACCEL_POWER_OFF
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_LDO_CE); BIT_CLEAR(
P4OUT
, ACCEL_LDO_CE);}

	)

28 
	#RF_POWER_OFF
 {
	`BIT_SET
(
P4DIR
, 
RF_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, RF_LDO_CE); BIT_CLEAR(
P4OUT
, RF_LDO_CE);}

	)

29 
	#COMPASS_POWER_OFF
 {
	`BIT_SET
(
P2DIR
, 
COMPASS_LDO_CE
); 
	`BIT_CLEAR
(
P2SEL
, COMPASS_LDO_CE); BIT_CLEAR(
P2OUT
, COMPASS_LDO_CE);}

	)

30 
	#GPS_POWER_OFF
 {
	`BIT_SET
(
P4DIR
, 
GPS_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, GPS_LDO_CE); BIT_CLEAR(
P4OUT
, GPS_LDO_CE);}

	)

36 
	#BT_POWER_ON
 {
	`BIT_SET
(
P3DIR
, 
BT_LDO_CE
); 
	`BIT_CLEAR
(
P3SEL
,BT_LDO_CE); BIT_SET(
P3OUT
, BT_LDO_CE);}

	)

37 
	#GYRO_POWER_ON
 {
	`BIT_SET
(
P4DIR
, 
GYRO_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, GYRO_LDO_CE); BIT_SET(
P4OUT
, GYRO_LDO_CE);}

	)

38 
	#ACCEL_POWER_ON
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_LDO_CE); BIT_SET(
P4OUT
, ACCEL_LDO_CE);}

	)

39 
	#RF_POWER_ON
 {
	`BIT_SET
(
P4DIR
, 
RF_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, RF_LDO_CE); BIT_SET(
P4OUT
, RF_LDO_CE);}

	)

40 
	#COMPASS_POWER_ON
 {
	`BIT_SET
(
P2DIR
, 
COMPASS_LDO_CE
); 
	`BIT_CLEAR
(
P2SEL
, COMPASS_LDO_CE); BIT_SET(
P2OUT
, COMPASS_LDO_CE);}

	)

41 
	#GPS_POWER_ON
 {
	`BIT_SET
(
P4DIR
, 
GPS_LDO_CE
); 
	`BIT_CLEAR
(
P4SEL
, GPS_LDO_CE); BIT_SET(
P4OUT
, GPS_LDO_CE);}

	)

43 
	#GPS_ACTIVE
 {
	`BIT_SET
(
P4DIR
, 
GPS_EN
); 
	`BIT_CLEAR
(
P4SEL
, GPS_EN); BIT_SET(
P4OUT
, GPS_EN);}

	)

44 
	#GPS_SLEEP
 {
	`BIT_SET
(
P4DIR
, 
GPS_EN
); 
	`BIT_CLEAR
(
P4SEL
, GPS_EN); BIT_CLEAR(
P4OUT
, GPS_EN);}

	)

47 
	#ACCEL_SLEEP
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_SEP
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_SEP); BIT_CLEAR(
P4OUT
, ACCEL_SEP);}

	)

48 
	#ACCEL_ACTIVE
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_SEP
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_SEP); BIT_SET(
P4OUT
, ACCEL_SEP);}

	)

50 
	#ACCEL_G_SEL15
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_GSEL1
 | 
ACCEL_GSEL2
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_GSEL1 | ACCEL_GSEL2); BIT_CLEAR(
P4OUT
, ACCEL_GSEL1 | ACCEL_GSEL2);}

51 
	#ACCEL_G_SEL20
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_GSEL1
 | 
ACCEL_GSEL2
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_GSEL1 | ACCEL_GSEL2); BIT_SET(
P4OUT
, ACCEL_GSEL1); BIT_CLEAR(P4OUT, ACCEL_GSEL2);}

52 
	#ACCEL_G_SEL40
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_GSEL1
 | 
ACCEL_GSEL2
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_GSEL1 | ACCEL_GSEL2); BIT_CLEAR(
P4OUT
, ACCEL_GSEL1); BIT_SET(P4OUT, ACCEL_GSEL2);}

53 
	#ACCEL_G_SEL60
 {
	`BIT_SET
(
P4DIR
, 
ACCEL_GSEL1
 | 
ACCEL_GSEL2
); 
	`BIT_CLEAR
(
P4SEL
, ACCEL_GSEL1 | ACCEL_GSEL2); BIT_SET(
P4OUT
, ACCEL_GSEL1 | ACCEL_GSEL2);}

54 

	)

	@h/compass.h

1 #i‚de‡
__COMPASS_H__


2 
	#__COMPASS_H__


	)

4 
	~<sys/öây≥s.h
>

8 
	eHMC5843


10 
	mCREGA
 = 0,

11 
	mCREGB
,

12 
	mMODEREG
,

13 
	mX_AXIS_MSBREG
,

14 
	mX_AXIS_LSBREG
,

15 
	mY_AXIS_MSBREG
,

16 
	mY_AXIS_LSBREG
,

17 
	mZ_AXIS_MSBREG
,

18 
	mZ_AXIS_LSBREG
,

19 
	mSTATUSREG
,

20 
	mIREGA
,

21 
	mIREGB
,

22 
	mIREGC


25 
	sHMC5843_CREGA_BITS


27 
uöt8_t
 
	mMS
:2;

28 
uöt8_t
 
	mDO
:3;

29 
uöt8_t
 
	mNC
:3;

32 
	uHMC5843_CREGA_REG


34 
HMC5843_CREGA_BITS
 
	mbô
;

35 
uöt8_t
 
	mÆl
;

38 
	sHMC5843_CREGB_BITS


40 
uöt8_t
 
	mDL
:4;

41 
uöt8_t
 
	mNC
:1;

42 
uöt8_t
 
	mGL
:3;

45 
	uHMC5843_CREGB_REG


47 
HMC5843_CREGB_BITS
 
	mbô
;

48 
uöt8_t
 
	mÆl
;

52 
	sHMC5843_MODEREG_BITS


54 
uöt8_t
 
	mMD
:2;

55 
uöt8_t
 
	mNC
:6;

58 
	uHMC5843_MODEREG_REG


60 
HMC5843_MODEREG_BITS
 
	mbô
;

61 
uöt8_t
 
	mÆl
;

65 
HMC5843_CREGA_REG
 
Com∑ssCRAReg
;

66 
HMC5843_CREGB_REG
 
Com∑ssCRBReg
;

67 
HMC5843_MODEREG_REG
 
Com∑ssMRReg
;

69 
uöt8_t
 
RódCom∑ssIREGA
();

70 
uöt8_t
 
RódCom∑ssIREGB
();

71 
uöt8_t
 
RódCom∑ssIREGC
();

72 
uöt8_t
 
RódCom∑ssSètusReg
();

73 
uöt16_t
 
RódCom∑ssXAxis
();

74 
uöt16_t
 
RódCom∑ssYAxis
();

75 
uöt16_t
 
RódCom∑ssZAxis
();

76 
uöt8_t
 
RódCom∑ssCREGA
();

77 
uöt8_t
 
RódCom∑ssCREGB
();

78 
uöt8_t
 
RódCom∑ssMODEREG
();

80 
WrôeCom∑ssCREGA
(
uöt8_t
 
Buf
);

81 
WrôeCom∑ssCREGB
(
uöt8_t
 
Buf
);

82 
WrôeCom∑ssMODEREG
(
uöt8_t
 
Buf
);

	@h/config.h

1 #i‚de‡
_CONFIG_H


2 
	#_CONFIG_H


	)

5 
	#CONFIG_CONSOLE
 1

	)

8 
	#CONFIG_PRINTF
 1

	)

11 
	#CONFIG_CONSOLE_QUEUE_SIZE
 (16)

	)

14 
	#CONFIG_PRINTF_LINE_SIZE
 (80)

	)

17 
	#CONFIG_CONSOLE_LINE_SIZE
 (80)

	)

20 
	#CONFIG_NTRX_RECAL_DELAY
 (3000)

	)

23 
	#CONFIG_REG_MAP_NR
 (501)

	)

36 
	#CONFIG_AVR_BOARD_11
 1

	)

39 
	#CONFIG_CLK_73_MHZ
 1

	)

43 
	#CONFIG_NTRX_AUTO_RECALIB
 1

	)

46 
	#CONFIG_NTRX_RF_TX_EXT_PAMP_OUT
 1

	)

49 
	#CONFIG_NTRX_22MHZ_500NS
 1

	)

50 
	#CONFIG_NTRX_22MHZ_1000NS
 1

	)

51 
	#CONFIG_NTRX_22MHZ_2000NS
 1

	)

52 
	#CONFIG_NTRX_22MHZ_4000NS
 1

	)

53 
	#CONFIG_NTRX_22MHZ_8000NS
 1

	)

54 
	#CONFIG_NTRX_22MHZ_16000NS
 1

	)

55 
	#CONFIG_NTRX_80MHZ_500NS
 1

	)

56 
	#CONFIG_NTRX_80MHZ_1000NS
 1

	)

57 
	#CONFIG_NTRX_80MHZ_2000NS
 1

	)

58 
	#CONFIG_NTRX_80MHZ_4000NS
 1

	)

59 
	#CONFIG_NTRX_22MHZ_HR_4000NS
 1

	)

67 
	#CONFIG_DEFAULT_TRX_80MHZ_1000NS
 1

	)

71 #i‡ (!
deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_500NS
) \

72 && !
deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_1000NS
) \

73 && !
deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_2000NS
) \

74 && !
deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_4000NS
) \

75 && !
deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_8000NS
) \

76 && !
deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_16000NS
) \

77 && !
deföed
 (
CONFIG_DEFAULT_TRX_80MHZ_500NS
) \

78 && !
deföed
 (
CONFIG_DEFAULT_TRX_80MHZ_1000NS
) \

79 && !
deföed
 (
CONFIG_DEFAULT_TRX_80MHZ_2000NS
) \

80 && !
deföed
 (
CONFIG_DEFAULT_TRX_80MHZ_4000NS
) \

81 && !
	$deföed
 (
CONFIG_DEFAULT_TRX_22MHZ_HR_4000NS
))

82 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


83 
	#CONFIG_DEFAULT_TRX_80MHZ_1000NS
 1

	)

84 #w¨nög 
No
  
mode
 
£t
. 
Së
 
to
 80
Mhz
 1u
s
!

86 #îr‹ 
PÀa£
 
£À˘
 
a
  
mode
 
ö
 
c⁄fig
.
h


90 
	#CONFIG_80MHz_1us_1M_S
 1

	)

91 
	#CONFIG_FIXmode
 1

	)

	@h/dco.h

3 #i‚de‡
_DCO_H_


4 
	#_DCO_H_


	)

6 
m•430_timî_öô
();

	@h/delay.h

2 #i‚de‡
_DELAY_H_


3 
	#_DELAY_H_


	)

5 
ölöe
 
usdñay
(
uöt16_t
 
us
);

6 
ölöe
 
msdñay
(
uöt16_t
 
ms
);

7 
ölöe
 
hwdñay
(
uöt32_t
 
us
);

	@h/gps.h

1 #i‚de‡
__GPS_H__


2 
	#__GPS_H__


	)

4 
GPSRowD©a
[256];

6 
InôGPSU¨t
();

7 
U¨t0GëByã
(*
c
);

8 
GPSGëD©a
();

9 
GPS_isVaûd
(
Àn
);

10 
GPS_∑r£GPGGA
(
Àn
);

11 
GPS_∑r£GPRMC
(
Àn
);

12 
GPS_∑r£GPVTG
(
Àn
);

13 
GPSTask
();

	@h/hwclock.h

20 #i‚def 
_HWCLOCK_H


21 
	#_HWCLOCK_H


	)

23 
	~"c⁄fig.h
"

24 
	~"¡rxty≥s.h
"

25 
	~"utû.h
"

28 
	#NKEYS
 4

	)

30 
hw˛ock_öô
();

31 
hw˛ock_°›
 ();

32 
SèπTimî2
 ();

33 
MyDw‹d32T
 
hw˛ock
();

34 
hwdñay
(
MyDw‹d32T
 
t
);

35 
hw˛ockRe°¨t
(
MyDw‹d32T
 
°¨t
);

36 
SëWdtCou¡î
 (
MyDw‹d32T
 
vÆue
);

41 
	#ENTER_TASK
 { 
uöt16_t
 
cSR
; \

42 
__asm
 vﬁ©ûê("movÑ2, %0" : "Ù"((
uöt16_t
)
cSR
)); \

43 
	`CRITICAL_SECTION_START
();

	)

45 
	#LEAVE_TASK
 
__asm
 vﬁ©ûê("mov %0,Ñ2" : "Ù"((
uöt16_t
)
cSR
)); \

46 
	`CRITICAL_SECTION_END
(); }

	)

49 #ifde‡
CONFIG_IMPULSE_COUNTER


50 
MyDw‹d32T
 
GëImpuÀCou¡î
 (
MyByã8T
 
i
);

51 
MyDw‹d32T
 
GëAndRe£tImpuÀCou¡î
 (
MyByã8T
 
i
);

55 #ifde‡
CONFIG_OPTO_COUNTER


56 
MyDw‹d32T
 
GëO±oCou¡î
 ();

57 
MyDw‹d32T
 
GëAndRe£tO±oCou¡î
 ();

	@h/i2c.h

1 #i‚de‡
__I2C_H__


2 
	#__I2C_H__


	)

4 
	~"pöma¸os.h
"

6 
	#I2C_OWN_ADD
 (()(0x49))

	)

11 
MAKE_PORT_MACRO
(
I2C_SDA
, 3, 1);

12 
MAKE_PORT_MACRO
(
I2C_SCL
, 3, 3);

13 
MAKE_PORT_MACRO
(
UTX0
, 3, 4);

14 
MAKE_PORT_MACRO
(
URX0
, 3, 5);

20 
I2CSPIMuxSñe˘
(
ty≥
);

21 
WrôeI2CDevi˚REG
(
SœveAddªss
, 
SœveRegAddªss
, 
WrôeC¡
, * 
pWrôeBuf
);

22 
RódI2CDevi˚REG
(
SœveAddªss
, 
SœveRegAddªss
, 
RódC¡
, *
pRódBuf
);

23 
InôI2CModuÀ
();

24 
InôI2CTx
();

25 
InôI2CRx
();

	@h/ina219.h

1 #i‚de‡
__INA219_H__


2 
	#__INA219_H__


	)

4 
	~<sys/öây≥s.h
>

7 
	#I2C_INA219_MSP_ADD
 (()(0x40))

	)

8 
	#I2C_INA219_RADIO_ADD
 (()(0x41))

	)

9 
	#I2C_INA219_SENSOR_ADD
 (()(0x44))

	)

11 
	#INA219_CAL
(
x
Ë(
uöt16_t
)(()40960 / ()x + 0.5)

	)

13 
	eINA219_REG


15 
	mCONFIG_REG
 = 0,

16 
	mSHUNT_VOLT
,

17 
	mBUS_VOLT
,

18 
	mPOWER
,

19 
	mCURRENT
,

20 
	mCALIBRATION


24 
	sINA219_CONFIGURE_BIT


26 
uöt16_t
 
	mMODE
:3;

27 
uöt16_t
 
	mSADC
:4;

28 
uöt16_t
 
	mBADC
:4;

29 
uöt16_t
 
	mPG
:2;

30 
uöt16_t
 
	mBRANG
:1;

31 
uöt16_t
 
	mNC
:1;

32 
uöt16_t
 
	mRST
:1;

36 
	uINA219_CONFiguª_REG


38 
INA219_CONFIGURE_BIT
 
	mbô
;

39 
uöt16_t
 
	mÆl
;

42 
INA219_CONFiguª_REG
 
INA219C⁄figªReg
;

45 
WrôeINA219C⁄figReg
(
öt8_t
 
SœveAddªss
, 
uöt16_t
 
D©a
);

46 
WrôeINA219CÆibøti⁄Reg
(
öt8_t
 
SœveAddªss
, 
uöt16_t
 
D©a
);

49 
uöt16_t
 
RódINA219C⁄figReg
(
öt8_t
 
SœveAddªss
);

50 
öt32_t
 
RódINA219Shu¡VﬁtReg
(
öt8_t
 
SœveAddªss
);

51 
uöt16_t
 
RódINA219BusVﬁtReg
(
öt8_t
 
SœveAddªss
);

52 
uöt16_t
 
RódINA219PowîReg
(
öt8_t
 
SœveAddªss
);

53 
uöt16_t
 
RódINA219CuºítReg
(
öt8_t
 
SœveAddªss
);

54 
uöt16_t
 
RódINA219CÆibøti⁄Reg
(
öt8_t
 
SœveAddªss
);

	@h/keys.h

18 #i‚def 
_KEYS_H


19 
	#_KEYS_H


	)

20 
	~"c⁄fig.h
"

21 
	~"¡rxty≥s.h
"

26 #ifdef 
CONFIG_PORTATION_ATMEGA128_BOARD


27 
MyBoﬁT
 
key_Êags
[];

29 
	#key_k1
(Ë
key_Êags
[0]

	)

30 
	#key_k2
(Ë
key_Êags
[1]

	)

31 
	#key_k3
(Ë
key_Êags
[2]

	)

	@h/led.h

1 #i‚def 
_LED_H_


2 
	#_LED_H_


	)

4 
	~<io.h
>

5 
	~"ymŸe2_io.h
"

6 
	~"comm⁄_def.h
"

9 
	#LEDS_MASK
 0x1F

10 

	)

11 
ölöe
 
	$dev_Àds_⁄
(
uöt16_t
 
bô
)

13 if(
bô
 & (1 << 0)Ë
	`BIT_CLEAR
(
P5OUT
, 
LED1
);

14 if(
bô
 & (1 << 1)Ë
	`BIT_CLEAR
(
P5OUT
, 
LED2
);

15 if(
bô
 & (1 << 2)Ë
	`BIT_CLEAR
(
P5OUT
, 
LED3
);

16 if(
bô
 & (1 << 3)Ë
	`BIT_CLEAR
(
P1OUT
, 
LED4
);

17 if(
bô
 & (1 << 4)Ë
	`BIT_CLEAR
(
P2OUT
, 
LED5
);

19 
	}
}

21 
ölöe
 
	$dev_Àds_off
(
uöt16_t
 
bô
)

24 if(
bô
 & (1 << 0)Ë
	`BIT_SET
(
P5OUT
, 
LED1
);

25 if(
bô
 & (1 << 1)Ë
	`BIT_SET
(
P5OUT
, 
LED2
);

26 if(
bô
 & (1 << 2)Ë
	`BIT_SET
(
P5OUT
, 
LED3
);

27 if(
bô
 & (1 << 3)Ë
	`BIT_SET
(
P1OUT
, 
LED4
);

28 if(
bô
 & (1 << 4)Ë
	`BIT_SET
(
P2OUT
, 
LED5
);

29 
	}
}

31 
ölöe
 
	$dev_Àds_öô
()

34 
	`BIT_SET
(
P5DIR
, (
LED1
 | 
LED2
 | 
LED3
));

35 
	`BIT_CLEAR
(
P5SEL
, (
LED1
 | 
LED2
 | 
LED3
));

36 
	`BIT_SET
(
P5OUT
, (
LED1
 | 
LED2
 | 
LED3
));

39 
	`BIT_SET
(
P1DIR
, 
LED4
);

40 
	`BIT_CLEAR
(
P1SEL
, 
LED4
);

41 
	`BIT_SET
(
P1OUT
, 
LED4
);

44 
	`BIT_SET
(
P2DIR
, 
LED5
);

45 
	`BIT_CLEAR
(
P2SEL
, 
LED5
);

46 
	`BIT_SET
(
P2OUT
, 
LED5
);

48 
	}
}

50 
Àds_£t
(
uöt16_t
 
bô
, uöt16_à
mode
);

53 
	#LEDS_NORMAL
 0

	)

54 
	#LEDS_ON
 1

	)

55 
	#LEDS_OFF
 2

	)

56 
	#LEDS_TOGGLE
 3

	)

59 
ölöe
 
	$Àd1_⁄
(Ë{ 
	`Àds_£t
(1 << 0, 
LEDS_ON
); 
	}
}

60 
ölöe
 
	$Àd2_⁄
(Ë{ 
	`Àds_£t
(1 << 1, 
LEDS_ON
); 
	}
}

61 
ölöe
 
	$Àd3_⁄
(Ë{ 
	`Àds_£t
(1 << 2, 
LEDS_ON
); 
	}
}

62 
ölöe
 
	$Àd4_⁄
(Ë{ 
	`Àds_£t
(1 << 3, 
LEDS_ON
); 
	}
}

63 
ölöe
 
	$Àd5_⁄
(Ë{ 
	`Àds_£t
(1 << 4, 
LEDS_ON
); 
	}
}

66 
ölöe
 
	$Àd1_off
(Ë{ 
	`Àds_£t
(1 << 0, 
LEDS_OFF
); 
	}
}

67 
ölöe
 
	$Àd2_off
(Ë{ 
	`Àds_£t
(1 << 1, 
LEDS_OFF
); 
	}
}

68 
ölöe
 
	$Àd3_off
(Ë{ 
	`Àds_£t
(1 << 2, 
LEDS_OFF
); 
	}
}

69 
ölöe
 
	$Àd4_off
(Ë{ 
	`Àds_£t
(1 << 3, 
LEDS_OFF
); 
	}
}

70 
ölöe
 
	$Àd5_off
(Ë{ 
	`Àds_£t
(1 << 4, 
LEDS_OFF
); 
	}
}

72 
ölöe
 
	$Àd1_toggÀ
(Ë{ 
	`Àds_£t
(1 << 0, 
LEDS_TOGGLE
); 
	}
}

73 
ölöe
 
	$Àd2_toggÀ
(Ë{ 
	`Àds_£t
(1 << 1, 
LEDS_TOGGLE
); 
	}
}

74 
ölöe
 
	$Àd3_toggÀ
(Ë{ 
	`Àds_£t
(1 << 2, 
LEDS_TOGGLE
); 
	}
}

75 
ölöe
 
	$Àd4_toggÀ
(Ë{ 
	`Àds_£t
(1 << 3, 
LEDS_TOGGLE
); 
	}
}

76 
ölöe
 
	$Àd5_toggÀ
(Ë{ 
	`Àds_£t
(1 << 4, 
LEDS_TOGGLE
); 
	}
}

	@h/main.h

4 #i‚def 
__MAIN_H__


5 
	#__MAIN_H__


	)

7 
uöt8_t
 
U¨tTy≥
;

10 
InôComp⁄ítPowî
();

11 
InôCuºítM⁄ô‹
();

12 
InôCom∑ss
();

13 
InôMSPGPIOFu˘i⁄
();

14 
SCIDebugExtSñe˘
(
uöt8_t
 
Ty≥
);

	@h/na5tr1.h

1 #i‚de‡
__NA5TR1_H__


2 
	#__NA5TR1_H__


	)

4 
	~"pöma¸os.h
"

18 
MAKE_PORT_MACRO
(
RF_UCRESET
, 1,0);

19 
MAKE_PORT_MACRO
(
RF_TXRX
, 1,3);

20 
MAKE_PORT_MACRO
(
RF_SPISSN
, 2,6);

21 
MAKE_PORT_MACRO
(
RF_PONRESET
,3,0);

22 
MAKE_PORT_MACRO
(
RF_LDO_CE
, 4,2);

23 
MAKE_PORT_MACRO
(
RF_SPIRXD
, 5,1);

24 
MAKE_PORT_MACRO
(
RF_SPITXD
, 5,2);

25 
MAKE_PORT_MACRO
(
RF_SPICLK
, 5,3);

27 
MAKE_PORT_MACRO
(
RF_UCIRQ
, 2,7);

28 
MAKE_PORTINT_MACRO
(
RF_UCIRQ
, 2,7);

	@h/nnspi.h

20 #i‚de‡ 
_NNSPI_H


21 
	#_NNSPI_H


	)

23 
	~"c⁄fig.h
"

24 
	~"¡rxty≥s.h
"

29 
	mREAD_CMD
 = 0x00,

30 
	mWRITE_CMD
 = 0x80

31 } 
	tCMDT
;

33 
	#NANONETRESETDELAY
 1000

	)

37 
N™oRe£t
 ();

38 
InôSPI
 ();

39 
SëupSPI
 ();

40 
NTRXRódSPI
(
MyByã8T
 
addªss
, MyByã8T *
buf„r
, MyByã8T 
Àn
);

41 
NTRXWrôeSPI
(
MyByã8T
 
addªss
, MyByã8T *
buf„r
, MyByã8T 
Àn
);

46 
NTRXRódSögÀSPI
(
MyByã8T
 
addªss
, MyByã8T *
buf„r
);

47 
NTRXWrôeSögÀSPI
(
MyByã8T
 
addªss
, MyByã8T 
buf„r
);

49 #ifde‡
CONFIG_SPI_TRACE


50 
	#TRACE_DATA_LEN
 2

	)

51 
	#TRACE_BUFFER_SIZE
 200

	)

52 
	såa˚S


54 
	mcmd
;

55 
	mÀn
;

56 
	maddr
;

57 
	md©a
[
TRACE_DATA_LEN
];

58 
	mid
;

59 } 
	tåa˚T
;

61 
¥ötSpiTø˚
 (
mö
, 
max
);

62 
åa˚SpiRe£t
 ();

63 
åa˚Spi
(
CMDT
 
comm™d
, 
MyByã8T
 
addªss
,

64 
MyByã8T
 *
buf„r
, MyByã8T 
Àn
);

	@h/ntrxdil.h

20 #i‚de‡
_NTRXDIL_H


21 
	#_NTRXDIL_H


	)

23 
	~"c⁄fig.h
"

24 
	~"¡rxty≥s.h
"

26 
	~"Off°M≠Inô.h
"

28 
	#SAPALLOCERR
 0

	)

29 
	#SAPALLOCID
 1

	)

30 
	#TXWAIT
 100

	)

31 
	#TXPOWER_10dBm
 49

	)

33 
	#NTRX_VER_INIT
 
NA_Vîsi⁄_I


	)

34 
	#NTRX_REV_INIT
 
NA_Revisi⁄_I


	)

35 
	#NTRX_VERSION
 
NA_Vîsi⁄_O


	)

36 
	#NTRX_TX_PUSH_PULL
 
NA_SpiTxDrivî_O


	)

39 
	mRe˚ivî_off
,

40 
	mRe˚ivî_⁄


41 } 
	tRECEIVER_STATE
;

43 
	sTX°©


45 
MyDw‹d32T
 
	mÆlCou¡
;

46 
MyDw‹d32T
 
	msuc˚ssCou¡
;

47 
MyDw‹d32T
 
	mARQcou¡
;

48 
MyDw‹d32T
 
	murunCou¡
;

49 } 
	tPPSTX°©T
;

51 
	sRX°©


53 
MyDw‹d32T
 
	mÆlCou¡
;

54 
MyDw‹d32T
 
	msuc˚ssCou¡
;

55 
MyDw‹d32T
 
	m‹unCou¡
;

56 
MyDw‹d32T
 
	mCRC1ÁûsCou¡
;

57 
MyDw‹d32T
 
	mCRC2ÁûsCou¡
;

58 
MyDw‹d32T
 
	mc‹rBôEºCou¡
;

59 
MyByã8T
 
	mœ°RSSI
;

60 }
	tPPSRX°©T
;

62 
TX°©
 
sTX°©
;

63 
RX°©
 
sRX°©
;

69 
	m‰ameBrﬂdˇ°
,

70 
	m‰ameTimeB


71 } 
	tRXFTYPE_T
;

75 
	m¸c2_1
,

76 
	m¸c2_2
,

77 
	m¸c2_3


78 } 
	tPPS_CRC2_T
;

82 
	mcs_off
,

83 
	mcs_symbﬁs
,

84 
	mcs_rssi
,

85 
	mcs_symb_rssi


86 } 
	tPPS_MACMETH_T
;

90 
	m¨qMode_off
,

91 
	m¨qMode_¸c1
,

92 
	m¨q_Mode_¸c2


93 } 
	tRXARQMODE_T
;

97 
	md©a_øã_500kps
,

98 
	md©a_øã_1mps


99 } 
	tDATA_RATE_T
;

102 
MyBoﬁT
 
NåxInô
();

103 
MyBoﬁT
 
NTRXSèπ
 ();

104 
NTRXUpd©e
();

105 
MyByã8T
 
NTRXGëTxARQC¡
 ();

106 
ölöe
 
«noI¡îru±
 ();

107 
NTRXSëIndexReg
 (
MyByã8T
 
∑ge
);

108 
NTRXSëCÆI¡îvÆ
 (
MyDw‹d32T
 
ci
);

109 
NTRXR™ge
(
MyAddrT
 
de°
);

110 
NTRXSëPﬁlMode
 (
MyByã8T
 
mode
);

112 
NTRXSídMesßge
 (
MyByã8T
 *
addr
, 
MyPåT
 
∑ylﬂd
, 
MyW‹d16T
 
Àn
);

113 
NTRXSídMesßgeExt
 (
MyAddªssT
 
addr
, 
MyPåT
 
∑ylﬂd
, 
MyW‹d16T
 
Àn
, 
MyByã8T
 
›t
);

	@h/ntrxiqpar.h

19 #i‚de‡
NTRXIQPAR_H


20 
	#NTRXIQPAR_H


	)

22 
	~"c⁄fig.h
"

23 
	~"¡rxty≥s.h
"

25 
NTRXSëAgcVÆues
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
, MyByã8T 
symbﬁR©e
);

26 
NTRXSëTxIQM©rix
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
);

27 
NTRXSëRxIQM©rix
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
);

28 
NTRXSëC‹rThªshﬁd
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
);

	@h/ntrxranging.h

20 #i‚de‡
NTRXRANGING_H


21 
	#NTRXRANGING_H


	)

23 
	~"¡rxty≥s.h
"

33 
gëDi°™˚
();

46 
R™gögCÆlback_Rx
(
MyByã8T
 *
∑ylﬂd
, MyByã8T 
Àn
);

58 
R™gögCÆlback_Ack
(
MyByã8T
 
¨qCou¡
);

70 
R™gögMode
(
MyAddrT
 
de°
);

	@h/ntrxtypes.h

20 #i‚def 
_NTRXTYPES_H


21 
	#_NTRXTYPES_H


	)

23 
	#BITS2BYTES
(
n
Ë“/8Ë

	)

25 #i‚def 
NULL


26 
	#NULL
 (0)

	)

29 #i‚def 
NIL


30 
	#NIL
 (0)

	)

33 #ifde‡
__˝lu•lus


42 sig√d 
	tMyCh¨8T
;

49 
	tMyByã8T
;

56 sig√d 
	tMyI¡16T
;

63 
	tMyW‹d16T
;

70 sig√d 
	tMyL⁄g32T
;

77 
	tMyDw‹d32T
;

84 
	tMyDoubÀ32T
;

86 #ifdef 
TRUE


87 #unde‡
TRUE


90 #ifdef 
FALSE


91 #unde‡
FALSE


100 
FALSE
 = 0,

101 
TRUE
 = 1

102 } 
	tMyBoﬁT
;

109 *
	tMyPåT
;

116 (*
MyFnPåT
)();

123 
MyDw‹d32T
 
	tMyTimeT
;

131 
MyDw‹d32T
 
	tMyMtimeT
;

138 
MyByã8T
 
	tMyAddªssT
[
BITS2BYTES
(48)];

139 
MyAddªssT
 
	tMyAddrT
;

147 
MyByã8T
 
	tMyByã24T
[
BITS2BYTES
(24)];

155 
MyByã8T
 
	tMyByã64T
[
BITS2BYTES
(64)];

162 
	s_tm_
 {

163 
MyI¡16T
 
tm_£c
;

164 
MyI¡16T
 
tm_mö
;

165 
MyI¡16T
 
tm_hour
;

166 
MyI¡16T
 
tm_mday
;

167 
MyI¡16T
 
tm_m⁄
;

168 
MyI¡16T
 
tm_yór
;

169 
MyI¡16T
 
tm_wday
;

170 
MyI¡16T
 
tm_yday
;

171 
MyI¡16T
 
tm_isd°
;

172 } 
	tMyTmT
;

179 
	s_µ¶i°t_
 {

180 
_µ¶i°t_
 *
liNext
;

181 
_µ¶i°t_
 *
liPªv
;

182 *
liD©a
;

183 } 
	tMyLi°T
;

185 #ifde‡
__˝lu•lus


	@h/ntrxutil.h

20 #i‚de‡
NTRXUTIL_H


21 
	#NTRXUTIL_H


	)

24 
	~"c⁄fig.h
"

25 
	~"¡rxty≥s.h
"

26 
	~"Off°M≠Inô.h
"

28 
	sSëtögs


30 
MyByã8T
 
	mbw
;

31 
MyByã8T
 
	msd
;

32 
MyByã8T
 
	m§
;

33 
MyByã8T
 
	mfdma
;

34 
MyByã8T
 
	mfixnm≠
;

35 
MyDoubÀ32T
 
	møngögC⁄°
;

36 }
	tSëtögsT
;

38 
SëtögsT
 
£âögVÆ
;

41 
MyBoﬁT
 
bRxCrc2Mode
;

42 
MyBoﬁT
 
¡rxRun
;

43 
MyByã8T
 
¡rxIrqSètus
[2];

44 
MyAddªssT
 
¡rxMacAddr
;

45 
MyByã8T
 
¡rxSèã
;

46 
MyByã8T
 
¡rxCÆ
;

49 
	#SHADOWREGCOUNT
 128

	)

51 
	#DELAY_20us
 
	`hwdñay
(40Ë

	)

52 
	#DELAY_100us
 
	`hwdñay
(130)

	)

53 
	#DELAY_800us
 
	`hwdñay
(3200Ë

	)

54 
	#DELAY_20ms
 { 
	`hwdñay
(8000); hwdñay(8000); hwdñay (8000); hwdñay (3000); }

	)

55 
	#RfTxOuçutPowîD©a_DEFAULT
 0x3f

	)

56 
	#RfTxOuçutPowîReq_DEFAULT
 0x3f

	)

58 
MyByã8T
 
¡rxShadowReg
[
SHADOWREGCOUNT
];

60 
	#TxIDLE
 0x00

	)

61 
	#TxSEND
 0x01

	)

62 
	#TxWAIT
 0x02

	)

64 
	#NoCAL
 0X00

	)

65 
	#TxCAL
 0x01

	)

66 
	#RxCAL
 0x02

	)

67 
	#AŒCAL
 0x03

	)

68 
	#NA_MAX_ARQ_CNT
 0x0A

	)

73 #ifde‡
CONFIG_PORTATION_ATMEGA128_BOARD


75 
	#RódRomByã
(
p
Ë
	`pgm_ªad_byã
(&’))

	)

76 
	#RódRomW‹d
(
p
Ë
	`pgm_ªad_w‹d
(&’))

	)

78 
	#mem˝y_P
 
mem˝y


	)

79 
	#PROGMEM


	)

80 
	#RódRomByã
(
p
Ë
	)
p

81 
	#RódRomW‹d
(
p
Ë
	)
p

84 
	#txIrqSètus
 (
¡rxIrqSètus
[0])

	)

85 
	#rxIrqSètus
 (
¡rxIrqSètus
[1])

	)

87 
MyBoﬁT
 
rcosc_adj
 (
MyByã8T
*);

88 #i‡(
CONFIG_REG_MAP_NR
 <= 1097)

89 
∑bc_adj
 (c⁄° 
MyByã8T
*, const MyByte8T*);

91 
NTRXTxLoAdju°
 ();

92 
NTRXRxLoAdju°
 ();

94 
SëRxSt›
 ();

95 
NTRXAŒCÆibøti⁄
 ();

96 
NTRXSëSèAddªss
 (
MyByã8T
 *
addªss
);

97 
NTRXRxLoCÆibøti⁄
 ();

98 
NTRXTxLoCÆibøti⁄
 ();

99 
MyBoﬁT
 
NTRXCheckVîRev
 ();

100 
NTRXInôShadowRegi°î
 ();

101 
NTRXSëRfChúpGíD©a
 ();

102 
MyByã8T
 
NTRXGëTxARQmax
 ();

103 
MyBoﬁT
 
NTRXGëRxCRC2mode
 ();

105 
£tRxIRQ
 (
MyByã8T
 *
pBôP©ã∫
);

106 #i‡
deföed
 (
CONFIG_NTRX_GET_OUT_PWR
Ë|| deföed (
CONFIG_NTRX_STM_FULL
)

107 
MyByã8T
 
NTRXGëRfOuçutPowî
 (MyByã8T 
ty≥
);

109 #i‡
deföed
 (
CONFIG_NTRX_GET_PWR_ENTRY
Ë|| deföed (
CONFIG_NTRX_STM_FULL
)

110 
MyByã8T
 
NTRXGëPowîE¡ry
 (MyByã8T 
vÆue
);

112 
NTRXPro˚ssTabÀ
 (c⁄° 
MyByã8T
 *
èbÀ
);

113 
NTRXSëD©aR©e
 (
MyByã8T
 
vÆue
);

114 
NTRXSëSèAddªss
 (
MyByã8T
 *
addªss
);

116 
NTRXPro˚ssSequí˚
 (c⁄° 
MyByã8T
 *
èbÀ
);

117 
NTRXF˘CÆ
 ();

118 
NTRX1MbôInô
 ();

120 
MyBoﬁT
 
NTRXCheckTabÀ
 ();

121 
NTRXSëCh™√l
 (
MyByã8T
 
vÆue
);

122 
MyByã8T
 
NTRXGëCh™√l
 ();

125 
	sNTRXRegCmd


127 
MyByã8T
 
	maddrHi
;

128 
MyByã8T
 
	maddrLo
;

129 
MyByã8T
 
	mmask
;

130 
MyByã8T
 
	m›î©i⁄
;

131 
MyByã8T
 
	mshadow
;

132 
MyByã8T
 
	mªgId
;

133 
MyByã8T
 
	möôVÆue
;

134 } 
	tNTRXRegCmdT
;

139 
	mNA_SpiBôOrdî
,

140 
	mNA_SpiTxDrivî
,

141 
	mNA_IrqPﬁ¨ôy
,

142 
	mNA_IrqDrivî
,

144 
	mNA_Vîsi⁄
,

145 
	mNA_WakeUpTimeByã
,

147 
	mNA_Revisi⁄
,

148 
	mNA_WakeUpTimeWe
,

150 
	mNA_B©tMgmtE«bÀ
,

151 
	mNA_B©tMgmtThªshﬁd
,

152 
	mNA_B©tMgmtCom∑ª
,

154 
	mNA_DioDúe˘i⁄
,

155 
	mNA_DioOutVÆueAœrmE«bÀ
,

156 
	mNA_DioAœrmSèπ
,

157 
	mNA_DioAœrmPﬁ¨ôy
,

158 
	mNA_DioU£PuŒup
,

159 
	mNA_DioU£PuŒdown
,

160 
	mNA_DioInVÆueAœrmSètus
,

162 
	mNA_DioP‹tWe
,

164 
	mNA_E«bÀWakeUpRtc
,

165 
	mNA_E«bÀWakeUpDio
,

166 
	mNA_PowîUpTime
,

167 
	mNA_PowîDownMode
,

169 
	mNA_PowîDown
,

170 
	mNA_Re£tBbClockG©e
,

171 
	mNA_Re£tBbRadioCål
,

172 
	mNA_U£PuŒup4Te°
,

173 
	mNA_U£PuŒdown4Te°
,

175 
	mNA_E«bÀBbCry°Æ
,

176 
	mNA_E«bÀBbClock
,

177 
	mNA_By∑ssBbCry°Æ
,

178 
	mNA_FótuªClockFªq
,

179 
	mNA_E«bÀFótuªClock
,

181 
	mNA_U£PuŒup4Spi˛k
,

182 
	mNA_U£PuŒdown4Spi˛k
,

183 
	mNA_U£PuŒup4Spis¢
,

184 
	mNA_U£PuŒdown4Spis¢
,

185 
	mNA_U£PuŒup4Spúxd
,

186 
	mNA_U£PuŒdown4Spúxd
,

187 
	mNA_U£PuŒup4Spôxd
,

188 
	mNA_U£PuŒdown4Spôxd
,

190 
	mNA_U£PuŒup4P‹
,

191 
	mNA_U£PuŒdown4P‹
,

192 
	mNA_U£PuŒup4Pamp
,

193 
	mNA_U£PuŒdown4Pamp
,

194 
	mNA_U£PuŒup4Ucúq
,

195 
	mNA_U£PuŒdown4Ucúq
,

196 
	mNA_U£PuŒup4U¸°
,

197 
	mNA_U£PuŒdown4U¸°
,

199 
	mNA_WrôePuŒs4Spi
,

200 
	mNA_WrôePuŒs4Pads
,

202 
	mNA_RamIndex
,

203 
	mNA_Devi˚Sñe˘
,

205 
	mNA_TxIrqE«bÀ
,

206 
	mNA_RxIrqE«bÀ
,

207 
	mNA_BbTimîIrqE«bÀ
,

208 
	mNA_LoIrqE«bÀ
,

209 
	mNA_TxIrqSètus
,

210 
	mNA_RxIrqSètus
,

211 
	mNA_BbTimîIrqSètus
,

212 
	mNA_LoIrqSètus
,

214 
	mNA_TxI¡sRawSèt
,

215 
	mNA_TxI¡sRe£t
,

217 
	mNA_RxI¡sRawSèt
,

218 
	mNA_RxI¡sRe£t
,

220 
	mNA_LoI¡sRawSèt
,

221 
	mNA_LoI¡sRe£t
,

222 
	mNA_CÀ¨Ba£b™dTimîI¡
,

224 
	mNA_TxI¡sEn
,

226 
	mNA_RxI¡sEn
,

228 
	mNA_LoI¡sEn
,

230 
	mNA_LoE«bÀFa°Tunög
,

231 
	mNA_LoFa°TunögLevñ
,

232 
	mNA_LoE«bÀLsbNeg
,

233 
	mNA_U£LoRxC≠s
,

235 
	mNA_LoT¨gëVÆue
,

237 
	mNA_AgcThªsHﬁd1
,

239 
	mNA_AgcThªsHﬁd2
,

241 
	mNA_HﬁdAgcInBôSync
,

242 
	mNA_HﬁdAgcInFømeSync
,

244 
	mNA_AgcDódTime
,

245 
	mNA_AgcNªgLígth
,

247 
	mNA_AgcI¡Time
,

249 
	mNA_AgcVÆue
,

250 
	mNA_AgcDeÁu…En
,

251 
	mNA_AgcHﬁd
,

253 
	mNA_AgcRssiThªs
,

254 
	mNA_AgcGaö
,

256 
	mNA_ChúpFûãrC≠s
,

257 
	mNA_F˘ClockEn
,

258 
	mNA_SèπF˘Mósuª
,

259 
	mNA_E«bÀTx
,

260 
	mNA_F˘Pîiod
,

262 
	mNA_TﬂOff£tMónD©aVÆid
,

264 
	mNA_Pha£Off£tD©a
,

265 
	mNA_Pha£Off£tAck
,

267 
	mNA_TﬂOff£tMónAckVÆid
,

269 
	mNA_RxPackëTy≥
,

270 
	mNA_RxAddrM©ch
,

271 
	mNA_RxCrc1Sèt
,

272 
	mNA_RxCrc2Sèt
,

274 
	mNA_RxC‹rBôEº
,

275 
	mNA_RxC‹rEºThªs
,

277 
	mNA_RxAddrSegEsM©ch
,

278 
	mNA_RxAddrSegIsM©ch
,

279 
	mNA_RxCry±En
,

280 
	mNA_RxCry±Id
,

281 
	mNA_RxCry±SeqN
,

283 
	mNA_TxTimeSlŸC⁄åﬁ
,

284 
	mNA_RxTimeSlŸC⁄åﬁ
,

286 
	mNA_TxArqC¡
,

287 
	mNA_TxArqMax
,

289 
	mNA_CsqDôhîVÆue
,

290 
	mNA_CsqU£Pha£Shi·
,

291 
	mNA_CsqU£4Pha£s
,

292 
	mNA_CsqAsyMode
,

293 
	mNA_CsqMemAddrInô
,

294 
	mNA_CsqU£Ram
,

296 
	mNA_D3lFixnM≠
,

297 
	mNA_D3lPomEn
,

298 
	mNA_D3lPomLí
,

299 
	mNA_D3lUpDownEx
,

301 
	mNA_LóveM≠Thªsh1InBôsync
,

302 
	mNA_U£M≠Thªsh1InFømesync
,

304 
	mNA_Go2M≠Thªsh1InBôsync
,

306 
	mNA_E«bÀLO
,

307 
	mNA_E«bÀLOdiv10
,

308 
	mNA_E«bÀCsqClock
,

309 
	mNA_InvîtRxClock
,

310 
	mNA_E«bÀExtPA
,

312 
	mNA_L«FªqAdju°
,

313 
	mNA_TxPaBüs
,

315 
	mNA_TxOuçutPowî0
,

317 
	mNA_TxOuçutPowî1
,

319 
	mNA_RfRxCompVÆueI
,

321 
	mNA_RfRxCompVÆueQ
,

323 
	mNA_SymbﬁDur
,

324 
	mNA_SymbﬁR©e
,

325 
	mNA_Moduœti⁄Sy°em
,

327 
	mNA_Crc2Ty≥
,

328 
	mNA_U£Fec
,

329 
	mNA_TxRxCry±Crc2Mode
,

330 
	mNA_TxRxCry±ClkMode
,

332 
	mNA_Sw≠BbBuf„rs
,

333 
	mNA_TxRxBbBuf„rMode1
,

334 
	mNA_TxRxBbBuf„rMode0
,

335 
	mNA_FdmaE«bÀ
,

336 
	mNA_TxRxMode
,

338 
	mNA_ChúpM©rix0
,

339 
	mNA_ChúpM©rix1
,

341 
	mNA_ChúpM©rix2
,

342 
	mNA_ChúpM©rix3
,

344 
	mNA_TxPªTøûM©rix0
,

345 
	mNA_TxPªTøûM©rix1
,

346 
	mNA_TxUndîrunIgn‹e
,

347 
	mNA_TxMacCifsDis
,

349 
	mNA_TxVC¨rSís
,

350 
	mNA_TxPhC¨rSí£Mode
,

351 
	mNA_TxVC¨rSísAck
,

352 
	mNA_TxArq
,

353 
	mNA_Tx3Way
,

354 
	mNA_TxBackOffAlg
,

355 
	mNA_TxFøgPrio
,

357 
	mNA_TxBackOffSìd
,

359 
	mNA_TxCry±SeqRe£t
,

360 
	mNA_TxCry±En
,

361 
	mNA_TxCry±Id
,

362 
	mNA_TxCry±SeqN
,

364 
	mNA_TxS¸ambInô
,

365 
	mNA_TxS¸ambEn
,

367 
	mNA_TxPackëTy≥
,

368 
	mNA_TxAddrSl˘
,

370 
	mNA_TxCmdSt›
,

371 
	mNA_TxCmdSèπ
,

372 
	mNA_TxBuf„rCmd
,

374 
	mNA_RxCmdSt›
,

375 
	mNA_RxCmdSèπ
,

376 
	mNA_RxBuf„rCmd
,

378 
	mNA_RxCry±SeqRe£t
,

380 
	mNA_RxTimeBCrc1Mode
,

381 
	mNA_RxCrc2Mode
,

382 
	mNA_RxArqMode
,

383 
	mNA_RxAddrSegEsMode
,

384 
	mNA_RxAddrSegIsMode
,

385 
	mNA_RxAddrSegDevIdL
,

387 
	mNA_RxD©aEn
,

388 
	mNA_RxBrdˇ°En
,

389 
	mNA_RxTimeBEn
,

390 
	mNA_RxAddrMode
,

391 
	mNA_R™gögPul£s
,

393 
	mNA_Pul£DëDñay
,

395 
	mNA_G©eAdjThªshﬁd
,

396 
	mNA_DownPul£Dëe˘Dis
,

397 
	mNA_UpPul£Dëe˘Dis
,

399 
	mNA_G©eSizeUnsync
,

400 
	mNA_G©eSizeBôsync
,

401 
	mNA_G©eSizeFømesync
,

402 
	mNA_G©eAdjBôsyncEn
,

403 
	mNA_G©eAdjFømesyncEn
,

405 
	mNA_Go2BôsyncThªshﬁd
,

406 
	mNA_LóveBôsyncThªshﬁd
,

408 
	mNA_RtcTimeBTxAdj
,

410 
	mNA_RtcTimeBRxAdj
,

412 
	mNA_RtcCmdWr
,

413 
	mNA_RtcCmdRd
,

414 
	mNA_RtcTimeBAutoMode
,

416 
	mNA_AgcAm∂ôude
,

418 
	mNA_AgcR™geOff£t
,

419 
	mNA_U£A…î«tiveAgc
,

421 
	mNA_RamTxLígth
,

422 
	mNA_RamSèAddr0
,

423 
	mNA_SyncW‹d
,

424 
	mNA_TﬂOff£tMónD©a
,

425 
	mNA_TxRe•Time
,

426 
	mNA_TﬂOff£tMónAck
,

428 
	mTRX_CHIRP_GEN_DATA
,

429 
	mTRX_ADJ
,

430 
	mTRX_DELAY
,

432 
	mCMD_ERROR


433 } 
	tNTRXCmdTE
;

435 
	eFRMTYPE


437 
	m‰mTy≥D©a
 = 
NA_Ty≥CodeD©a_VC_C
,

438 
	m‰mTy≥Ack
 = 
NA_Ty≥CodeAck_VC_C
,

439 
	m‰mTy≥TimeB
 = 
NA_Ty≥CodeTimeB_VC_C
,

440 
	m‰mTy≥Brdˇ°
 = 
NA_Ty≥CodeBrdˇ°_VC_C
,

441 
	m‰mTy≥Req2s
 = 
NA_Ty≥CodeReq2s_VC_C
,

442 
	m‰mTy≥CÃ2s
 = 
NA_Ty≥CodeCÃ2s_VC_C
,

443 
	m‰mTy≥Undef
 = 
NA_Ty≥CodeUndef_VC_C


446 
	eDILDATARATE


448 
	møã500kS
 = 
NA_SymbﬁR©e500kSymbﬁs_VC_C
,

449 
	møã1MS
 = 
NA_SymbﬁR©e1MSymbﬁs_VC_C


452 
	eDILMODSYSTEM


454 
	mmod2¨y
 = 
NA_Moduœti⁄Sy°em2¨y_BC_C
,

455 
	mmod4¨y
 = 
NA_Moduœti⁄Sy°em4¨y_BC_C


458 
	eSETTXRXSWORD


460 
	msW‹dTx
 = 0,

461 
	msW‹dRx
 = 1

464 
	eDILSTAADDNO


466 
	m°aAdd0
 = 0,

467 
	m°aAdd1
 = 1

470 
	eCHIRPBYTE


472 
	mchúpByã0
 = 0x02,

473 
	mchúpByã1
 = 0x04,

474 
	mchúpByã2
 = 0x08

477 
	eDILPRETRAILSYMBOLS


479 
	mchúpSymb0
 = 0,

480 
	mchúpSymb1
 = 1,

481 
	mchúpSymb2
 = 2,

482 
	mchúpSymb3
 = 3

492 
	eARQMODE


494 
	m¨qModeN⁄e
 = 
NA_RxArqModeN⁄e_VC_C
,

495 
	m¨qModeCrc1
 = 
NA_RxArqModeCrc1_VC_C
,

496 
	m¨qModeCrc2
 = 
NA_RxArqModeCrc2_VC_C


499 
	ePHCARRSENSMODE


501 
	mphC¨rSísOff
 = 
NA_TxPhC¨rSísModeOff_VC_C
,

502 
	mphC¨rSísSymbﬁs
 = 
NA_TxPhC¨rSísModeSymbﬁs_VC_C
,

503 
	mphC¨rSísRSSI
 = 
NA_TxPhC¨rSísModeRssi_VC_C
,

504 
	mphC¨rSísSymRSSI
 = 
NA_TxPhC¨rSísModeSymbﬁsRssi_VC_C


507 
	ePWROUTTYPE


509 
	mpwrOutD©a
 = 0,

510 
	mpwrOutReq°
 = 1

514 
NTRXSëIndexReg
 (
MyByã8T
 
∑ge
);

515 
NTRXSëRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 
vÆue
);

516 
NTRXGëRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 *
ªg
);

517 
NTRXSëNRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 *
d©a
);

518 
NTRXGëNRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 *
ªg
);

519 
NTRXSëSyncW‹d
 (
MyByã8T
 *
vÆue
);

520 
NTRXSëupSpiI¡îÁ˚
 (
MyBoﬁT
 
lsb
);

521 
NTRX250kbôInô_22MHz
 ();

522 
NTRXSëAgcVÆues
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
, MyByã8T 
symbﬁR©e
);

523 
NTRXSëRxIQM©rix
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
);

524 
NTRXSëTxIQM©rix
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
);

525 
NTRXSëThªshﬁd
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
);

526 
NTRXSëupTRxMode
 (
MyByã8T
 
fdma
, MyByã8T 
sd
, MyByã8T 
§
);

527 
SëRxSèπ
();

528 
SëRxSt›
 ();

529 
NTRXSëTøn•¨ítMode
–
MyBoﬁT
 
⁄
 );

530 
NTRXPowîdownMode
 (
MyByã8T
 
mode
, 
MyDw‹d32T
 
£c⁄ds
);

531 
NTRXSèπBa£b™dTimî
 (
MyI¡16T
 
°¨tvÆue
);

532 
NTRXSt›Ba£b™dTimî
 ();

536 
	#NA_80MHz
 0

	)

537 
	#NA_22MHz
 1

	)

538 
	#NA_22MHz_HR
 2

	)

540 
	#NA_31k25_S
 
NA_SymbﬁR©e31k25Symbﬁs_VC_C


	)

541 
	#NA_62k5_S
 
NA_SymbﬁR©e62k5Symbﬁs_VC_C


	)

542 
	#NA_125k_S
 
NA_SymbﬁR©e125kSymbﬁs_VC_C


	)

543 
	#NA_250k_S
 
NA_SymbﬁR©e250kSymbﬁs_VC_C


	)

544 
	#NA_500k_S
 
NA_SymbﬁR©e500kSymbﬁs_VC_C


	)

545 
	#NA_1M_S
 
NA_SymbﬁR©e1MSymbﬁs_VC_C


	)

546 
	#NA_2M_S
 
NA_SymbﬁR©e2MSymbﬁs_VC_C


	)

548 
	#NA_500ns
 
NA_SymbﬁDur500ns_C


	)

549 
	#NA_1us
 
NA_SymbﬁDur1000ns_C


	)

550 
	#NA_2us
 
NA_SymbﬁDur2000ns_C


	)

551 
	#NA_4us
 
NA_SymbﬁDur4000ns_C


	)

552 
	#NA_8us
 
NA_SymbﬁDur8000ns_C


	)

553 
	#NA_16us
 
NA_SymbﬁDur16000ns_C


	)

555 
	#NA_MAP_MODE
 0

	)

556 
	#NA_FIX_MODE
 1

	)

	@h/pinmacros.h

1 #i‚de‡
_PIN_MACROS_H_


2 
	#_PIN_MACROS_H_


	)

4 
	~<io.h
>

7 
	#MAKE_PORT_MACRO
(
__«me
, 
__p‹t
, 
__pö
) \

8 
ölöe
 
SET_PORT_OUT_
##
__«me
##
	`_PIN
(Ë{ 
P
##
__p‹t
##
DIR
 |(1 << 
__pö
); } \

9 
ölöe
 
SET_PORT_IN_
##
__«me
##
	`_PIN
(Ë{ 
P
##
__p‹t
##
DIR
 &~(1 << 
__pö
); } \

10 
ölöe
 
SET_PORT_HIGH_
##
__«me
##
	`_PIN
(Ë{ 
P
##
__p‹t
##
OUT
 |(1 << 
__pö
); } \

11 
ölöe
 
SET_PORT_LOW_
##
__«me
##
	`_PIN
(Ë{ 
P
##
__p‹t
##
OUT
 &~(1 << 
__pö
); } \

12 
ölöe
 
SET_PORT_MOD_
##
__«me
##
	`_PIN
(Ë{ 
P
##
__p‹t
##
SEL
 |(1 << 
__pö
); } \

13 
ölöe
 
SET_PORT_IO_
##
__«me
##
	`_PIN
(Ë{ 
P
##
__p‹t
##
SEL
 &~(1 << 
__pö
); } \

14 
ölöe
 
uöt8_t
 
GET_PORT_
##
__«me
##
	`_PIN
(Ë{  (
P
##
__p‹t
##
IN
 & (1 << 
__pö
)); }

	)

17 
	#MAKE_PORTINT_MACRO
(
__«me
, 
__p‹t
, 
__pö
) \

18 
ölöe
 
INIT_
##
__«me
##
	`_INT_PIN
(Ë{ 
SET_PORT_IN_
##__«me##
	`_PIN
(); 
SET_PORT_IO_
##__name##_PIN(); } \

19 
ölöe
 
ENABLE_
##
__«me
##
	`_INT
(Ë{ 
P
##
__p‹t
##
IE
 |(1 << 
__pö
); } \

20 
ölöe
 
CLEAR_
##
__«me
##
	`_INT
(Ë{ 
P
##
__p‹t
##
IFG
 &~(1 << 
__pö
); } \

21 
ölöe
 
DISABLE_
##
__«me
##
	`_INT
(Ë{ 
P
##
__p‹t
##
IE
 &~(1 << 
__pö
); 
CLEAR_
##__name##_INT(); } \

22 
ölöe
 
SET_POSEDGE_
##
__«me
##
	`_INT
() { \

23 
DISABLE_
##
__«me
##
	`_INT
(); \

24 
CLEAR_
##
__«me
##
	`_INT
(); \

25 
P
##
__p‹t
##
IES
 &~(1 << 
__pö
); \

26 
ENABLE_
##
__«me
##
	`_INT
(); \

28 
ölöe
 
SET_NEGEDGE_
##
__«me
##
	`_INT
() { \

29 
DISABLE_
##
__«me
##
	`_INT
(); \

30 
CLEAR_
##
__«me
##
	`_INT
(); \

31 
P
##
__p‹t
##
IES
 |(1 << 
__pö
); \

32 
ENABLE_
##
__«me
##
	`_INT
(); \

34 

	)

36 
	#MAKE_TIMERCC_MACRO
(
__«me
, 
__p‹t
, 
__pö
) \

37 
ölöe
 
INIT_
##
__«me
##
	`_INT_PIN
(Ë{ 
SET_PORT_MOD_
##__«me##
	`_PIN
(); } \

38 
ölöe
 
ENABLE_
##
__«me
##
	`_INT
(Ë{ 
T
##
__p‹t
##
CCTL
##
__pö
 |
CCIE
; } \

39 
ölöe
 
CLEAR_
##
__«me
##
	`_OVERFLOW
(Ë{ 
T
##
__p‹t
##
CCTL
##
__pö
 &~
COV
; } \

40 
ölöe
 
CLEAR_
##
__«me
##
	`_INT
(Ë{ 
T
##
__p‹t
##
CCTL
##
__pö
 &~
CCIFG
; 
	`CLEAR_CC2420_SFD_OVERFLOW
(); } \

41 
ölöe
 
DISABLE_
##
__«me
##
	`_INT
(Ë{ 
T
##
__p‹t
##
CCTL
##
__pö
 &~
OUT
; 
CLEAR_
##__name##_INT(); } \

42 
ölöe
 
SET_POSEDGE_
##
__«me
##
	`_INT
() { \

43 
DISABLE_
##
__«me
##
	`_INT
(); \

44 
T
##
__p‹t
##
CCTL
##
__pö
 = (
SCS
 + 
CAP
 + 
CM_1
); \

45 
CLEAR_
##
__«me
##
	`_OVERFLOW
(); \

46 
CLEAR_
##
__«me
##
	`_INT
(); \

47 
ENABLE_
##
__«me
##
	`_INT
(); \

49 
ölöe
 
SET_NEGEDGE_
##
__«me
##
	`_INT
() { \

50 
DISABLE_
##
__«me
##
	`_INT
(); \

51 
T
##
__p‹t
##
CCTL
##
__pö
 = (
SCS
 + 
CAP
 + 
CM_2
); \

52 
CLEAR_
##
__«me
##
	`_OVERFLOW
(); \

53 
CLEAR_
##
__«me
##
	`_INT
(); \

54 
ENABLE_
##
__«me
##
	`_INT
(); \

56 

	)

	@h/timer.h

1 #i‚de‡
__TIMER_H__


2 
	#__TIMER_H__


	)

4 
	~<sys/öây≥s.h
>

6 
uöt16_t
 
Tick1S
;

7 
uöt16_t
 
SWC¡
;

8 
uöt16_t
 
BTC⁄sﬁe
;

10 
InôTimî
();

	@h/types.h

1 #i‚de‡
__TYPES_H__


2 
	#__TYPES_H__


	)

4 
	tUöt32
;

5 
	töt32
;

7 
	tUöt16
;

8 
	töt16
;

10 
	tUbyã
;

11 
	tbyã
;

14 
	#TRUE
 1

	)

15 
	#ON
 1

	)

17 
	#FALSE
 0

	)

18 
	#OFF
 0

	)

	@h/usart.h

1 #i‚def 
_USART_H_


2 
	#_USART_H_


	)

4 
	~<io.h
>

5 
	~<°dio.h
>

6 
	~"utû.h
"

8 
u¨t_öô
();

9 
TxPrötf
(*
F‹m
, ...);

11 #ifde‡
TRACE_DEBUG


13 
	#TRACE_MAX_BUFFER_SIZE
 256

	)

16 
	#TRACE
(
__f‹m©
, ...) \

18 
	`TRACE_FAST
(
__f‹m©
, ##
__VA_ARGS__
); \

19 

	)

21 
	#TRACE_FAST
(
__f‹m©
, ...) \

23 
__size
, 
__idx
; \

24 
buf
[
TRACE_MAX_BUFFER_SIZE
], *
pBuf
 = buf; \

25 
__size
 = 
	`•rötf
(
buf
, 
__f‹m©
, ##
__VA_ARGS__
); \

26 
	`CRITICAL_SECTION_START
(); \

30 
__idx
=0; __idx<
__size
; __idx++) { \

32 
TXBUF0
 = 
pBuf
[
__idx
]; \

34 !(
IFG1
 & 
UTXIFG0
)); \

38 
	`CRITICAL_SECTION_END
(); \

39 } 0)

	)

43 
	#TRACE
(
__f‹m©
, ...)

	)

	@h/util.h

1 #i‚de‡
_UTIL_H_


2 
	#_UTIL_H_


	)

4 
	~<io.h
>

7 
	#EINT
(Ë
asm
 vﬁ©ûê("eöt")

	)

8 
	#DINT
(Ë
asm
 vﬁ©ûê("döt\n\ä›")

	)

11 
	#CRITICAL_SECTION_START
() \

13 
uöt16_t
 
__¸ôiˇl_£˘i⁄
 = 
	`__make_¸ôiˇl_£˘i⁄
();

	)

15 
	#CRITICAL_SECTION_END
() \

16 
	`__quô_¸ôiˇl_£˘i⁄
(
__¸ôiˇl_£˘i⁄
); \

17 }

	)

19 
	#CRITICAL_SECTION_END_NO_BRACE
(Ë
	`__quô_¸ôiˇl_£˘i⁄
(
__¸ôiˇl_£˘i⁄
)

	)

21 
	#CS_START
 
CRITICAL_SECTION_START


	)

22 
	#CS_END
 
CRITICAL_SECTION_END


	)

24 
îr‹_h™dÀr
(
uöt16_t
 
Àd
, uöt16_à
dñay
);

25 
di•_Àd
(
uöt8_t
 
vÆ
);

26 
hÆt
();

29 
uöt16_t
 
__make_¸ôiˇl_£˘i⁄
();

30 
__quô_¸ôiˇl_£˘i⁄
(
uöt16_t
 
__¸ôiˇl_£˘i⁄
);

32 
SëUSART0_SPI_MODE
();

33 
SëUSART0_UART_MODE
();

	@h/ymote2_io.h

1 #i‚def 
__YMOTE2_IO_H__


2 
	#__YMOTE2_IO_H__


	)

7 
	#P1_0
 0x01

	)

8 
	#P1_1
 0x02

	)

9 
	#P1_2
 0x04

	)

10 
	#P1_3
 0x08

	)

11 
	#P1_4
 0x10

	)

12 
	#P1_5
 0x20

	)

13 
	#P1_6
 0x40

	)

14 
	#P1_7
 0x80

	)

16 
	#P2_0
 0x01

	)

17 
	#P2_1
 0x02

	)

18 
	#P2_2
 0x04

	)

19 
	#P2_3
 0x08

	)

20 
	#P2_4
 0x10

	)

21 
	#P2_5
 0x20

	)

22 
	#P2_6
 0x40

	)

23 
	#P2_7
 0x80

	)

25 
	#P3_0
 0x01

	)

26 
	#P3_1
 0x02

	)

27 
	#P3_2
 0x04

	)

28 
	#P3_3
 0x08

	)

29 
	#P3_4
 0x10

	)

30 
	#P3_5
 0x20

	)

31 
	#P3_6
 0x40

	)

32 
	#P3_7
 0x80

	)

34 
	#P4_0
 0x01

	)

35 
	#P4_1
 0x02

	)

36 
	#P4_2
 0x04

	)

37 
	#P4_3
 0x08

	)

38 
	#P4_4
 0x10

	)

39 
	#P4_5
 0x20

	)

40 
	#P4_6
 0x40

	)

41 
	#P4_7
 0x80

	)

44 
	#P5_0
 0x01

	)

45 
	#P5_1
 0x02

	)

46 
	#P5_2
 0x04

	)

47 
	#P5_3
 0x08

	)

48 
	#P5_4
 0x10

	)

49 
	#P5_5
 0x20

	)

50 
	#P5_6
 0x40

	)

51 
	#P5_7
 0x80

	)

53 
	#P6_0
 0x01

	)

54 
	#P6_1
 0x02

	)

55 
	#P6_2
 0x04

	)

56 
	#P6_3
 0x08

	)

57 
	#P6_4
 0x10

	)

58 
	#P6_5
 0x20

	)

59 
	#P6_6
 0x40

	)

60 
	#P6_7
 0x80

	)

64 
	#RF_UCRESET
 
P1_0


	)

65 
	#BSL_TX
 
P1_1


	)

66 
	#USR_SW
 
P1_2


	)

67 
	#RF_TXRX
 
P1_3


	)

68 
	#LED4
 
P1_4


	)

69 
	#BTRST
 
P1_5


	)

70 
	#BTRTS
 
P1_6


	)

71 
	#BTCTS
 
P1_7


	)

73 
	#LED5
 
P2_0


	)

74 
	#DEBUG_EXT_SCI_OE
 
P2_1


	)

75 
	#BSL_RX
 
P2_2


	)

76 
	#BT_GPS_SCI_OE
 
P2_3


	)

77 
	#COMPASS_LDO_CE
 
P2_4


	)

78 
	#MSP_ROSC
 
P2_5


79 
	#RF_SPISSN
 
P2_6


	)

80 
	#RF_UCIRQ
 
P2_7


	)

82 
	#RF_PONRESET
 
P3_0


	)

83 
	#I2C_SDA
 
P3_1


	)

84 
	#BT_LDO_CE
 
P3_2


	)

85 
	#I2C_SCL
 
P3_3


	)

86 
	#UTXD0
 
P3_4


	)

87 
	#URXD0
 
P3_5


	)

88 
	#NC0
 
P3_6


89 
	#NC1
 
P3_7


90 

	)

91 
	#GPS_LDO_CE
 
P4_0


	)

92 
	#GPS_EN
 
P4_1


	)

93 
	#RF_LDO_CE
 
P4_2


	)

94 
	#ACCEL_LDO_CE
 
P4_3


	)

95 
	#ACCEL_GSEL1
 
P4_4


	)

96 
	#ACCEL_GSEL2
 
P4_5


	)

97 
	#ACCEL_SEP
 
P4_6


	)

98 
	#GYRO_LDO_CE
 
P4_7


	)

100 
	#GYRO_AZ
 
P5_0


	)

101 
	#RF_SPIRXD
 
P5_1


	)

102 
	#RF_SPITXD
 
P5_2


	)

103 
	#RF_SPICLK
 
P5_3


	)

104 
	#LED1
 
P5_4


	)

105 
	#LED2
 
P5_5


	)

106 
	#LED3
 
P5_6


	)

107 
	#NC2
 
P5_7


108 

	)

	@hbm2x1m.c

1 
	~<io.h
>

2 
	~"hbm2x1m.h
"

3 
	~"dñay.h
"

4 
	~<sig«l.h
>

6 
	$HBM2X1M_ª£t
()

12 
	`SET_PORT_HIGH_BTRST_PIN
();

13 
	`msdñay
(100);

14 
	`SET_PORT_LOW_BTRST_PIN
();

15 
	}
}

17 
	$HBM2X1M_öô
()

22 
	`SET_PORT_OUT_BTRST_PIN
();

23 
	`SET_PORT_IO_BTRST_PIN
();

29 
	`SET_PORT_OUT_BTLDOCE_PIN
();

30 
	`SET_PORT_IO_BTLDOCE_PIN
();

31 
	`SET_PORT_HIGH_BTLDOCE_PIN
();

37 
	`SET_PORT_IN_BTRTS_PIN
();

38 
	`SET_PORT_IO_BTRTS_PIN
();

50 
	`SET_PORT_OUT_BTCTS_PIN
();

51 
	`SET_PORT_IO_BTCTS_PIN
();

52 
	`SET_PORT_LOW_BTCTS_PIN
();

55 
	`_DINT
();

56 
	`InôBTU¨t
();

57 
	`_EINT
();

59 
	`HBM2X1M_ª£t
();

61 
	}
}

63 
	$InôBTU¨t
()

65 
	`msdñay
(1);

68 
P3SEL
 &= ~((1<<1) | (1<<3));

70 
P3SEL
 |= (1<<4) | (1<<5);

72 
U0CTL
 = 0;

85 
UCTL0
 = 
CHAR
 + 
SWRST
;

86 
ME1
 = 
UTXE0
 + 
URXE0
;

87 
U0TCTL
 = 
SSEL0
 | 
SSEL1
;

88 
U0BR1
 = 0x00;

89 
U0BR0
 = 0x12;

90 
U0MCTL
 = 0x84;

91 
U0CTL
 &~
SWRST
;

93 
IFG1
 &~(
UTXIFG0
);

94 
IFG1
 &~(
URXIFG0
);

96 
IFG1
 &~
URXIFG0
; 
IE1
 |
URXIE0
;

103 
	}
}

105 
	$bt_£nd_cmd
(c⁄° *
cmd_°r
)

107 
i
 = 0;

109  
cmd_°r
[
i
] != '\0' )

111 
TXBUF0
 = 
cmd_°r
[
i
++];

113 !(
IFG1
 & 
UTXIFG0
));

115 
	}
}

	@hbm2x1m.h

1 #i‚de‡
_HBM2X1M_H_


2 
	#_HBM2X1M_H_


	)

4 
	~"pöma¸os.h
"

14 
MAKE_PORT_MACRO
(
BTRST
, 1,5);

15 
MAKE_PORT_MACRO
(
BTRTS
, 1,6);

16 
MAKE_PORT_MACRO
(
BTCTS
, 1,7);

17 
MAKE_PORT_MACRO
(
BTLDOCE
, 3,2);

20 
HBM2X1M_ª£t
();

21 
HBM2X1M_öô
();

22 
InôBTU¨t
();

23 
bt_£nd_cmd
(c⁄° *
cmd_°r
);

	@hwclock.c

20 
	~"c⁄fig.h
"

21 
	~"¡rxty≥s.h
"

22 
	~"hw˛ock.h
"

23 
	~<io.h
>

24 #i‚de‡
__OPTIMIZE__


25 
	#__OPTIMIZE__
 0

	)

27 
	~<dñay.h
>

28 
	~<sig«l.h
>

32 
	~"utû.h
"

33 
	~"Àd.h
"

34 
	~"ußπ.h
"

36 
	#MILLISECONDS_PER_TICK
 10

	)

44 
MyDw‹d32T
 
	gjiffõs
 = 0;

45 
MyDw‹d32T
 
	gbogo_mùs
 = 0;

74 
	#MAX_TIMER_TICK
 320

	)

75 
	$hw˛ockRe°¨t
 (
MyDw‹d32T
 
°¨t
)

82 
TACTL
 = 
TACLR
 + 
MC_0
;

85 
TBCTL
 = 
TBCLR
 + 
MC_0
;

92 
jiffõs
 = 
°¨t
;

93 
bogo_mùs
 = 0;

94 
	}
}

103 
	$hw˛ock_öô
()

110 
	`EINT
();

111 
	`hw˛ockRe°¨t
(0);

112 
	}
}

122 
MyDw‹d32T
 
	$hw˛ock
()

124  
jiffõs
;

125 
	}
}

143 
	$öãºu±
(26Ë
	$tbc¸0_h™dÀr
()

147 
TBR
 = 0;

148 
TBCCR0
 = 
MAX_TIMER_TICK
;

181 
jiffõs
 +
MILLISECONDS_PER_TICK
;

182 
	}
}

	@i2c.c

10 
	~<io.h
>

11 
	~<sig«l.h
>

12 
	~<sys/öây≥s.h
>

13 
	~<i§_com∑t.h
>

14 
	~"i2c.h
"

15 
	~"ußπ.h
"

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~"comm⁄_def.h
"

20 
	~"dñay.h
"

22 vﬁ©ûê
	gI2CBuf„rPoöãr
 = 0;

23 vﬁ©ûê
	gI2CRódCou¡
 = 0;

24 vﬁ©ûê
	gI2CWrôeCou¡
 = 0;

25 vﬁ©ûê*
	gpI2CBuf„r
 = 0;

26 vﬁ©ûê
	gI2CSœveRegAddªss
 = 0;

33 
	$InôI2CModuÀ
()

35 
	`msdñay
(1);

38 
	`SET_PORT_IO_UTX0_PIN
();

39 
	`SET_PORT_IO_URX0_PIN
();

43 
	`SET_PORT_MOD_I2C_SDA_PIN
();

44 
	`SET_PORT_MOD_I2C_SCL_PIN
();

48 
	`SET_PORT_IN_I2C_SDA_PIN
();

49 
	`SET_PORT_IN_I2C_SCL_PIN
();

51 
U0CTL
 = 0;

53 
	`BIT_SET
(
U0CTL
, 
SWRST
);

56 
	`BIT_SET
(
U0CTL
, 
I2C
 + 
SYNC
);

58 
	`BIT_CLEAR
(
U0CTL
, 
I2CEN
);

60 
	`BIT_CLEAR
(
U0CTL
, 
XA
);

61 
	`BIT_CLEAR
(
U0CTL
, 
LISTEN
);

62 
	`BIT_CLEAR
(
U0CTL
, 
RXDMAEN
);

63 
	`BIT_CLEAR
(
U0CTL
, 
TXDMAEN
);

65 
I2CTCTL
 = 0X00;

66 
I2CTCTL
 = 
I2CSSEL_3
;

68 
I2CIE
 = 0;

70 
I2CIFG
 = 0x00;

72 
I2COA
 = 
I2C_OWN_ADD
;

77 
I2CPSC
 = 0X00;

78 
I2CSCLL
 = 
I2CSCLH
 = 0X00;

81 
	`BIT_SET
(
U0CTL
, 
I2CEN
);

83 
	`BIT_CLEAR
(
IFG1
, 
UTXIFG0
);

84 
	`BIT_CLEAR
(
IFG1
, 
URXIFG0
);

86 
	}
}

91 
	$InôI2CTx
()

93 
	`BIT_SET
(
U0CTL
, 
MST
);

94 
	`BIT_SET
(
I2CTCTL
, 
I2CTRX
);

95 
	`BIT_CLEAR
(
I2CIFG
, 
TXRDYIFG
);

97 
I2CIE
 = 
TXRDYIE
;

98 
	}
}

104 
	$InôI2CRx
()

106 
	`BIT_SET
(
U0CTL
, 
MST
);

107 
	`BIT_CLEAR
(
I2CTCTL
, 
I2CTRX
);

109 
I2CIE
 = 
RXRDYIE
;

110 
	}
}

116 
	$WrôeI2CDevi˚REG
(
SœveAddªss
, 
SœveRegAddªss
, 
WrôeC¡
, *
pWrôeBuf
)

119 
I2CDCTL
&
I2CBUSY
);

121 
I2CSA
 = 
SœveAddªss
;

123 
I2CSœveRegAddªss
 = 
SœveRegAddªss
;

125 if(
pI2CBuf„r
 != 0)

126 
	`‰ì
((*)
pI2CBuf„r
);

128 
pI2CBuf„r
 = (*)
	`mÆloc
(
WrôeC¡
);

130 
	`mem˝y
((*)
pI2CBuf„r
, (*)
pWrôeBuf
, 
WrôeC¡
);

132 
I2CNDAT
 = 
I2CWrôeCou¡
 = 
WrôeC¡
 + 1;

133 
I2CBuf„rPoöãr
 = 0;

135 
	`InôI2CTx
();

136 
I2CIFG
 &~
ARDYIFG
;

137 
I2CTCTL
 |
I2CSTT
+
I2CSTP
;

141 
	}
}

147 
	$RódI2CDevi˚REG
(
SœveAddªss
, 
SœveRegAddªss
, 
RódC¡
, *
pRódBuf
)

149 if(
RódC¡
 == 0)  0;

150 if(
pRódBuf
 == 0)  0;

152 
I2CDCTL
&
I2CBUSY
);

154 
I2CSA
 = 
SœveAddªss
;

156 
I2CSœveRegAddªss
 = 
SœveRegAddªss
;

158 
I2CNDAT
 = 
I2CWrôeCou¡
 = 1;

159 
I2CBuf„rPoöãr
 = 0;

161 
	`InôI2CTx
();

162 
I2CIFG
 &~
ARDYIFG
;

163 
I2CTCTL
 |
I2CSTT
;

165 (~
I2CIFG
)& 
ARDYIFG
);

167 
pI2CBuf„r
 = 
pRódBuf
;

168 
I2CNDAT
 = 
I2CRódCou¡
 = 
RódC¡
;

169 
I2CBuf„rPoöãr
 = 0;

171 
	`InôI2CRx
();

172 
I2CIFG
 &~
ARDYIFG
;

173 
I2CTCTL
 |
I2CSTT
+
I2CSTP
;

177 (~
I2CIFG
)& 
ARDYIFG
);

179  
TRUE
;

180 
	}
}

188 
	$öãºu±
(
USART0TX_VECTOR
Ë
	$ISR_I2C
()

191 
I2CIV
)

193 
I2CIV_AL
:

196 
I2CIV_NACK
:

199 
I2CIV_OA
:

202 
I2CIV_ARDY
:

205 
I2CIV_RXRDY
:

207 *(*)(
pI2CBuf„r
 + 
I2CBuf„rPoöãr
Ë
I2CDRB
;

209 if(++
I2CBuf„rPoöãr
 >
I2CRódCou¡
)

211 
I2CIE
 &~
RXRDYIE
;

212 
I2CRódCou¡
 = 
I2CBuf„rPoöãr
 = 0;

213 
pI2CBuf„r
 = 0;

218 
I2CIV_TXRDY
:

220 if(
I2CBuf„rPoöãr
 == 0)

221 
I2CDRB
 = 
I2CSœveRegAddªss
;

223 
I2CDRB
 = *(*)(
pI2CBuf„r
 + 
I2CBuf„rPoöãr
 - 1);

225 if(++
I2CBuf„rPoöãr
 >
I2CWrôeCou¡
)

227 if(
I2CWrôeCou¡
 == 1)

230 
	`‰ì
((*)
pI2CBuf„r
);

232 
I2CIE
 &~
TXRDYIE
;

233 
I2CWrôeCou¡
 = 
I2CBuf„rPoöãr
 = 0;

237 
I2CIV_GC
:

240 
I2CIV_STT
:

246 
	}
}

	@ina219.c

9 
	~<sys/öây≥s.h
>

10 
	~"comm⁄_def.h
"

11 
	~"ymŸe2_io.h
"

12 
	~"i2c.h
"

13 
	~"ußπ.h
"

14 
	~"öa219.h
"

18 
INA219_CONFiguª_REG
 
	gINA219C⁄figªReg
;

26 
	$WrôeINA219C⁄figReg
(
öt8_t
 
SœveAddªss
, 
uöt16_t
 
D©a
)

28 
uöt8_t
 
Buf
[2];

30 
Buf
[0] = (
uöt8_t
)((
D©a
 >> 8) & 0xFF);

31 
Buf
[1] = (
uöt8_t
)(
D©a
 & 0xFF);

33 
	`WrôeI2CDevi˚REG
(
SœveAddªss
, 
CONFIG_REG
, 2, 
Buf
);

34 
	}
}

40 
	$WrôeINA219CÆibøti⁄Reg
(
öt8_t
 
SœveAddªss
, 
uöt16_t
 
D©a
)

42 
uöt8_t
 
Buf
[2];

44 
Buf
[0] = (
uöt8_t
)((
D©a
 >> 8) & 0xFF);

45 
Buf
[1] = (
uöt8_t
)(
D©a
 & 0xFF);

47 
	`WrôeI2CDevi˚REG
(
SœveAddªss
, 
CALIBRATION
, 2, 
Buf
);

48 
	}
}

55 
uöt16_t
 
	$RódINA219C⁄figReg
(
öt8_t
 
SœveAddªss
)

57 
uöt8_t
 
Buf
[2];

59 
	`RódI2CDevi˚REG
(
SœveAddªss
, 
CONFIG_REG
, 2, 
Buf
);

62  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

63 
	}
}

71 
öt32_t
 
	$RódINA219Shu¡VﬁtReg
(
öt8_t
 
SœveAddªss
)

73 
uöt8_t
 
Buf
[2];

74 
öt32_t
 
D©a
;

76 
	`RódI2CDevi˚REG
(
SœveAddªss
, 
SHUNT_VOLT
, 2, 
Buf
);

78 
D©a
 = (
öt32_t
)
	`BYTES2INT
(
Buf
[0], Buf[1]) * 10;

80  
D©a
;

82 
	}
}

88 
uöt16_t
 
	$RódINA219BusVﬁtReg
(
öt8_t
 
SœveAddªss
)

90 
uöt8_t
 
Buf
[2];

91 
uöt16_t
 
D©a
;

93 
	`RódI2CDevi˚REG
(
SœveAddªss
, 
BUS_VOLT
, 2, 
Buf
);

95 
D©a
 = 
	`BYTES2UINT
(
Buf
[0], Buf[1]) >> 1;

97  
D©a
;

98 
	}
}

104 
uöt16_t
 
	$RódINA219PowîReg
(
öt8_t
 
SœveAddªss
)

106 
uöt8_t
 
Buf
[2];

108 
	`RódI2CDevi˚REG
(
SœveAddªss
, 
POWER
, 2, 
Buf
);

110  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

111 
	}
}

118 
uöt16_t
 
	$RódINA219CuºítReg
(
öt8_t
 
SœveAddªss
)

120 
uöt8_t
 
Buf
[2];

122 
	`RódI2CDevi˚REG
(
SœveAddªss
, 
CURRENT
, 2, 
Buf
);

124  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

125 
	}
}

132 
uöt16_t
 
	$RódINA219CÆibøti⁄Reg
(
öt8_t
 
SœveAddªss
)

134 
uöt8_t
 
Buf
[2];

136 
	`RódI2CDevi˚REG
(
SœveAddªss
, 
CALIBRATION
, 2, 
Buf
);

138  
	`BYTES2UINT
(
Buf
[0], Buf[1]);

139 
	}
}

	@led.c

1 
	~"Àd.h
"

3 
uöt16_t
 
	gÀds_vÆ
 = 0;

5 
	$Àds_£t
(
uöt16_t
 
bô
, uöt16_à
mode
)

7 
uöt16_t
 
¥ev
 = 
Àds_vÆ
;

8 
uöt16_t
 
⁄
 = 0, 
off
 = 0;

10 
bô
 &
LEDS_MASK
;

12 
mode
) {

13 
LEDS_NORMAL
:

14 
Àds_vÆ
 = 
bô
;

15 
⁄
 = (
¥ev
 & 
bô
) ^ bit;

16 
off
 = 
¥ev
 & ~
bô
;

18 
LEDS_ON
:

19 
Àds_vÆ
 |
bô
;

20 
⁄
 = 
¥ev
 ^ 
Àds_vÆ
;

22 
LEDS_OFF
:

23 
Àds_vÆ
 &~
bô
;

24 
off
 = 
¥ev
 ^ 
Àds_vÆ
;

26 
LEDS_TOGGLE
:

27 
Àds_vÆ
 ^
bô
;

28 
⁄
 = (
¥ev
 & 
bô
) ^ bit;

29 
off
 = 
¥ev
 & 
bô
;

33 i‡(
⁄
Ë
	`dev_Àds_⁄
(on);

34 i‡(
off
Ë
	`dev_Àds_off
(off);

35 
	}
}

	@main.c

1 
	~<io.h
>

2 
	~<sig«l.h
>

3 
	~<°dio.h
>

4 
	~"maö.h
"

5 
	~"comm⁄_def.h
"

6 
	~"ymŸe2_io.h
"

7 
	~"dco.h
"

8 
	~"Àd.h
"

9 
	~"dñay.h
"

10 
	~"utû.h
"

11 
	~"ußπ.h
"

12 
	~"ty≥s.h
"

13 
	~"i2c.h
"

14 
	~"bm.h
"

15 
	~"öa219.h
"

16 
	~"adc.h
"

17 
	~"com∑ss.h
"

18 
	~"gps.h
"

19 
	~"timî.h
"

20 
	~"hw˛ock.h
"

21 
	~"¬•i.h
"

22 
	~"¡rxdû.h
"

23 
	~"¡rxiq∑r.h
"

24 
	~"¡rxøngög.h
"

25 
	~"¡rxty≥s.h
"

27 
	#RF_ENABLE
 
OFF


	)

28 
	#BT_ENABLE
 
ON


	)

30 
	#GYRO_ENABLE
 
ON


	)

31 
	#ACCEL_ENABLE
 
ON


	)

32 
	#COMPASS_ENABLE
 
ON


	)

33 
	#GPS_ENABLE
 
OFF


	)

36 
	gis_≥ndög
 = 0;

37 
uöt32_t
 
RF_£q
;

38 
öt16_t
 
RF_‰ac
, 
RF_numbî
;

40 
	gTe°Fœg
 = 0;

41 
uöt8_t
 
	gU¨tTy≥
 = 0;

43 
	$maö
()

45 
öt32_t
 
BMCuºít
 = 0;

46 
öt16_t
 
BMVﬁt
 = 0;

48 
uöt16_t
 
MSPCuºít
 = 0;

49 
uöt16_t
 
RadioCuºít
 = 0;

50 
uöt16_t
 
Sís‹Cuºít
 = 0;

52 
uöt16_t
 
RadioVﬁt
 = 0;

53 
uöt16_t
 
MSPVﬁt
 = 0;

54 
uöt16_t
 
Sís‹Vﬁt
 = 0;

56 
öt32_t
 
MSPShu¡Vﬁt
 = 0;

57 
öt32_t
 
RadioShu¡Vﬁt
 = 0;

58 
öt32_t
 
Sís‹Shu¡Vﬁt
 = 0;

60 
uöt16_t
 
Com∑ssX
 = 0;

61 
uöt16_t
 
Com∑ssY
 = 0;

62 
uöt16_t
 
Com∑ssZ
 = 0;

64 
uöt8_t
 
DebugSèπF
 = 
OFF
;

66 
	`_DINT
();

68 
	`dev_Àds_öô
();

70 
	`m•430_timî_öô
();

72 
	`adc_£ns‹_öô
();

74 
	`InôMSPGPIOFu˘i⁄
();

76 
	`InôCuºítM⁄ô‹
();

78 
	`InôComp⁄ítPowî
();

80 
	`InôTimî
();

82 
	`Àd1_⁄
();

83 #i‡
COMPASS_ENABLE
 =
ON


84 
	`InôCom∑ss
();

87 
	`_DINT
();

88 
	`u¨t_öô
();

89 
	`_EINT
();

91 
	`SCIDebugExtSñe˘
(
SCI_DEBUG
);

92 
	`TxPrötf
("\nYmote2.0 Test!!\n");

95 #i‡
BT_ENABLE
 =
ON


97 
	`HBM2X1M_öô
();

98 
	`Àd1_⁄
();

99 
	`msdñay
(1500);

100 
	`Àd1_off
();

101 
	`SCIDebugExtSñe˘
(
SCI_BT
);

102 
	`bt_£nd_cmd
("AT+BTSCAN\r");

103 
	`msdñay
(500);

107 #i‡
RF_ENABLE
 =
ON


109 
	`NåxInô
();

112 #i‡
CONFIG_REG_MAP_NR
 != 501

113 
	`NTRXSèπ
();

117 
	`InôAµliˇti⁄
();

121 
	`_EINT
();

123 
Te°Fœg
 = 0;

126 
TRUE
)

134 
	`Àd1_toggÀ
();

138 
	`_DINT
();

139 
	`InôI2CModuÀ
();

140 
	`_EINT
();

142 
BMCuºít
 = 
	`RódDS2782CURRENTReg
();

143 
BMVﬁt
 = 
	`RódDS2782VOLTReg
();

145 
MSPShu¡Vﬁt
 = 
	`RódINA219Shu¡VﬁtReg
(
I2C_INA219_MSP_ADD
);

146 
MSPCuºít
 = 
	`RódINA219CuºítReg
(
I2C_INA219_MSP_ADD
);

147 
MSPVﬁt
 = 
	`RódINA219BusVﬁtReg
(
I2C_INA219_MSP_ADD
);

149 
Sís‹Shu¡Vﬁt
 = 
	`RódINA219Shu¡VﬁtReg
(
I2C_INA219_SENSOR_ADD
);

150 
Sís‹Cuºít
 = 
	`RódINA219CuºítReg
(
I2C_INA219_SENSOR_ADD
);

151 
Sís‹Vﬁt
 = 
	`RódINA219BusVﬁtReg
(
I2C_INA219_SENSOR_ADD
);

153 
RadioShu¡Vﬁt
 = 
	`RódINA219Shu¡VﬁtReg
(
I2C_INA219_RADIO_ADD
);

154 
RadioCuºít
 = 
	`RódINA219CuºítReg
(
I2C_INA219_RADIO_ADD
);

155 
RadioVﬁt
 = 
	`RódINA219BusVﬁtReg
(
I2C_INA219_RADIO_ADD
);

158 #i‡
ACCEL_ENABLE
 =
ON


159 
	`adc_gë
(
ACC_X_CHANNEL
);

160 
	`WAIT_ADC
();

161 
	`adc_gë
(
ACC_Y_CHANNEL
);

162 
	`WAIT_ADC
();

163 
	`adc_gë
(
ACC_Z_CHANNEL
);

164 
	`WAIT_ADC
();

167 #i‡
GYRO_ENABLE
 =
ON


168 
	`adc_gë
(
GYRO1_X_CHANNEL
);

169 
	`WAIT_ADC
();

170 
	`adc_gë
(
GYRO1_Y_CHANNEL
);

171 
	`WAIT_ADC
();

172 
	`adc_gë
(
GYRO2_X_CHANNEL
);

173 
	`WAIT_ADC
();

174 
	`adc_gë
(
GYRO2_Y_CHANNEL
);

175 
	`WAIT_ADC
();

178 #i‡
COMPASS_ENABLE
 =
ON


179 
Com∑ssX
 = 
	`RódCom∑ssXAxis
();

180 
Com∑ssY
 = 
	`RódCom∑ssYAxis
();

181 
Com∑ssZ
 = 
	`RódCom∑ssZAxis
();

186 #i‡
RF_ENABLE
 =
ON


188 
	`PﬁlAµliˇti⁄
();

190 #ifde‡
USE_UCIRQ


192 
	`CRITICAL_SECTION_START
();

193 i‡(
is_≥ndög
)

195 
	`NTRXUpd©e
();

196 
is_≥ndög
 = 0;

199 
	`CRITICAL_SECTION_END
();

204 
	`NTRXUpd©e
();

210 if(
BTC⁄sﬁe
 =
OFF
)

212 
	`_DINT
();

213 
	`u¨t_öô
();

214 
	`_EINT
();

215 
	`SCIDebugExtSñe˘
(
SCI_DEBUG
);

216 
	`Àd3_off
();

220 
	`_DINT
();

221 
	`InôBTU¨t
();

222 
	`_EINT
();

223 
	`SCIDebugExtSñe˘
(
SCI_BT
);

224 
	`Àd3_⁄
();

229 
SWC¡
)

232 
	`TxPrötf
("BM C: %06ld V: %04d MSP SV:%06ld C:%06d V:%04d Radio SV:%06ld C:%06d V:%04d Sensor SV:%06ld C:%06d V:%04d\n"

233 , 
BMCuºít
, 
BMVﬁt
, 
MSPShu¡Vﬁt
, 
MSPCuºít
, 
MSPVﬁt
, 
RadioShu¡Vﬁt
, 
RadioCuºít
, 
RadioVﬁt
, 
Sís‹Shu¡Vﬁt
, 
Sís‹Cuºít
, 
Sís‹Vﬁt
);

236 
	`TxPrötf
("ACC X : %04d, Y : %04d, Z:%04d\n"

237 , 
ADCResu…
[
ACC_X_CHANNEL
], ADCResu…[
ACC_Y_CHANNEL
], ADCResu…[
ACC_Z_CHANNEL
]);

240 
	`TxPrötf
("GYRO x1 : %04d, y1 : %04d, x2 : %04d, y2 : %04d\n"

241 , 
ADCResu…
[
GYRO1_X_CHANNEL
], ADCResu…[
GYRO1_Y_CHANNEL
], ADCResu…[
GYRO2_X_CHANNEL
], ADCResu…[
GYRO2_Y_CHANNEL
]);

244 
	`TxPrötf
("COMPASS x:%04d, y:%04d, z:%04d \n", 
Com∑ssX
, 
Com∑ssY
, 
Com∑ssZ
);

247 if(
RF_numbî
 < 0)

248 
	`TxPrötf
("Radio Dist Drop\n");

250 
	`TxPrötf
("RadiÿDi†%lu : %3u.%02u\n", 
RF_£q
, 
RF_numbî
, 
RF_‰ac
);

254 #i‡
GPS_ENABLE
 =
ON


255 
	`GPSTask
();

256 
	`TxPrötf
("GPS : %s\n",
GPSRowD©a
);

260 
SWC¡
 = 0;

281 
	}
}

283 
	$InôComp⁄ítPowî
()

288 
BT_POWER_OFF
;

289 
GYRO_POWER_OFF
;

290 
ACCEL_POWER_OFF
;

291 
RF_POWER_OFF
;

292 
COMPASS_POWER_OFF
;

293 
GPS_POWER_OFF
;

295 #if 
RF_ENABLE
 =
ON


296 
RF_POWER_ON
;

298 
RF_POWER_OFF
;

301 #i‡
BT_ENABLE
 =
ON


302 
BT_POWER_ON
;

304 
BT_POWER_OFF
;

307 #i‡
GYRO_ENABLE
 =
ON


308 
GYRO_POWER_ON
;

310 
GYRO_POWER_OFF
;

313 #i‡
ACCEL_ENABLE
 =
ON


314 
ACCEL_POWER_ON
;

315 
ACCEL_G_SEL15
;

316 
ACCEL_ACTIVE
;

318 
ACCEL_POWER_OFF
;

321 #i‡
COMPASS_ENABLE
 =
ON


322 
COMPASS_POWER_ON
;

324 
COMPASS_POWER_OFF
;

327 #i‡
GPS_ENABLE
 =
ON


328 
GPS_POWER_ON
;

329 
GPS_ACTIVE
;

331 
GPS_POWER_OFF
;

335 
	}
}

337 
	$InôCuºítM⁄ô‹
()

339 
	`_DINT
();

340 
	`InôI2CModuÀ
();

341 
	`_EINT
();

345 
INA219C⁄figªReg
.
bô
.
MODE
 = 0x07;

346 
INA219C⁄figªReg
.
bô
.
SADC
 = 0x03;

347 
INA219C⁄figªReg
.
bô
.
BADC
 = 0x03;

348 
INA219C⁄figªReg
.
bô
.
PG
 = 0x00;

349 
INA219C⁄figªReg
.
bô
.
BRANG
 = 0;

350 
INA219C⁄figªReg
.
bô
.
RST
 = 0;

351 
	`WrôeINA219C⁄figReg
(
I2C_INA219_MSP_ADD
, 
INA219C⁄figªReg
.
Æl
);

352 
	`WrôeINA219CÆibøti⁄Reg
(
I2C_INA219_MSP_ADD
, 
	`INA219_CAL
(1.0));

355 
INA219C⁄figªReg
.
bô
.
MODE
 = 0x07;

356 
INA219C⁄figªReg
.
bô
.
SADC
 = 0x03;

357 
INA219C⁄figªReg
.
bô
.
BADC
 = 0x03;

358 
INA219C⁄figªReg
.
bô
.
PG
 = 0x01;

359 
INA219C⁄figªReg
.
bô
.
BRANG
 = 0;

360 
INA219C⁄figªReg
.
bô
.
RST
 = 0;

361 
	`WrôeINA219C⁄figReg
(
I2C_INA219_RADIO_ADD
, 
INA219C⁄figªReg
.
Æl
);

362 
	`WrôeINA219CÆibøti⁄Reg
(
I2C_INA219_RADIO_ADD
, 
	`INA219_CAL
(10.0));

365 
INA219C⁄figªReg
.
bô
.
MODE
 = 0x07;

366 
INA219C⁄figªReg
.
bô
.
SADC
 = 0x03;

367 
INA219C⁄figªReg
.
bô
.
BADC
 = 0x03;

368 
INA219C⁄figªReg
.
bô
.
PG
 = 0x02;

369 
INA219C⁄figªReg
.
bô
.
BRANG
 = 0;

370 
INA219C⁄figªReg
.
bô
.
RST
 = 0;

371 
	`WrôeINA219C⁄figReg
(
I2C_INA219_SENSOR_ADD
, 
INA219C⁄figªReg
.
Æl
);

372 
	`WrôeINA219CÆibøti⁄Reg
(
I2C_INA219_SENSOR_ADD
, 
	`INA219_CAL
(10.0));

375 
	}
}

377 
	$InôCom∑ss
()

379 
uöt8_t
 
Com∑ssCREGA
 = 0;

380 
uöt8_t
 
Com∑ssCREGB
 = 0;

381 
uöt8_t
 
Com∑ssMODEREG
 = 0;

382 
uöt8_t
 
Com∑ssSR
 = 0;

383 
uöt8_t
 
Com∑ssIRA
 = 0;

384 
uöt8_t
 
Com∑ssIRB
 = 0;

385 
uöt8_t
 
Com∑ssIRC
 = 0;

388 
	`_DINT
();

389 
	`InôI2CModuÀ
();

390 
	`_EINT
();

392 
	`WrôeCom∑ssCREGA
(0x18);

393 
	`WrôeCom∑ssCREGB
(0x80);

394 
	`WrôeCom∑ssMODEREG
(0x00);

397 
Com∑ssSR
 = 
	`RódCom∑ssSètusReg
();

398 
Com∑ssIRA
 = 
	`RódCom∑ssIREGA
();

399 
Com∑ssIRB
 = 
	`RódCom∑ssIREGB
();

400 
Com∑ssIRC
 = 
	`RódCom∑ssIREGC
();

401 
Com∑ssCREGA
 = 
	`RódCom∑ssCREGA
();

402 
Com∑ssCREGB
 = 
	`RódCom∑ssCREGB
();

403 
Com∑ssMODEREG
 = 
	`RódCom∑ssMODEREG
();

405 
	`_DINT
();

406 
	`u¨t_öô
();

407 
	`_EINT
();

410 
	`SCIDebugExtSñe˘
(
SCI_DEBUG
);

411 
	`TxPrötf
("Compass S Reg : %x IREGA : %x IREGB : %x IREGC : %x CREGA : %x CREGB : %x MODEREG :%x\n"

412 , 
Com∑ssSR
, 
Com∑ssIRA
, 
Com∑ssIRB
, 
Com∑ssIRC
, 
Com∑ssCREGA
, 
Com∑ssCREGB
, 
Com∑ssMODEREG
);

414 
	`msdñay
(1);

415 
	}
}

417 
	$InôMSPGPIOFu˘i⁄
()

421 
	`BIT_CLEAR
(
P1DIR
, 
USR_SW
);

422 
	`BIT_CLEAR
(
P1SEL
, 
USR_SW
);

425 
	}
}

427 
	$SCIDebugExtSñe˘
(
uöt8_t
 
Ty≥
)

429 
U¨tTy≥
 = 
Ty≥
;

431 
	`BIT_SET
(
P2DIR
, 
DEBUG_EXT_SCI_OE
 | 
BT_GPS_SCI_OE
);

432 
	`BIT_CLEAR
(
P2SEL
, 
DEBUG_EXT_SCI_OE
 | 
BT_GPS_SCI_OE
);

435 if(
Ty≥
 =
SCI_DEBUG
)

436 
	`BIT_SET
(
P2OUT
, 
DEBUG_EXT_SCI_OE
);

438 if(
Ty≥
 =
SCI_EXT
)

439 
	`BIT_CLEAR
(
P2OUT
, 
DEBUG_EXT_SCI_OE
);

441 if(
Ty≥
 =
SCI_GPS
)

443 
	`BIT_CLEAR
(
P2OUT
, 
DEBUG_EXT_SCI_OE
);

444 
	`BIT_SET
(
P2OUT
, 
BT_GPS_SCI_OE
);

446 if(
Ty≥
 =
SCI_BT
)

448 
	`BIT_CLEAR
(
P2OUT
, 
DEBUG_EXT_SCI_OE
);

449 
	`BIT_CLEAR
(
P2OUT
, 
BT_GPS_SCI_OE
);

453 
	}
}

	@nnspi.c

20 
	~<io.h
>

21 
	~"c⁄fig.h
"

22 
	~"¡rxty≥s.h
"

23 
	~"¬•i.h
"

24 
	~"hw˛ock.h
"

25 
	~"Àd.h
"

26 
	~"ußπ.h
"

27 
	~"comm⁄_def.h
"

28 
	~"«5å1.h
"

37 
	$N™oRe£t
()

39 
	`SET_PORT_LOW_RF_PONRESET_PIN
();

42 
	`hwdñay
(1000);

44 
	`SET_PORT_HIGH_RF_PONRESET_PIN
();

47 
	`hwdñay
 (1000);

48 
	}
}

58 
	$InôSPI
()

61 
	`CRITICAL_SECTION_START
();

67 
	`SET_PORT_OUT_RF_SPISSN_PIN
();

68 
	`SET_PORT_IO_RF_SPISSN_PIN
();

69 
	`SET_PORT_HIGH_RF_SPISSN_PIN
();

74 
	`SET_PORT_OUT_RF_PONRESET_PIN
();

75 
	`SET_PORT_IO_RF_PONRESET_PIN
();

76 
	`SET_PORT_HIGH_RF_PONRESET_PIN
();

80 
	`SET_PORT_OUT_RF_SPIRXD_PIN
();

81 
	`SET_PORT_MOD_RF_SPIRXD_PIN
();

85 
	`SET_PORT_IN_RF_SPITXD_PIN
();

86 
	`SET_PORT_MOD_RF_SPITXD_PIN
();

90 
	`SET_PORT_OUT_RF_SPICLK_PIN
();

91 
	`SET_PORT_MOD_RF_SPICLK_PIN
();

98 
	`INIT_RF_UCIRQ_INT_PIN
();

99 
	`SET_POSEDGE_RF_UCIRQ_INT
();

104 
	`SET_PORT_IN_RF_UCRESET_PIN
();

105 
	`SET_PORT_IO_RF_UCRESET_PIN
();

109 
	`SET_PORT_IN_RF_TXRX_PIN
();

110 
	`SET_PORT_IO_RF_TXRX_PIN
();

115 
	`SET_PORT_OUT_RF_LDO_CE_PIN
();

116 
	`SET_PORT_IO_RF_LDO_CE_PIN
();

117 
	`SET_PORT_HIGH_RF_LDO_CE_PIN
();

120 
UCTL1
 = 
CHAR
 + 
SYNC
 + 
MM
 + 
SWRST
;

121 
ME2
 = 
USPIE1
;

122 
UTCTL1
 = 
CKPL
 + 
SSEL1
 + 
SSEL0
 + 
STC
;

123 
UBR01
 = 0X02;

124 
UBR11
 = 0X00;

125 
UMCTL1
 = 0;

126 
UCTL1
 &~
SWRST
;

128 
	`CRITICAL_SECTION_END
();

130 
	}
}

132 
	$SëupSPI
 ()

136 
	`CRITICAL_SECTION_START
();

141 
MyByã8T
 
vÆue
 = 0xFF;

143 
	`NTRXWrôeSPI
(0x00, &
vÆue
, 1);

150 
vÆue
 = 0x02;

151 
	`NTRXWrôeSPI
(0x0F, &
vÆue
, 1);

163 
	`CRITICAL_SECTION_END
();

164 
	}
}

166 
	$NTRXRódSPI
(
MyByã8T
 
addªss
, MyByã8T *
buf„r
, MyByã8T 
Àn
)

168 i‡(
Àn
 > 0x80 ||Üen == 0)

171 
	`CRITICAL_SECTION_START
();

175 
	`SET_PORT_LOW_RF_SPISSN_PIN
();

179 
IFG2
 &~
URXIFG1
;

180 
U1TXBUF
 = (
Àn
 & 0x7F);

182 !(
IFG2
 & 
URXIFG1
));

186 
IFG2
 &~
URXIFG1
;

187 
U1TXBUF
 = 
addªss
;

189 !(
IFG2
 & 
URXIFG1
));

191  
Àn
-- > 0 )

196 
IFG2
 &~
URXIFG1
;

197 
U1TXBUF
 = 0xFF;

198 !(
IFG2
 & 
URXIFG1
));

199 *
buf„r
++ = 
U1RXBUF
;

204 
	`SET_PORT_HIGH_RF_SPISSN_PIN
();

206 
	`CRITICAL_SECTION_END
();

207 
	}
}

209 
	$NTRXWrôeSPI
(
MyByã8T
 
addªss
, MyByã8T *
buf„r
, MyByã8T 
Àn
)

211 
	`CRITICAL_SECTION_START
();

215 
	`SET_PORT_LOW_RF_SPISSN_PIN
();

219 
IFG2
 &~
URXIFG1
;

220 
U1TXBUF
 = 0x80 | (
Àn
 & 0x7F);

222 !(
IFG2
 & 
URXIFG1
));

226 
IFG2
 &~
URXIFG1
;

227 
U1TXBUF
 = 
addªss
;

229 !(
IFG2
 & 
URXIFG1
));

231 
Àn
-- > 0)

235 
IFG2
 &~
URXIFG1
;

236 
U1TXBUF
 = *
buf„r
++;

237 !(
IFG2
 & 
URXIFG1
));

242 
	`SET_PORT_HIGH_RF_SPISSN_PIN
();

244 
	`CRITICAL_SECTION_END
();

245 
	}
}

247 
	$NTRXRódSögÀSPI
(
MyByã8T
 
addªss
, MyByã8T *
buf„r
)

249 
	`CRITICAL_SECTION_START
();

253 
	`SET_PORT_LOW_RF_SPISSN_PIN
();

256 
IFG2
 &~
URXIFG1
;

257 
U1TXBUF
 = 1;

258 !(
IFG2
 & 
URXIFG1
));

262 
IFG2
 &~
URXIFG1
;

263 
U1TXBUF
 = 
addªss
;

264 !(
IFG2
 & 
URXIFG1
));

269 
IFG2
 &~
URXIFG1
;

270 
U1TXBUF
 = 0xFF;

271 !(
IFG2
 & 
URXIFG1
));

272 *
buf„r
 = 
U1RXBUF
;

276 
	`SET_PORT_HIGH_RF_SPISSN_PIN
();

278 
	`CRITICAL_SECTION_END
();

279 
	}
}

281 
	$NTRXWrôeSögÀSPI
(
MyByã8T
 
addªss
, MyByã8T 
buf„r
)

283 
	`CRITICAL_SECTION_START
();

287 
	`SET_PORT_LOW_RF_SPISSN_PIN
();

291 
IFG2
 &~
URXIFG1
;

292 
U1TXBUF
 = 0x81;

293 !(
IFG2
 & 
URXIFG1
));

297 
IFG2
 &~
URXIFG1
;

298 
U1TXBUF
 = 
addªss
;

299 !(
IFG2
 & 
URXIFG1
));

303 
IFG2
 &~
URXIFG1
;

304 
U1TXBUF
 = 
buf„r
;

305 !(
IFG2
 & 
URXIFG1
));

309 
	`SET_PORT_HIGH_RF_SPISSN_PIN
();

310 
	`CRITICAL_SECTION_END
();

311 
	}
}

321 
	$«no£tIRQ
(
MyBoﬁT
 
vÆue
)

323 
	`CRITICAL_SECTION_START
();

325 i‡(
vÆue
 =
TRUE
)

329 
	`ENABLE_RF_UCIRQ_INT
();

336 
	`DISABLE_RF_UCIRQ_INT
();

340 
	`CRITICAL_SECTION_END
();

341 
	}
}

	@ntrxdil.c

19 
	~"¡rxøngög.h
"

20 
	~"c⁄fig.h
"

21 
	~"¡rxty≥s.h
"

22 
	~"¡rxdû.h
"

23 
	~"hw˛ock.h
"

24 
	~"¡rxutû.h
"

25 
	~"¬•i.h
"

27 
	~<°rög.h
>

28 
	~<°dlib.h
>

29 
	~<°dio.h
>

31 
	~"ußπ.h
"

33 
	#DIMADDRESS
 6

	)

34 
MyBoﬁT
 
	gTxARQ‹gVÆ
;

41 
MyByã8T
 
	gbuff_rx
[128];

45 
	#RANGING_TIMEOUT
 10000

	)

47 
	#RANGING_READY
 0

	)

49 
	#RANGING_START
 1

	)

51 
	#RANGING_ANSWER1
 2

	)

53 
	#RANGING_ANSWER2
 3

	)

55 
	#RANGING_SUCCESSFULL
 4

	)

57 
MyI¡16T
 
	grcwd
 = 0;

59 #i‚de‡
CONFIG_NTRX_IRQ


60 
MyBoﬁT
 
	gåxPﬁlMode
 = 
TRUE
;

63 #ifde‡
CONFIG_TRAFFIC_LED


64 
	~"Àd.h
"

65 
MyDw‹d32T
 
	gtxLED
;

66 
MyDw‹d32T
 
	grxLED
;

67 
MyDw‹d32T
 
	gîrLED
;

68 
MyDw‹d32T
 
	g˛bLED
;

69 
	#LED_DELAY
 5

	)

70 
	#TRIGGER_LED0
(); { 
txLED
 = 
	`hw˛ock
 (Ë+ 
LED_DELAY
; \

71 
	`LED
 (4, 
LED_ON
); \

72 }

	)

73 
	#TRIGGER_LED1
(); { 
rxLED
 = 
	`hw˛ock
 (Ë+ 
LED_DELAY
; \

74 
	`LED
 (4, 
LED_ON
); \

75 }

	)

76 
	#TRIGGER_LED2
(); { 
îrLED
 = 
	`hw˛ock
 (Ë+ 
LED_DELAY
; \

77 
	`LED
 (5, 
LED_ON
); \

78 }

	)

79 
	#TRIGGER_LED3
(); { 
˛bLED
 = 
	`hw˛ock
 (Ë+ 
LED_DELAY
; \

80 
	`LED
 (6, 
LED_ON
); \

81 }

	)

82 
	#Upd©eLEDs
(); { 
MyDw‹d32T
 
tiSèmp
; \

83 
tiSèmp
 = 
	`hw˛ock
 (); \

84 i‡(
txLED
 < 
tiSèmp
Ë
	`LED
 (4, 
LED_OFF
);\

85 i‡(
rxLED
 < 
tiSèmp
Ë
	`LED
 (4, 
LED_OFF
); \

86 i‡(
îrLED
 < 
tiSèmp
Ë
	`LED
 (5, 
LED_OFF
); \

87 i‡(
˛bLED
 < 
tiSèmp
Ë
	`LED
 (6, 
LED_OFF
); \

88 }

	)

90 
	#TRIGGER_LED0
();

	)

91 
	#TRIGGER_LED1
();

	)

92 
	#TRIGGER_LED2
();

	)

93 
	#TRIGGER_LED3
();

	)

94 
	#Upd©eLEDs
();

	)

97 
AµlCÆlback
 (
MyByã8T
 *
addr
, MyByã8T *
∑ylﬂd
, 
MyI¡16T
 
Àn
);

99 
CÆlback_Ack
(
MyByã8T
 
¨qCou¡
);

102 
	#SídMsgUp
(
p
,
q
Ë
	`AµlCÆlback
 (p,q)

	)

105 
	#NTRX_TX_START
 (0x01 << 
NA_TxCmdSèπ_B
)

	)

106 
	#NTRX_TX_BUFF0
 (0x01 << 
NA_TxBuf„rCmd_LSB
)

	)

107 
	#NTRX_TX_BUFF1
 (0x01 << 
NA_TxBuf„rCmd_MSB
)

	)

108 
	#NTRX_TX_ARQ
 (0x01 << 
NA_TxArq_B
)

	)

109 
	#TxEND
 (0x01 << 
NA_TxEnd_B
)

	)

110 
	#RxEND
 (0x01 << 
NA_RxEnd_B
)

	)

111 
	#RxOVERFLOW
 (0x01 << 
NA_RxOvîÊow_B
)

	)

113 
	#TX_IRQ_MASK
 
TxEND


	)

114 
	#RX_IRQ_MASK
 
RxEND


	)

115 
	#NTRX_TX_HEADER
 (
NA_RamTxD°Addr_O
 + 8)

	)

118 
MyDw‹d32T
 
	gˇlDñay
 = 
CONFIG_NTRX_RECAL_DELAY
;

119 
MyDw‹d32T
 
	gtiReˇl
;

121 
MyByã8T
 
	gtxIrq
;

122 
MyByã8T
 
	grxIrq
;

123 
MyBoﬁT
 
	g¡rxTxPﬁl
;

124 
MyByã8T
 
	g¡rxArqCou¡
;

126 
MyByã8T
 
	gbbIrq
;

127 
MyByã8T
 
	gbbtimîSètus
;

128 
MyByã8T
 
	glSèã
,
	grSèã
,
	grDe°
;

132 
NTRXTxEnd
 ();

139 
	$NTRXSëCÆI¡îvÆ
 (
MyDw‹d32T
 
ci
)

141 
ˇlDñay
 = 
ci
;

142 
	}
}

154 
MyBoﬁT
 
	$NTRXRe°¨t
 ()

156 
MyByã8T
 
rxIrq_
 = 0xFF;

157 
MyByã8T
 
txIrq_
 = 
TX_IRQ_MASK
;

162 
	`NTRXSëRegi°î
 (
NA_TxI¡sRe£t
, 
rxIrq_
);

163 
	`NTRXSëRegi°î
 (
NA_RxI¡sRe£t
, 
rxIrq_
);

168 i‡(
	`NTRXGëRxCRC2mode
(Ë=
TRUE
)

169 {
rxIrq_
 = 
RxEND
;}

171 {
rxIrq_
 = (
RxEND
 | 
RxOVERFLOW
);}

176 
	`NTRXSëRegi°î
 (
NA_RxI¡sEn
, 
rxIrq_
);

177 
	`NTRXSëRegi°î
 (
NA_TxI¡sEn
, 
txIrq_
);

178 
txIrqSètus
 = 0;

179 
rxIrqSètus
 = 0;

180 
txIrq_
 = 0;

181 
rxIrq_
 = 0;

182 
bbIrq
 = 0;

187 
	`NTRXSëRegi°î
 (
NA_RxIrqE«bÀ
, 
TRUE
);

188 
	`NTRXSëRegi°î
 (
NA_TxIrqE«bÀ
, 
TRUE
);

193 
	`NTRXSëRegi°î
 (
NA_RxCmdSèπ
, 
TRUE
);

195 
¡rxRun
 = 
TRUE
;

196 
¡rxSèã
 = 
TxIDLE
;

197 
¡rxTxPﬁl
 = 
FALSE
;

201 
	`NTRXSëRegi°î
 (
NA_TxPackëTy≥
, 
‰mTy≥D©a
);

205 
	`NTRXSëRegi°î
 (
NA_TxArq
, 
TRUE
);

206  
TRUE
;

207 
	}
}

217 
MyBoﬁT
 
	$NTRXSèπ
 ()

219  
	`NTRXRe°¨t
 ();

220 
	}
}

235 
	$NTRXTxD©a
 (
MyPåT
 
∑ylﬂd
, 
MyW‹d16T
 
Àn
)

237 
	`NTRXSëIndexReg
 (3);

238 
	`NTRXWrôeSPI
 (
NA_RamTxBuf„r_O
 & 0xff, (
MyByã8T
 *)
∑ylﬂd
, (MyByã8T)(
Àn
 & 0xff));

239 
	}
}

255 
	$NTRXTxHódî
 (
MyByã8T
 *
addr
, 
MyW‹d16T
 
Àn
, MyByã8T 
rsvd
, MyByã8T 
£q_n
, MyByã8T 
Êush
)

257 
MyByã8T
 
txLí
[8];

259 
	`NTRXSëIndexReg
 (0);

262 
	`NTRXWrôeSPI
 (
NA_RamTxD°Addr_O
, 
addr
, 6);

266 
txLí
[0] = (
MyByã8T
)
Àn
;

267 
txLí
[1] = (
Àn
 & 0x1F00) >> 8;

268 
txLí
[1] |(
rsvd
 == 1) ? 0x20 : 0;

269 
txLí
[1] |(
£q_n
 == 1) ? 0x40 : 0;

270 
txLí
[1] |(
Êush
 == 1) ? 0x80 : 0;

272 
	`NTRXWrôeSPI
 (
NA_RamTxLígth_O
, 
txLí
, 2);

273 
	}
}

284 
	$NTRXTxSèπ
 ()

286 
MyByã8T
 
vÆue
;

289 
vÆue
 = (
NTRX_TX_BUFF0
 | 
NTRX_TX_BUFF1
 | 
NTRX_TX_START
);

290 
	`NTRXWrôeSögÀSPI
 (
NA_TxBuf„rCmd_O
, 
vÆue
);

291 #ifde‡
CONFIG_TRAFFIC_LED


292 
	`TRIGGER_LED0
();

294 
	}
}

308 
	$NTRXSídMesßge
 (
MyByã8T
 *
addr
, 
MyPåT
 
∑ylﬂd
, 
MyW‹d16T
 
Àn
)

310 
MyByã8T
 
FøgC
, 
SeqN
, 
LCh
;

312 
FøgC
=(
lSèã
&0x01)?1:0;

313 
SeqN
=(
lSèã
&0x02)?1:0;

314 
LCh
=(
lSèã
&0x04)?1:0;

317 
	`NTRXTxD©a
 (
∑ylﬂd
, 
Àn
);

320 
	`NTRXTxHódî
 (
addr
, 
Àn
, 
FøgC
, 
SeqN
, 
LCh
);

322 
¡rxSèã
 = 
TxSEND
;

323 
	`NTRXTxSèπ
 ();

325 i‡(
¡rxSèã
 !
TxIDLE
)

327 
¡rxSèã
 !
TxWAIT
)

328 
	`«noI¡îru±
 ();

329 
	`NTRXTxEnd
 ();

332 
	}
}

344 
MyByã8T
 
	$NTRXGëTxARQC¡
 ()

346  
¡rxArqCou¡
;

347 
	}
}

357 
	$NTRXTxEnd
 ()

359 
MyByã8T
 
maxArqCou¡
;

363 
	`NTRXGëRegi°î
 (
NA_TxArqC¡
, &
¡rxArqCou¡
);

364 
maxArqCou¡
 = 
	`NTRXGëTxARQmax
();

366 i‡((
¡rxArqCou¡
 > 
maxArqCou¡
Ë&& (
¡rxSèã
 =
TxWAIT
))

368 
rcwd
++;

369 
txIrq
 &~(
TxEND
);

370 
¡rxSèã
 = 
TxIDLE
;

371 i‡(
¡rxCÆ
 != 0)

373 #ifde‡
CONFIG_NTRX_AUTO_RECALIB


374 
tiReˇl
 = 
	`hw˛ock
(Ë+ 
ˇlDñay
;

376 
	`NTRXAŒCÆibøti⁄
 ();

377 
rcwd
 = 0;

378 #ifde‡
CONFIG_RECALIB_LED


379 
	`TRIGGER_LED3
();

382 
lSèã
 = 
RANGING_READY
;

384 #ifde‡
CONFIG_TRAFFIC_LED


385 
	`TRIGGER_LED2
();

389 
txIrq
 &~(
TxEND
);

390 
¡rxSèã
 = 
TxIDLE
;

391 i‡(
lSèã
 !
RANGING_READY
)

393 
	`R™gögCÆlback_Ack
(
¡rxArqCou¡
);

394 
lSèã
 = 
RANGING_ANSWER1
;

398 
	}
}

412 
	$NTRXRxRe˚ive
 ()

414 
MyByã8T
 
°©us
;

415 
MyByã8T
 *
rxPaylﬂd
 = 0;

416 
MyByã8T
 
Àn
 = 0;

417 
MyByã8T
 
vÆue
;

418 
MyByã8T
 
sour˚
[
DIMADDRESS
];

419 
MyByã8T
 
de°
[
DIMADDRESS
];

420 
MyByã8T
 
ªg
[2];

422 
	`SëRxSt›
 ();

423 #ifde‡
CONFIG_TRAFFIC_LED


424 
	`TRIGGER_LED1
 ();

427 
	`NTRXRódSPI
 (
NA_RxCrc2Sèt_O
, &
°©us
, 1);

430 i‡((
°©us
 & (1 << 
NA_RxCrc2Sèt_B
)) == (1 << NA_RxCrc2Stat_B))

432 
rxPaylﬂd
 = 
buff_rx
;

433 
	`NTRXSëIndexReg
 (0);

435 
	`NTRXRódSPI
 (
NA_RamRxD°Addr_O
, 
de°
, (
MyAddªssT
));

437 
	`NTRXRódSPI
 (
NA_RamRxSrcAddr_O
, 
sour˚
, (
MyAddªssT
));

439 
	`NTRXRódSPI
 (
NA_RamRxLígth_O
, 
ªg
, 2);

441 
rSèã
 = 
ªg
[1]>>5;

443 
Àn
 = (
ªg
[0] | (reg[1] & 0x1F) << 8);

444 i‡(
Àn
 > 128)

446 
Àn
 = 0;

450 
	`NTRXSëIndexReg
 (2);

452 
	`NTRXRódSPI
 ((
NA_RamRxBuf„r_O
 & 0xFF), 
rxPaylﬂd
, 
Àn
);

455 
vÆue
 = (
MyByã8T
)(
¡rxShadowReg
[
NA_RxCmdSèπ_O
]

456 | (1 << 
NA_RxCmdSèπ_B
)

457 | (1 << 
NA_RxBuf„rCmd_LSB
)

458 | (1 << 
NA_RxBuf„rCmd_MSB
));

460 
	`NTRXWrôeSögÀSPI
 (
NA_RxCmdSèπ_O
, 
vÆue
);

461 
rxIrq
 = 0;

463 i‡(
Àn
 > 0)

465 if(
lSèã
 =
RANGING_READY
 && 
rSèã
 =
RANGING_START
)

467 
rDe°
 = 
sour˚
[0];

472 
	`R™gögCÆlback_Rx
(
rxPaylﬂd
, 
Àn
);

474 
lSèã
 = 
RANGING_ANSWER1
;

476 
	`R™gögMode
(
sour˚
);

478 
lSèã
 = 
RANGING_ANSWER2
;

481 
	`R™gögMode
(
sour˚
);

482 
lSèã
 = 
RANGING_READY
;

483 }if(
lSèã
 =
RANGING_ANSWER1
 && 
rDe°
 =
sour˚
[0] && 
rSèã
 == RANGING_ANSWER1)

488 
	`R™gögCÆlback_Rx
(
rxPaylﬂd
, 
Àn
);

489 
lSèã
 = 
RANGING_ANSWER2
;

491 if(
lSèã
 =
RANGING_ANSWER2
 && 
rDe°
 =
sour˚
[0] && 
rSèã
 == RANGING_ANSWER2)

496 
	`R™gögCÆlback_Rx
(
rxPaylﬂd
, 
Àn
);

497 
lSèã
 = 
RANGING_SUCCESSFULL
;

498 }if(
lSèã
 =
RANGING_READY
 && 
rSèã
 == RANGING_READY)

501 
	`AµlCÆlback
 (
sour˚
, 
rxPaylﬂd
, 
Àn
);

504 
	}
}

516 
	$NTRXUpd©e
 ()

518 #i‚de‡
CONFIG_NTRX_IRQ


519 i‡(
åxPﬁlMode
 =
TRUE
)

521 
	`«noI¡îru±
 ();

525 #ifde‡
CONFIG_TRAFFIC_LED


526 
	`Upd©eLEDs
 ();

529 i‡(
¡rxSèã
 =
TxWAIT
)

531 
	`NTRXTxEnd
 ();

535 i‡(
¡rxSèã
 =
TxIDLE
)

537 i‡((
rxIrq
 & 
RxEND
) == RxEND )

539 
	`NTRXRxRe˚ive
 ();

543 #ifde‡
CONFIG_NTRX_AUTO_RECALIB


544 i‡(
ˇlDñay
 != 0)

546 i‡((
rcwd
 > 3Ë|| (
tiReˇl
 < 
	`hw˛ock
()))

548 #ifde‡
CONFIG_NTRX_AUTO_RECALIB


549 
tiReˇl
 = 
	`hw˛ock
(Ë+ 
ˇlDñay
;

551 
	`NTRXAŒCÆibøti⁄
 ();

552 
rcwd
 = 0;

553 #ifde‡
CONFIG_RECALIB_LED


554 
	`TRIGGER_LED3
();

559 
	}
}

572 
MyDoubÀ32T
 
	$NTRXR™ge
(
MyAddrT
 
de°
)

575 i‡(
lSèã
 !
RANGING_READY
)

580 
lSèã
 = 
RANGING_START
;

581 
rDe°
 = 
de°
[0];

583 
	`R™gögMode
(
de°
);

585 
bbIrq
 = 0;

586 
	`NTRXSèπBa£b™dTimî
(
RANGING_TIMEOUT
);

590 
	`«noI¡îru±
 ();

593 i‡(
¡rxSèã
 =
TxIDLE
)

595 i‡((
rxIrq
 & 
RxEND
) == RxEND )

597 
	`NTRXRxRe˚ive
 ();

601 if(
bbIrq
)

603 
lSèã
 = 
RANGING_READY
;

606 }
lSèã
 < 
RANGING_SUCCESSFULL
);

608 
	`NTRXSt›Ba£b™dTimî
();

610 
lSèã
 = 
RANGING_READY
;

612  
	`gëDi°™˚
();

613 
	}
}

623 
is_≥ndög
;

624 
	~"Àd.h
"

625 
__©åibuã
((
	$öãºu±
(2))Ë
	$m•430_p‹t2_h™dÀr
()

627 
n
 = 
P2IFG
 & 
P2IE
;

629 i‡(
n
 & (1 << 0)) {

630 
P2IFG
 &= ~(1 << 0);

633 i‡(
n
 & (1 << 1)) {

634 
P2IFG
 &= ~(1 << 1);

637 i‡(
n
 & (1 << 2)) {

638 
P2IFG
 &= ~(1 << 2);

641 i‡(
n
 & (1 << 3)) {

642 
P2IFG
 &= ~(1 << 3);

645 i‡(
n
 & (1 << 4)) {

646 
P2IFG
 &= ~(1 << 4);

649 i‡(
n
 & (1 << 5)) {

650 
P2IFG
 &= ~(1 << 5);

653 i‡(
n
 & (1 << 6)) {

654 
P2IFG
 &= ~(1 << 6);

657 i‡(
n
 & (1 << 7)) {

658 
P2IFG
 &= ~(1 << 7);

664 #ifde‡
USE_UCIRQ


665 i‡(!
is_≥ndög
)

666 
is_≥ndög
 = 1;

669 
	`Àd2_toggÀ
();

677 
	}
}

680 
ölöe
 
	$«noI¡îru±
 ()

683 
	`NTRXRódSPI
 (
NA_TxI¡sRawSèt_O
, 
¡rxIrqSètus
, 2);

686 i‡(
txIrqSètus
 != 0)

689 
	`NTRXSëRegi°î
 (
NA_TxI¡sRe£t
, 
txIrqSètus
);

690 
txIrq
 |
txIrqSètus
 & 
TX_IRQ_MASK
;

691 i‡((
txIrq
 & 
TxEND
) == TxEND)

693 
¡rxSèã
 = 
TxWAIT
;

697 i‡(
rxIrqSètus
 != 0)

700 
	`NTRXSëRegi°î
 (
NA_RxI¡sRe£t
, 
rxIrqSètus
);

701 
rxIrq
 |
rxIrqSètus
 & 
RX_IRQ_MASK
;

705 
	`NTRXRódSPI
(
NA_BbTimîIrqSètus_O
,&
bbtimîSètus
,1);

707 i‡((
bbtimîSètus
&0x40) != 0)

709 
	`NTRXSt›Ba£b™dTimî
();

710 
bbIrq
 = 1;

711 
bbtimîSètus
 = 0;

713 
	}
}

	@ntrxinit.c

20 
	~"c⁄fig.h
"

21 
	~"¡rxty≥s.h
"

24 
	~"¡rxutû.h
"

25 
	~"hw˛ock.h
"

26 
	~"¬•i.h
"

27 
	~"Àd.h
"

39 c⁄° 
MyByã8T
 
	gTRX_SYNC_WORD
[] = {0xAB,0x69,0xCA,0x94,0x92,0xD5,0x2C,0xAB};

40 c⁄° 
MyByã8T
 
	giVÆ
[] = {0x12, 0x03, 0x55, 0x05, 0x66, 0x06, 0x77, 0x07};

41 
MyBoﬁT
 
	gfú°
 = 
TRUE
;

56 
MyBoﬁT
 
	$NåxInô
()

61 i‡(
fú°
 =
TRUE
)

63 
fú°
 = 
FALSE
;

64 #ifde‡
CONFIG_DEFAULT_TRX_22MHZ_1000NS


65 
£âögVÆ
.
bw
 = 
NA_22MHz
;

66 
£âögVÆ
.
sd
 = 
NA_1us
;

67 
£âögVÆ
.
§
 = 
NA_250k_S
;

68 
£âögVÆ
.
fdma

TRUE
;

69 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

70 
£âögVÆ
.
øngögC⁄°
=0.0;

73 #ifde‡
CONFIG_DEFAULT_TRX_22MHZ_2000NS


74 
£âögVÆ
.
bw
 = 
NA_22MHz
;

75 
£âögVÆ
.
sd
 = 
NA_2us
;

76 
£âögVÆ
.
§
 = 
NA_500k_S
;

77 
£âögVÆ
.
fdma

TRUE
;

78 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

79 
£âögVÆ
.
øngögC⁄°
=0.0;

82 #ifde‡
CONFIG_DEFAULT_TRX_22MHZ_4000NS


83 
£âögVÆ
.
bw
 = 
NA_22MHz
;

84 
£âögVÆ
.
sd
 = 
NA_4us
;

85 
£âögVÆ
.
§
 = 
NA_250k_S
;

86 
£âögVÆ
.
fdma

TRUE
;

87 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

88 
£âögVÆ
.
øngögC⁄°
=0.0;

91 #ifde‡
CONFIG_DEFAULT_TRX_22MHZ_8000NS


92 
£âögVÆ
.
bw
 = 
NA_22MHz
;

93 
£âögVÆ
.
sd
 = 
NA_8us
;

94 
£âögVÆ
.
§
 = 
NA_125k_S
;

95 
£âögVÆ
.
fdma

TRUE
;

96 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

97 
£âögVÆ
.
øngögC⁄°
=0.0;

100 #ifde‡
CONFIG_DEFAULT_TRX_22MHZ_16000NS


101 
£âögVÆ
.
bw
 = 
NA_22MHz
;

102 
£âögVÆ
.
sd
 = 
NA_8us
;

103 
£âögVÆ
.
§
 = 
NA_62k5_S
;

104 
£âögVÆ
.
fdma

TRUE
;

105 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

106 
£âögVÆ
.
øngögC⁄°
=0.0;

109 #ifde‡
CONFIG_DEFAULT_TRX_80MHZ_500NS


110 
£âögVÆ
.
bw
 = 
NA_80MHz
;

111 
£âögVÆ
.
sd
 = 
NA_500ns
;

112 
£âögVÆ
.
§
 = 
NA_2M_S
;

113 
£âögVÆ
.
fdma

FALSE
;

114 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

115 
£âögVÆ
.
øngögC⁄°
=68.929336;

118 #ifde‡
CONFIG_DEFAULT_TRX_80MHZ_1000NS


119 
£âögVÆ
.
bw
 = 
NA_80MHz
;

120 
£âögVÆ
.
sd
 = 
NA_1us
;

121 
£âögVÆ
.
§
 = 
NA_1M_S
;

122 
£âögVÆ
.
fdma

FALSE
;

123 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

124 
£âögVÆ
.
øngögC⁄°
=122.492363;

127 #ifde‡
CONFIG_DEFAULT_TRX_80MHZ_2000NS


128 
£âögVÆ
.
bw
 = 
NA_80MHz
;

129 
£âögVÆ
.
sd
 = 
NA_2us
;

130 
£âögVÆ
.
§
 = 
NA_500k_S
;

131 
£âögVÆ
.
fdma

FALSE
;

132 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

133 
£âögVÆ
.
øngögC⁄°
=229.490053;

136 #ifde‡
CONFIG_DEFAULT_TRX_80MHZ_4000NS


137 
£âögVÆ
.
bw
 = 
NA_80MHz
;

138 
£âögVÆ
.
sd
 = 
NA_4us
;

139 
£âögVÆ
.
§
 = 
NA_250k_S
;

140 
£âögVÆ
.
fdma

FALSE
;

141 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

142 
£âögVÆ
.
øngögC⁄°
=445.584595;

146 #ifde‡
CONFIG_DEFAULT_TRX_22MHZ_HR_4000NS


147 
£âögVÆ
.
bw
 = 
NA_22MHz_HR
;

148 
£âögVÆ
.
sd
 = 
NA_4us
;

149 
£âögVÆ
.
§
 = 
NA_250k_S
;

150 
£âögVÆ
.
fdma

FALSE
;

151 
£âögVÆ
.
fixnm≠
=
NA_MAP_MODE
;

152 
£âögVÆ
.
øngögC⁄°
=445.553589;

156 i‡(
	`NTRXCheckTabÀ
(Ë=
FALSE
)

158 
	`îr‹_h™dÀr
(1, 1000);

162 
	`InôSPI
();

163 
	`N™oRe£t
();

170 
	`SëupSPI
 ();

175 
	`NTRXInôShadowRegi°î
 ();

177 
	`hwdñay
(0);

179 i‡(!
	`NTRXCheckVîRev
())

181 
	`îr‹_h™dÀr
(2, 1000);

187 
	`SëupSPI
 ();

189 
	`NTRXInôShadowRegi°î
 ();

194 
	`NTRXSëupTRxMode
 (
£âögVÆ
.
bw
, sëtögVÆ.
sd
, sëtögVÆ.
§
);

198 
¡rxRun
 = 
FALSE
;

200  
TRUE
;

201 
	}
}

	@ntrxiqpar.c

13 
	~<°rög.h
>

14 
	~"c⁄fig.h
"

15 
	~"¡rxty≥s.h
"

16 
	~"¡rxutû.h
"

17 
	~"¡rxiq∑r.h
"

18 
	~"¬•i.h
"

20 
	sNTRXagcVÆSt


22 
MyByã8T
 
	mthªsh1
;

23 
MyByã8T
 
	mthªsh2
;

24 
MyByã8T
 
	mdódtime
;

25 
MyByã8T
 
	mƒeg
;

26 
MyI¡16T
 
	möâime
;

27 } 
	tNTRXagcVÆSt
;

29 #ifde‡
CONFIG_22MHZ_DEF_ONLY


30 
	$NTRXSëC‹rThªshﬁd2
 ()

32 
MyByã8T
 
thªshﬁd
[] = {0x00, 0x31, 0x31, 0x31, 0x31};

33 
	`NTRXSëIndexReg
 (0x32);

34 
	`NTRXWrôeSPI
 (0x80, 
thªshﬁd
, 5);

35 
	`NTRXSëIndexReg
 (0x00);

36 
	}
}

38 #ifde‡
CONFIG_NTRX_80MHZ_500NS


39 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_80MHz_500ns
[] 
	gPROGMEM
 =

47 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


48 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_80MHz_1000ns
[] 
	gPROGMEM
 =

55 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


56 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_80MHz_2000ns
[] 
	gPROGMEM
 =

65 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


66 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_80MHz_4000ns
[] 
	gPROGMEM
 =

76 #ifde‡
CONFIG_NTRX_22MHZ_500NS


77 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_500ns
[] 
	gPROGMEM
 =

85 #ifde‡
CONFIG_NTRX_22MHZ_1000NS


86 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_1000ns
[] 
	gPROGMEM
 =

94 #ifde‡
CONFIG_NTRX_22MHZ_2000NS


95 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_2000ns
[] 
	gPROGMEM
 =

103 #ifde‡
CONFIG_NTRX_22MHZ_4000NS


104 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_4000ns
[] 
	gPROGMEM
 =

112 #ifde‡
CONFIG_NTRX_22MHZ_8000NS


113 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_8000ns
[] 
	gPROGMEM
 =

123 #ifde‡
CONFIG_NTRX_22MHZ_16000NS


124 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_16000ns
[] 
	gPROGMEM
 =

134 #ifde‡
CONFIG_NTRX_22MHZ_HR_4000NS


135 c⁄° 
MyByã8T
 
	gNA5TR1_Rx_22MHz_HR_4000ns
[] 
	gPROGMEM
 =

145 #ifde‡
CONFIG_NTRX_80MHZ_500NS


146 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_80MHz_500ns
[] 
	gPROGMEM
 =

164 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


165 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_80MHz_1000ns
[] 
	gPROGMEM
 =

183 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


184 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_80MHz_2000ns
[] 
	gPROGMEM
 =

214 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


215 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_80MHz_4000ns
[] 
	gPROGMEM
 =

269 #ifde‡
CONFIG_NTRX_22MHZ_500NS


270 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22MHz_500ns
[] 
	gPROGMEM
 =

279 #ifde‡
CONFIG_NTRX_22MHZ_1000NS


280 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22MHz_1000ns
[] 
	gPROGMEM
 =

289 #ifde‡
CONFIG_NTRX_22MHZ_2000NS


290 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22MHz_2000ns
[] 
	gPROGMEM
 =

299 #ifde‡
CONFIG_NTRX_22MHZ_4000NS


300 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22MHz_4000ns
[] 
	gPROGMEM
 =

312 #ifde‡
CONFIG_NTRX_22MHZ_8000NS


313 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22MHz_8000ns
[] 
	gPROGMEM
 =

331 #ifde‡
CONFIG_NTRX_22MHZ_16000NS


332 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22MHz_16000ns
[] 
	gPROGMEM
 =

362 #ifde‡
CONFIG_NTRX_22MHZ_HR_4000NS


363 c⁄° 
MyByã8T
 
	gNA5TR1_Tx_22ovî80MHz_4000ns
[] 
	gPROGMEM
 =

417 #ifde‡
CONFIG_NTRX_80MHZ_500NS


418 c⁄° 
NTRXagcVÆSt
 
	gNA5TR1_AGC_80MHz_500ns
[] 
	gPROGMEM
 =

432 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


433 c⁄° 
NTRXagcVÆSt
 
	gNA5TR1_AGC_80MHz_1000ns
[] 
	gPROGMEM
 =

447 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


448 c⁄° 
NTRXagcVÆSt
 
	gNA5TR1_AGC_80MHz_2000ns
[] 
	gPROGMEM
 =

462 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


463 c⁄° 
NTRXagcVÆSt
 
	gNA5TR1_AGC_80MHz_4000ns
[] 
	gPROGMEM
 =

477 #ifde‡
CONFIG_NTRX_22MHZ_HR_4000NS


478 c⁄° 
NTRXagcVÆSt
 
	gNA5TR1_AGC_22MHz_HR_4000ns
[] 
	gPROGMEM
 =

492 #ifde‡
CONFIG_NTRX_80MHZ_500NS


493 
MyByã8T
 
	gNA5TR1_THRES_80MHz_500ns
[] 
	gPROGMEM
 =

499 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


500 
MyByã8T
 
	gNA5TR1_THRES_80MHz_1000ns
[] 
	gPROGMEM
 =

506 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


507 
MyByã8T
 
	gNA5TR1_THRES_80MHz_2000ns
[] 
	gPROGMEM
 =

513 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


514 
MyByã8T
 
	gNA5TR1_THRES_80MHz_4000ns
[] 
	gPROGMEM
 =

520 #ifde‡
CONFIG_NTRX_22MHZ_HR_4000NS


521 
MyByã8T
 
	gNA5TR1_THRES_22MHz_HR_4000ns
[] 
	gPROGMEM
 =

527 #ifde‡
CONFIG_NTRX_22MHZ_500NS


528 
MyByã8T
 
	gNA5TR1_THRES_22MHz_500ns
[] 
	gPROGMEM
 =

534 #ifde‡
CONFIG_NTRX_22MHZ_1000NS


535 
MyByã8T
 
	gNA5TR1_THRES_22MHz_1000ns
[] 
	gPROGMEM
 =

541 #ifde‡
CONFIG_NTRX_22MHZ_2000NS


542 
MyByã8T
 
	gNA5TR1_THRES_22MHz_2000ns
[] 
	gPROGMEM
 =

548 #ifde‡
CONFIG_NTRX_22MHZ_4000NS


549 
MyByã8T
 
	gNA5TR1_THRES_22MHz_4000ns
[] 
	gPROGMEM
 =

555 #ifde‡
CONFIG_NTRX_22MHZ_8000NS


556 
MyByã8T
 
	gNA5TR1_THRES_22MHz_8000ns
[] 
	gPROGMEM
 =

562 #ifde‡
CONFIG_NTRX_22MHZ_16000NS


563 
MyByã8T
 
	gNA5TR1_THRES_22MHz_16000ns
[] 
	gPROGMEM
 =

569 
	$NTRXSëRxIQM©rix
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
)

571 
MyByã8T
 
tmpBuf„r
[64];

572 
MyByã8T
 *
±r
 = 0;

573 
MyW‹d16T
 
Àn
;

574 i‡(
b™dwidth
 =
NA_22MHz
)

576 
symbﬁDur
)

578 #ifde‡
CONFIG_NTRX_22MHZ_500NS


579 
NA_500ns
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_500ns
; ;

581 #ifde‡
CONFIG_NTRX_22MHZ_1000NS


582 
NA_1us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_1000ns
; ;

584 #ifde‡
CONFIG_NTRX_22MHZ_2000NS


585 
NA_2us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_2000ns
; ;

587 #ifde‡
CONFIG_NTRX_22MHZ_4000NS


588 
NA_4us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_4000ns
; ;

590 #ifde‡
CONFIG_NTRX_22MHZ_8000NS


591 
NA_8us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_8000ns
; ;

593 #ifde‡
CONFIG_NTRX_22MHZ_16000NS


594 
NA_16us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_16000ns
; ;

599 i‡(
b™dwidth
 =
NA_80MHz
)

601 
symbﬁDur
)

603 #ifde‡
CONFIG_NTRX_80MHZ_500NS


604 
NA_500ns
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_80MHz_500ns
; ;

606 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


607 
NA_1us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_80MHz_1000ns
; ;

609 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


610 
NA_2us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_80MHz_2000ns
; ;

612 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


613 
NA_4us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_80MHz_4000ns
; ;

618 i‡(
b™dwidth
 =
NA_22MHz_HR
)

620 
symbﬁDur
)

622 
NA_4us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Rx_22MHz_HR_4000ns
; ;

627 
Àn
 = 
	`RódRomByã
 (
±r
[0]);

629 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1]), 
Àn
);

630 
	`NTRXSëIndexReg
 (0x30);

631 
	`NTRXWrôeSPI
 ((
NA_RamD3lP©I_O
 & 0xff), 
tmpBuf„r
, 
Àn
);

633 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1+ 
Àn
]),Üen);

634 
	`NTRXSëIndexReg
 (0x31);

635 
	`NTRXWrôeSPI
 ((
NA_RamD3lP©Q_O
 & 0xff), 
tmpBuf„r
, 
Àn
);

637 
	`NTRXSëIndexReg
 (0x00);

638 
	}
}

641 
	$NTRXSëTxIQM©rix
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
)

643 
MyByã8T
 
tmpBuf„r
[245];

644 
MyW‹d16T
 
Àn
;

645 
MyW‹d16T
 
off£t
;

646 
MyByã8T
 *
±r
 = 0;

648 i‡(
b™dwidth
 =
NA_22MHz
)

650 
symbﬁDur
)

652 #ifde‡
CONFIG_NTRX_22MHZ_500NS


653 
NA_500ns
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22MHz_500ns
; ;

655 #ifde‡
CONFIG_NTRX_22MHZ_1000NS


656 
NA_1us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22MHz_1000ns
; ;

658 #ifde‡
CONFIG_NTRX_22MHZ_2000NS


659 
NA_2us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22MHz_2000ns
; ;

661 #ifde‡
CONFIG_NTRX_22MHZ_4000NS


662 
NA_4us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22MHz_4000ns
; ;

664 #ifde‡
CONFIG_NTRX_22MHZ_8000NS


665 
NA_8us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22MHz_8000ns
; ;

667 #ifde‡
CONFIG_NTRX_22MHZ_16000NS


668 
NA_16us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22MHz_16000ns
; ;

673 i‡(
b™dwidth
 =
NA_80MHz
)

675 
symbﬁDur
)

677 #ifde‡
CONFIG_NTRX_80MHZ_500NS


678 
NA_500ns
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_80MHz_500ns
; ;

680 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


681 
NA_1us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_80MHz_1000ns
; ;

683 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


684 
NA_2us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_80MHz_2000ns
; ;

686 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


687 
NA_4us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_80MHz_4000ns
; ;

692 i‡(
b™dwidth
 =
NA_22MHz_HR
)

694 
symbﬁDur
)

696 
NA_4us
: 
±r
 = (
MyByã8T
 *)
NA5TR1_Tx_22ovî80MHz_4000ns
; ;

701 
Àn
 = 
	`RódRomByã
 (
±r
[0]);

703 
	`NTRXSëIndexReg
 (0x20);

706 
	`NTRXSëRegi°î
 (
NA_CsqMemAddrInô
, 
TRUE
);

707 
off£t
 = 0;

708 i‡(
Àn
 > 128)

710 
Àn
 -= 128;

711 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1]), 128);

712 
	`NTRXWrôeSPI
 (0x80, 
tmpBuf„r
, 128);

713 
off£t
 = 128;

715 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1 + 
off£t
]), 
Àn
);

716 
	`NTRXWrôeSPI
 (0x80, 
tmpBuf„r
, 
Àn
);

718 
	`NTRXSëRegi°î
 (
NA_CsqMemAddrInô
, 
TRUE
);

719 
	`NTRXSëIndexReg
 (0x21);

720 
off£t
 = 0;

721 
Àn
 = 
	`RódRomByã
 (
±r
[0]);

722 i‡(
Àn
 > 128)

724 
Àn
 -= 128;

725 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1 + 
	`RódRomByã
 (ptr[0])]), 128);

726 
	`NTRXWrôeSPI
 (0x80, 
tmpBuf„r
, 128);

727 
off£t
 = 128;

729 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1 + 
	`RódRomByã
 (±r[0]Ë+ 
off£t
]), 
Àn
);

730 
	`NTRXWrôeSPI
 (0x80, 
tmpBuf„r
, 
Àn
);

732 
	`NTRXSëRegi°î
 (
NA_CsqMemAddrInô
, 
TRUE
);

733 
	`NTRXSëIndexReg
 (0x22);

735 
Àn
 = 
	`RódRomByã
 (
±r
[0]);

736 
off£t
 = 0;

737 i‡(
Àn
 > 128)

739 
Àn
 -= 128;

740 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1 + (2 * 
	`RódRomByã
 (ptr[0]))]), 128);

741 
	`NTRXWrôeSPI
 (0x80, 
tmpBuf„r
, 128);

742 
off£t
 = 128;

744 
	`mem˝y_P
 (
tmpBuf„r
, &(
±r
[1 + (2 * 
	`RódRomByã
 (±r[0])Ë+ 
off£t
]), 
Àn
);

745 
	`NTRXWrôeSPI
 (0x80, 
tmpBuf„r
, 
Àn
);

747 
	`NTRXSëIndexReg
 (0x00);

748 
	}
}

750 
	$NTRXSëAgcVÆues
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
, MyByã8T 
symbﬁR©e
)

752 
NTRXagcVÆSt
 *
agcVÆS
 = 
NULL
;

753 
MyByã8T
 
vÆue
[2];

754 
MyI¡16T
 
öâime
;

756 i‡(
b™dwidth
 =
NA_22MHz_HR
)

758 
symbﬁDur
)

760 #ifde‡
CONFIG_NTRX_22MHZ_HR_4000NS


761 
NA_4us
: 
agcVÆS
 = (
NTRXagcVÆSt
 *)&(
NA5TR1_AGC_22MHz_HR_4000ns
[
symbﬁR©e
]); ;

766 
	`NTRXSëRegi°î
 (
NA_AgcAm∂ôude
, 31);

767 
	`NTRXSëRegi°î
 (
NA_FdmaE«bÀ
, 
FALSE
);

768 
	`NTRXSëRegi°î
 (
NA_Pul£DëDñay
, 4);

769 
	`NTRXSëRegi°î
 (
NA_G©eAdjBôsyncEn
, 
TRUE
);

770 
	`NTRXSëRegi°î
 (
NA_G©eAdjFømesyncEn
, 
FALSE
);

772 
	`NTRXSëRegi°î
 (
NA_G©eSizeUnsync
, 3);

773 
	`NTRXSëRegi°î
 (
NA_G©eSizeBôsync
, 3);

775 
	`NTRXSëRegi°î
 (
NA_G©eAdjThªshﬁd
, 3);

777 
	`NTRXSëRegi°î
 (
NA_Go2BôsyncThªshﬁd
, 3);

778 
	`NTRXSëRegi°î
 (
NA_LóveBôsyncThªshﬁd
, 3);

780 
	`NTRXSëRegi°î
 (
NA_U£M≠Thªsh1InFømesync
, 
TRUE
);

781 
	`NTRXSëRegi°î
 (
NA_Go2M≠Thªsh1InBôsync
, 7);

782 
	`NTRXSëRegi°î
 (
NA_LóveM≠Thªsh1InBôsync
, 7);

784 i‡(
b™dwidth
 =
NA_80MHz
)

786 
symbﬁDur
)

788 #ifde‡
CONFIG_NTRX_80MHZ_500NS


789 
NA_500ns
: 
agcVÆS
 = (
NTRXagcVÆSt
 *)&(
NA5TR1_AGC_80MHz_500ns
[
symbﬁR©e
]); ;

791 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


792 
NA_1us
: 
agcVÆS
 = (
NTRXagcVÆSt
 *)&(
NA5TR1_AGC_80MHz_1000ns
[
symbﬁR©e
]); ;

794 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


795 
NA_2us
: 
agcVÆS
 = (
NTRXagcVÆSt
 *)&(
NA5TR1_AGC_80MHz_2000ns
[
symbﬁR©e
]); ;

797 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


798 
NA_4us
: 
agcVÆS
 = (
NTRXagcVÆSt
 *)&(
NA5TR1_AGC_80MHz_4000ns
[
symbﬁR©e
]); ;

802 
	`NTRXSëRegi°î
 (
NA_FdmaE«bÀ
, 
FALSE
);

803 
	`NTRXSëRegi°î
 (
NA_Pul£DëDñay
, 4);

805 i‡(
b™dwidth
 =
NA_22MHz
)

807 
	`NTRXSëRegi°î
 (
NA_AgcHﬁd
, 
TRUE
);

808 
	`NTRXSëRegi°î
 (
NA_AgcDeÁu…En
, 
TRUE
);

809 
	`NTRXSëRegi°î
 (
NA_AgcVÆue
, 35);

811 
	`NTRXSëRegi°î
 (
NA_FdmaE«bÀ
, 
TRUE
);

812 
	`NTRXSëRegi°î
 (
NA_Pul£DëDñay
, 2);

816 
	`NTRXSëRegi°î
 (
NA_L«FªqAdju°
, 
FALSE
);

817 
	`NTRXSëRegi°î
 (
NA_G©eSizeFømesync
, 
NA_G©eSize9SlŸs_VC_C
);

822 
	`NTRXSëRegi°î
 (
NA_D3lFixnM≠
, 
£âögVÆ
.
fixnm≠
);

824 
	`NTRXSëRegi°î
 (
NA_SymbﬁDur
, 
symbﬁDur
);

825 
	`NTRXSëRegi°î
 (
NA_SymbﬁR©e
, 
symbﬁR©e
);

827 i‡(
b™dwidth
 !
NA_22MHz
)

829 
	`NTRXSëRegi°î
 (
NA_AgcThªsHﬁd1
, 
	`RódRomByã
 (
agcVÆS
->
thªsh1
));

830 
	`NTRXSëRegi°î
 (
NA_AgcThªsHﬁd2
, 
	`RódRomByã
 (
agcVÆS
->
thªsh2
));

831 
	`NTRXSëRegi°î
 (
NA_AgcDódTime
, 
	`RódRomByã
 (
agcVÆS
->
dódtime
));

832 
	`NTRXSëRegi°î
 (
NA_AgcNªgLígth
, 
	`RódRomByã
 (
agcVÆS
->
ƒeg
));

834 
öâime
 = 
	`RódRomW‹d
 (
agcVÆS
->inttime);

835 
vÆue
[0] = 0xFF & (
öâime
);

836 
vÆue
[1] = 0xFF & ((
öâime
)>>8);

838 
	`NTRXSëNRegi°î
 (
NA_AgcI¡Time
, 
vÆue
);

842 
	}
}

844 
	$NTRXSëC‹rThªshﬁd
 (
MyByã8T
 
b™dwidth
, MyByã8T 
symbﬁDur
)

846 
MyByã8T
 
thªshﬁd
[5];

847 
MyByã8T
 *
±r
 = 0;

849 
	`NTRXSëIndexReg
 (0x32);

850 i‡(
b™dwidth
 =
NA_80MHz
)

852 
symbﬁDur
)

854 #ifde‡
CONFIG_NTRX_80MHZ_500NS


855 
NA_500ns
: 
±r
 = 
NA5TR1_THRES_80MHz_500ns
; ;

857 #ifde‡
CONFIG_NTRX_80MHZ_1000NS


858 
NA_1us
: 
±r
 = 
NA5TR1_THRES_80MHz_1000ns
; ;

860 #ifde‡
CONFIG_NTRX_80MHZ_2000NS


861 
NA_2us
: 
±r
 = 
NA5TR1_THRES_80MHz_2000ns
; ;

863 #ifde‡
CONFIG_NTRX_80MHZ_4000NS


864 
NA_4us
: 
±r
 = 
NA5TR1_THRES_80MHz_4000ns
; ;

870 i‡(
b™dwidth
 =
NA_22MHz
)

872 
symbﬁDur
)

874 #ifde‡
CONFIG_NTRX_22MHZ_500NS


875 
NA_500ns
: 
±r
 = 
NA5TR1_THRES_22MHz_500ns
; ;

877 #ifde‡
CONFIG_NTRX_22MHZ_1000NS


878 
NA_1us
: 
±r
 = 
NA5TR1_THRES_22MHz_1000ns
; ;

880 #ifde‡
CONFIG_NTRX_22MHZ_2000NS


881 
NA_2us
: 
±r
 = 
NA5TR1_THRES_22MHz_2000ns
; ;

883 #ifde‡
CONFIG_NTRX_22MHZ_4000NS


884 
NA_4us
: 
±r
 = 
NA5TR1_THRES_22MHz_4000ns
; ;

886 #ifde‡
CONFIG_NTRX_22MHZ_8000NS


887 
NA_8us
: 
±r
 = 
NA5TR1_THRES_22MHz_8000ns
; ;

889 #ifde‡
CONFIG_NTRX_22MHZ_16000NS


890 
NA_16us
: 
±r
 = 
NA5TR1_THRES_22MHz_16000ns
; ;

895 i‡(
b™dwidth
 =
NA_22MHz_HR
)

897 
symbﬁDur
)

899 #ifde‡
CONFIG_NTRX_22MHZ_HR_4000NS


900 
NA_4us
: 
±r
 = 
NA5TR1_THRES_22MHz_HR_4000ns
; ;

906 
	`mem˝y_P
 (
thªshﬁd
, 
±r
, 5);

907 
	`NTRXWrôeSPI
 (0x80, 
thªshﬁd
, 5);

908 
	`NTRXSëIndexReg
 (0x00);

909 
	}
}

	@ntrxranging.c

20 
	~"¡rxty≥s.h
"

21 
	~"Off°M≠Inô.h
"

22 
	~"¡rxutû.h
"

23 
	~"¡rxdû.h
"

24 
	~"¡rxøngög.h
"

25 
	~"¬•i.h
"

26 
	~<°rög.h
>

28 
	#PHASEOFFSETACK
 0

	)

29 
	#TOAOFFSETMEANACK_L
 1

	)

30 
	#TOAOFFSETMEANACK_H
 2

	)

31 
	#TXRESPTIME_L
 3

	)

32 
	#TXRESPTIME_H
 4

	)

33 
	#PHASEOFFSETDATA
 5

	)

34 
	#TOAOFFSETMEANDATA_L
 6

	)

35 
	#TOAOFFSETMEANDATA_H
 7

	)

36 
	#PREVRXID
 8

	)

37 
	#PREVTXID
 9

	)

38 
	#ACTTXID
 10

	)

41 
	#ARRYLEN
 11

	)

44 
	#SPEED_OF_AIR
 299.792458

	)

45 
	#SPEED_OF_CABLE
 299.792458*0.66

	)

51 
	#MAX_DIFF_ALLOWED
 6

	)

53 
MyDoubÀ32T
 
di°
(
MyByã8T
 *
p1
, MyByã8T *
p2
);

54 
MyDoubÀ32T
 
dñay
(
MyByã8T
 *
p
);

56 
MyByã8T
 
	gÃv
[
ARRYLEN
];

57 
MyByã8T
 
	gºv
[
ARRYLEN
];

58 
MyByã8T
 
	g£t1
[
ARRYLEN
], 
	g£t2
[ARRYLEN];

60 
SëtögsT
 
£âögVÆ
;

70 
	$R™gögCÆlback_Rx
(
MyByã8T
 *
∑ylﬂd
, MyByã8T 
Àn
)

72 
MyByã8T
 
TﬂOff£tMónD©aVÆid
;

74 
Ãv
[
ACTTXID
]=0x00;

77 
	`NTRXRódSPI
 (
NA_TﬂOff£tMónD©aVÆid_O
, &
TﬂOff£tMónD©aVÆid
, 1);

78 
TﬂOff£tMónD©aVÆid
 &(0x01 << 
NA_TﬂOff£tMónD©aVÆid_B
);

79 
TﬂOff£tMónD©aVÆid
 = TﬂOff£tMónD©aVÆid>>
NA_TﬂOff£tMónD©aVÆid_B
;

82 if(
TﬂOff£tMónD©aVÆid
 != 1)

86 
	`mem£t
(
Ãv
,'\0',(lrv));

87 
	`mem£t
(
ºv
,'\0',(rrv));

90 i‡(
Àn
==
ARRYLEN
)

93 
	`mem˝y
(
ºv
,
∑ylﬂd
,
ARRYLEN
);

96 
ºv
[
ACTTXID
])

100 
£t1
[
PHASEOFFSETACK
]=
Ãv
[PHASEOFFSETACK];

101 
£t1
[
TOAOFFSETMEANACK_H
]=
Ãv
[TOAOFFSETMEANACK_H];

102 
£t1
[
TOAOFFSETMEANACK_L
]=
Ãv
[TOAOFFSETMEANACK_L];

103 
£t1
[
TXRESPTIME_H
]=
Ãv
[TXRESPTIME_H];

104 
£t1
[
TXRESPTIME_L
]=
Ãv
[TXRESPTIME_L];

106 
£t1
[
PHASEOFFSETDATA
]=
ºv
[PHASEOFFSETDATA];

107 
£t1
[
TOAOFFSETMEANDATA_H
]=
ºv
[TOAOFFSETMEANDATA_H];

108 
£t1
[
TOAOFFSETMEANDATA_L
]=
ºv
[TOAOFFSETMEANDATA_L];

112 
£t2
[
PHASEOFFSETACK
]=
ºv
[PHASEOFFSETACK];

113 
£t2
[
TOAOFFSETMEANACK_H
]=
ºv
[TOAOFFSETMEANACK_H];

114 
£t2
[
TOAOFFSETMEANACK_L
]=
ºv
[TOAOFFSETMEANACK_L];

115 
£t2
[
TXRESPTIME_H
]=
ºv
[TXRESPTIME_H];

116 
£t2
[
TXRESPTIME_L
]=
ºv
[TXRESPTIME_L];

118 
£t2
[
PHASEOFFSETDATA
]=
Ãv
[PHASEOFFSETDATA];

119 
£t2
[
TOAOFFSETMEANDATA_H
]=
Ãv
[TOAOFFSETMEANDATA_H];

120 
£t2
[
TOAOFFSETMEANDATA_L
]=
Ãv
[TOAOFFSETMEANDATA_L];

127 
Ãv
[
PREVRXID
]=
ºv
[
ACTTXID
];

129 
	`NTRXRódSPI
 (
NA_Pha£Off£tD©a_O
, &
Ãv
[
PHASEOFFSETDATA
], 1);

130 
Ãv
[
PHASEOFFSETDATA
] &(0x07 << 
NA_Pha£Off£tD©a_LSB
);

131 
Ãv
[
PHASEOFFSETDATA
] = (Ãv[PHASEOFFSETDATA] >> 
NA_Pha£Off£tD©a_LSB
);

133 
	`NTRXRódSPI
 (
NA_TﬂOff£tMónD©a_O
, &
Ãv
[
TOAOFFSETMEANDATA_L
], 2);

134 
Ãv
[
TOAOFFSETMEANDATA_H
] &= 0x1f;

137 
	}
}

146 
	$R™gögCÆlback_Ack
(
MyByã8T
 
¨qCou¡
)

148 
MyByã8T
 
TﬂOff£tMónAckVÆid
;

150 
	`NTRXRódSPI
 (
NA_TﬂOff£tMónAckVÆid_O
, &
TﬂOff£tMónAckVÆid
, 1);

151 
TﬂOff£tMónAckVÆid
 &(0x01 << 
NA_TﬂOff£tMónAckVÆid_B
);

152 
TﬂOff£tMónAckVÆid
 = TﬂOff£tMónAckVÆid>>
NA_TﬂOff£tMónAckVÆid_B
;

154 if(
TﬂOff£tMónAckVÆid
 != 1)

158 
	`mem£t
(
Ãv
,'\0',(lrv));

159 
	`mem£t
(
ºv
,'\0',(rrv));

163 
	`NTRXRódSPI
 (
NA_Pha£Off£tAck_O
, &
Ãv
[
PHASEOFFSETACK
], 1);

164 
Ãv
[
PHASEOFFSETACK
] &(0x07 << 
NA_Pha£Off£tAck_LSB
);

165 
Ãv
[
PHASEOFFSETACK
] =Ürv[PHASEOFFSETACK]>>
NA_Pha£Off£tAck_LSB
;

167 
	`NTRXRódSPI
 (
NA_TﬂOff£tMónAck_O
, &
Ãv
[
TOAOFFSETMEANACK_L
], 2);

168 
Ãv
[
TOAOFFSETMEANACK_H
] &= 0x1f;

170 
	`NTRXRódSPI
 ( 
NA_TxRe•Time_O
, &
Ãv
[
TXRESPTIME_L
], 2);

173 
Ãv
[
PREVTXID
]ˆrv[
ACTTXID
];

174 
	}
}

185 
	$R™gögMode
(
MyAddrT
 
de°
)

187 
Ãv
[
ACTTXID
]++;

188 
	`NTRXSídMesßge
 (
de°
, 
Ãv
, 
ARRYLEN
);

189 
	}
}

199 
MyDoubÀ32T
 
	$gëDi°™˚
()

201 
MyDoubÀ32T
 
di°™˚
;

203 
di°™˚
 = 
	`di°
(&
£t1
[0],&
£t2
[0]);

207 i‡((
di°™˚
 < 0.0) && (distance > -1.0))

210 }if(
di°™˚
 >= 0.0)

212  
di°™˚
;

216 
	}
}

227 
MyDoubÀ32T
 
	$di°
(
MyByã8T
 *
p1
, MyByã8T *
p2
)

229 
MyDoubÀ32T
 
avg
 = -1.0;

230 
MyDoubÀ32T
 
•ìdofmedium
 = 
SPEED_OF_AIR
;

233 
MyDoubÀ32T
 
di°™˚D2R
 = 
	`dñay
(
p1
);

235 
MyDoubÀ32T
 
di°™˚R2D
 = 
	`dñay
(
p2
);

239 
di°™˚R2D
 *=(
•ìdofmedium
);

241 
di°™˚D2R
 *=(
•ìdofmedium
);

245 if(
di°™˚R2D
>
di°™˚D2R
)

247 if((
di°™˚R2D
-
di°™˚D2R
)>
MAX_DIFF_ALLOWED
)  -1.0;

249 if((
di°™˚D2R
-
di°™˚R2D
)>
MAX_DIFF_ALLOWED
)  -1.0;

252 
avg
 = ((
di°™˚R2D
 + 
di°™˚D2R
 )/2.0);

254  
avg
;

255 
	}
}

267 
MyDoubÀ32T
 
	$dñay
(
MyByã8T
 *
p
)

270 c⁄° 
MyDoubÀ32T
 
˛k_4MHz
 = 4;

271 c⁄° 
MyDoubÀ32T
 
˛k_32MHz
 = 32;

273 c⁄° 
MyDoubÀ32T
 
˛k_lod20
 = (2000.0/244175);

275 c⁄° 
MyW‹d16T
 
Pul£DëUcMax
 = 5;

276 c⁄° 
MyW‹d16T
 
Pul£DëUcMax_èbÀ
[16] = {1, 2, 4, 8, 16, 24, 32, 40, 48, 56, 64, 1, 1, 1, 1, 1};

278 
MyDoubÀ32T
 
ªs
;

280 
MyDw‹d32T
 
TxRe•Time
 = (
p
[
TXRESPTIME_H
] << 8Ë| (p[
TXRESPTIME_L
]);

281 
MyL⁄g32T
 
RxUcSum
 = (
p
[
TOAOFFSETMEANACK_H
] << 8Ë| (p[
TOAOFFSETMEANACK_L
]);

282 
MyL⁄g32T
 
TxUcSum
 = (
p
[
TOAOFFSETMEANDATA_H
] << 8Ë| (p[
TOAOFFSETMEANDATA_L
]);

284 
MyL⁄g32T
 
RxG©eOff
 = 
p
[
PHASEOFFSETACK
] == 7 ? 7 : 6 -Ö[PHASEOFFSETACK];

285 
MyL⁄g32T
 
TxG©eOff
 = 
p
[
PHASEOFFSETDATA
] == 7 ? 7 : 6 -Ö[PHASEOFFSETDATA];

287 i‡(
£âögVÆ
.
fdma
 == 0)

289 
ªs
 = ((
TxRe•Time
)/
˛k_4MHz


290 - ((
TxG©eOff
+
RxG©eOff
))/
˛k_32MHz


291 - (
TxUcSum
+
RxUcSum
)*
˛k_lod20
/(2.0*
Pul£DëUcMax_èbÀ
[
Pul£DëUcMax
]))/2.0

292 - 
£âögVÆ
.
øngögC⁄°
;

294 
ªs
 = (
TxRe•Time
/
˛k_4MHz
 - (
TxG©eOff
+
RxG©eOff
)/
˛k_32MHz


295 -(
TxUcSum
+
RxUcSum
)/
˛k_32MHz
*(2.0*
Pul£DëUcMax_èbÀ
[
Pul£DëUcMax
]))/2.0

296 - 
£âögVÆ
.
øngögC⁄°
;

299  
ªs
;

300 
	}
}

	@ntrxutil.c

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~"c⁄fig.h
"

23 
	~"¡rxty≥s.h
"

24 #ifdef 
CONFIG_CONSOLE


25 
	~"ußπ.h
"

27 
	~"¡rxutû.h
"

29 
	~"hw˛ock.h
"

30 
	~"¬•i.h
"

31 
	~"¡rxdû.h
"

32 
	~"¡rxiq∑r.h
"

35 
	~"Àd.h
"

36 
	~"utû.h
"

38 
	#NTRX_DUMMY_REG
 0xff

	)

41 
MyBoﬁT
 
NTRXRe°¨t
 ();

43 c⁄° 
MyByã8T
 
	gtxLoAdjVÆues
[2] = {0x0b, 0x09};

44 c⁄° 
MyByã8T
 
	grxLoAdjVÆues
[2] = {0x48, 0x0f};

45 c⁄° 
MyByã8T
 
	glogCh
[6][2] ={{0x68, 0x5a},

59 
MyBoﬁT
 
	gbRxCrc2Mode
=
FALSE
;

60 
MyByã8T
 
	g¡rxShadowReg
[
SHADOWREGCOUNT
];

62 
SëtögsT
 
	g£âögVÆ
;

63 
MyByã8T
 
	gfú°Time
 = 0;

64 
MyBoﬁT
 
	g¡rxRun
;

65 
MyByã8T
 
	g¡rxIrqSètus
[2];

66 
MyAddªssT
 
	g¡rxMacAddr
;

67 
MyByã8T
 
	g¡rxSèã
;

68 
MyByã8T
 
	g¡rxCÆ
;

69 
MyByã8T
 
	gcurCh
 = 0;

73 
MyByã8T
 
	g¡rxInôShadowReg
[] 
	gPROGMEM
 =

101 
	$NTRXInôShadowRegi°î
 ()

103 
MyByã8T
 
i
;

108 
i
 = 0; i < 
SHADOWREGCOUNT
; i++)

110 
¡rxShadowReg
[
i
] = 
	`RódRomByã
(
¡rxInôShadowReg
[i]);

112 
	}
}

117 
MyBoﬁT
 
	grxSèπ
 = 
FALSE
;

127 
	$SëRxSt›
 ()

129 
rxSèπ
 = 
FALSE
;

130 
	}
}

141 
	$SëRxSèπ
 ()

143 
rxSèπ
 = 
TRUE
;

144 
	}
}

156 
	$NTRXSëCh™√l
 (
MyByã8T
 
vÆue
)

158 i‡(
vÆue
 < 6)

160 
curCh
 = 
vÆue
;

163 
	`NTRXAŒCÆibøti⁄
 ();

164 
	}
}

174 
MyByã8T
 
	$NTRXGëCh™√l
 ()

176  (
curCh
);

177 
	}
}

189 
	$NTRXSëIndexReg
 (
MyByã8T
 
∑ge
)

191 i‡(
∑ge
 !
¡rxShadowReg
[
NA_RamIndex_O
])

193 
¡rxShadowReg
[
NA_RamIndex_O
] = 
∑ge
;

194 
	`NTRXWrôeSögÀSPI
 (
NA_RamIndex_O
, 
∑ge
);

196 
	}
}

207 
	$NTRXSëRamIndex
 (
MyByã8T
 
∑ge
)

209 
∑ge
 &= 0x03;

210 i‡(
∑ge
 !(
¡rxShadowReg
[
NA_RamIndex_O
] & 0x03))

212 
¡rxShadowReg
[
NA_RamIndex_O
] &= 0xf0;

213 
¡rxShadowReg
[
NA_RamIndex_O
] |
∑ge
;

214 
∑ge
 = 
¡rxShadowReg
[
NA_RamIndex_O
];

215 
	`NTRXWrôeSögÀSPI
 (
NA_RamIndex_O
, 
∑ge
);

217 
	}
}

230 
	$NTRXSëSèAddªss
 (
MyByã8T
 *
addªss
)

232 
	`NTRXSëNRegi°î
 (
NA_RamSèAddr0
, 
addªss
);

233 
	}
}

243 
	$NTRXRxLoCÆibøti⁄
 ()

245 
MyByã8T
 
d©a
[3];

248 
	`NTRXSëRegi°î
 (
NA_E«bÀLO
, 
TRUE
);

249 
	`NTRXSëRegi°î
 (
NA_E«bÀLOdiv10
, 
TRUE
);

250 
	`NTRXSëRegi°î
 (
NA_U£LoRxC≠s
, 
TRUE
);

252 
d©a
[0] = 0x03;

253 
	`NTRXWrôeSögÀSPI
 (
NA_LoI¡sRe£t_O
, 
d©a
[0]);

254 
d©a
[0] = 
logCh
[
curCh
][1];

255 
d©a
[1] = 
logCh
[
curCh
][0];

256 
	`NTRXSëNRegi°î
 (
NA_LoT¨gëVÆue
, 
d©a
);

260 
	`NTRXRódSögÀSPI
 (
NA_LoI¡sRawSèt_O
, &
d©a
[0]);

261 } (
d©a
[0] & (1 << 
NA_LoTunögRódy_B
)) != (1 << NA_LoTuningReady_B));

265 
	`NTRXSëRegi°î
 (
NA_U£LoRxC≠s
, 
FALSE
);

266 
	`NTRXSëRegi°î
 (
NA_E«bÀLOdiv10
, 
FALSE
);

267 
	`NTRXSëRegi°î
 (
NA_E«bÀLO
, 
FALSE
);

268 
	}
}

278 
	$NTRXTxLoCÆibøti⁄
 ()

280 
MyByã8T
 
d©a
[3];

282 
	`NTRXSëRegi°î
 (
NA_E«bÀLO
, 
TRUE
);

283 
	`NTRXSëRegi°î
 (
NA_E«bÀLOdiv10
, 
TRUE
);

284 
	`NTRXSëRegi°î
 (
NA_U£LoRxC≠s
, 
FALSE
);

286 
d©a
[0] = 0x03;

287 
	`NTRXWrôeSögÀSPI
 (
NA_LoI¡sRe£t_O
, 
d©a
[0]);

289 
d©a
[0] = 
logCh
[
curCh
][1];

290 
d©a
[1] = 
logCh
[
curCh
][0];

291 
	`NTRXSëNRegi°î
 (
NA_LoT¨gëVÆue
, 
d©a
);

295 
	`NTRXRódSögÀSPI
 (
NA_LoI¡sRawSèt_O
, &(
d©a
[0]));

296 } (
d©a
[0] & (1 << 
NA_LoTunögRódy_B
)) != (1 << NA_LoTuningReady_B));

300 
	`NTRXSëRegi°î
 (
NA_E«bÀLOdiv10
, 
FALSE
);

301 
	`NTRXSëRegi°î
 (
NA_E«bÀLO
, 
FALSE
);

302 
	}
}

312 
	$NTRXAŒCÆibøti⁄
 ()

314 
MyByã8T
 
vÆue
;

316 i‡(
¡rxSèã
 !
TxIDLE
)

318 
¡rxCÆ
 = 
AŒCAL
;

322 
vÆue
 = (1 << 
NA_LoE«bÀFa°Tunög_B
Ë| (1 << 
NA_LoE«bÀLsbNeg_B
Ë| (4 << 
NA_LoFa°TunögLevñ_LSB
);

323 
	`NTRXWrôeSögÀSPI
 (
NA_LoE«bÀFa°Tunög_O
, 
vÆue
);

324 
¡rxShadowReg
[
NA_LoE«bÀFa°Tunög_O
] = 
vÆue
;

326 
	`NTRXSëRegi°î
 (
NA_RxCmdSt›
, 
TRUE
);

327 
	`NTRXSëRegi°î
 (
NA_RxI¡sRe£t
, 0xff);

328 
	`NTRXSëRegi°î
 (
NA_RxBuf„rCmd
, 3);

329 
rxIrqSètus
 = 0;

331 
	`NTRXRxLoCÆibøti⁄
 ();

332 
	`NTRXTxLoCÆibøti⁄
 ();

334 
	`NTRXSëRegi°î
 (
NA_RxCmdSèπ
, 
TRUE
);

335 
¡rxCÆ
 = 0;

336 
	}
}

344 
	#BOOL_OP
 0xff

	)

346 
	#NTRX_RW_REG
 1

	)

347 
	#NTRX_NC_REG
 2

	)

348 
	#NTRX_RO_REG
 3

	)

349 
	#NTRX_WO_REG
 4

	)

351 
	#NTRX_TC_REG
 0

	)

352  
NTRXRegCmdT
 
	gªgCmd
[] 
	gPROGMEM
 =

357 {(
NA_SpiBôOrdî_O
 >> 8), (NA_SpiBôOrdî_O & 0xff), (0x01 << 
NA_SpiBôOrdî_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_SpiBôOrdî_I
},

359 {(
NA_SpiTxDrivî_O
 >> 8), (NA_SpiTxDrivî_O & 0xff), (0x01 << 
NA_SpiTxDrivî_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_SpiTxDrivî_I
},

361 {(
NA_IrqPﬁ¨ôy_O
 >> 8), (NA_IrqPﬁ¨ôy_O & 0xff), (0x01 << 
NA_IrqPﬁ¨ôy_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_IrqPﬁ¨ôy_I
},

363 {(
NA_IrqDrivî_O
 >> 8), (NA_IrqDrivî_O & 0xff), (0x01 << 
NA_IrqDrivî_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_IrqDrivî_I
},

366 {(
NA_Vîsi⁄_O
 >> 8), (NA_Vîsi⁄_O & 0xff), 1, 0, 
NTRX_RO_REG
, 
NTRX_NC_REG
, 
NA_Vîsi⁄_I
},

368 {(
NA_WakeUpTimeByã_O
 >> 8), (NA_WakeUpTimeByã_O & 0xff), 0xff, 0, 
NTRX_WO_REG
, 
NTRX_DUMMY_REG
, 
NA_WakeUpTimeByã_I
},

371 {(
NA_Revisi⁄_O
 >> 8), (NA_Revisi⁄_O & 0xff), 1, 0, 
NTRX_RO_REG
, 
NTRX_NC_REG
, 
NA_Revisi⁄_I
},

373 {(
NA_WakeUpTimeWe_O
 >> 8), (NA_WakeUpTimeWe_O & 0xff), (0x07 << 
NA_WakeUpTimeWe_LSB
), NA_WakeUpTimeWe_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_WakeUpTimeWe_I
},

376 {(
NA_B©tMgmtE«bÀ_O
 >> 8), (NA_B©tMgmtE«bÀ_O & 0xff), (0x01 << 
NA_B©tMgmtE«bÀ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_B©tMgmtE«bÀ_I
},

378 {(
NA_B©tMgmtThªshﬁd_O
 >> 8), (NA_B©tMgmtThªshﬁd_O & 0xff), (0x0‡<< 
NA_B©tMgmtThªshﬁd_LSB
), NA_B©tMgmtThªshﬁd_LSB, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_B©tMgmtThªshﬁd_I
},

380 {(
NA_B©tMgmtCom∑ª_O
 >> 8), (NA_B©tMgmtCom∑ª_O & 0xff), (0x01 << 
NA_B©tMgmtCom∑ª_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_B©tMgmtCom∑ª_I
},

383 {(
NA_DioDúe˘i⁄_O
 >> 8), (NA_DioDúe˘i⁄_O & 0xff), (0x01 << 
NA_DioDúe˘i⁄_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_DioDúe˘i⁄_I
},

385 {(
NA_DioOutVÆueAœrmE«bÀ_O
 >> 8), (NA_DioOutVÆueAœrmE«bÀ_O & 0xff), (0x01 << 
NA_DioOutVÆueAœrmE«bÀ_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_DioOutVÆueAœrmE«bÀ_I
},

387 {(
NA_DioAœrmSèπ_O
 >> 8), (NA_DioAœrmSèπ_O & 0xff), (0x01 << 
NA_DioAœrmSèπ_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_DioAœrmSèπ_I
},

389 {(
NA_DioAœrmPﬁ¨ôy_O
 >> 8), (NA_DioAœrmPﬁ¨ôy_O & 0xff), (0x01 << 
NA_DioAœrmPﬁ¨ôy_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_DioAœrmPﬁ¨ôy_I
},

391 {(
NA_DioU£PuŒup_O
 >> 8), (NA_DioU£PuŒup_O & 0xff), (0x01 << 
NA_DioU£PuŒup_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_DioU£PuŒup_I
},

393 {(
NA_DioU£PuŒdown_O
 >> 8), (NA_DioU£PuŒdown_O & 0xff), (0x01 << 
NA_DioU£PuŒdown_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_DioU£PuŒdown_I
},

395 {(
NA_DioInVÆueAœrmSètus_O
 >> 8), (NA_DioInVÆueAœrmSètus_O & 0xff), (0x0‡<< 
NA_DioInVÆueAœrmSètus_LSB
), NA_DioInVÆueAœrmSètus_LSB,
NTRX_RO_REG
, 
NTRX_NC_REG
, 
NA_DioInVÆueAœrmSètus_I
},

398 {(
NA_DioP‹tWe_O
 >> 8), (NA_DioP‹tWe_O & 0xff), (0x0‡<< 
NA_DioP‹tWe_LSB
), NA_DioP‹tWe_LSB, 
NTRX_WO_REG
, 
NTRX_NC_REG
, 
NA_DioP‹tWe_I
},

401 {(
NA_E«bÀWakeUpRtc_O
 >> 8), (NA_E«bÀWakeUpRtc_O & 0xff), (0x01 << 
NA_E«bÀWakeUpRtc_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_E«bÀWakeUpRtc_I
},

403 {(
NA_E«bÀWakeUpDio_O
 >> 8), (NA_E«bÀWakeUpDio_O & 0xff), (0x01 << 
NA_E«bÀWakeUpDio_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_E«bÀWakeUpDio_I
},

405 {(
NA_PowîUpTime_O
 >> 8), (NA_PowîUpTime_O & 0xff), (0x07 << 
NA_PowîUpTime_LSB
), NA_PowîUpTime_LSB, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_PowîUpTime_I
},

407 {(
NA_PowîDownMode_O
 >> 8), (NA_PowîDownMode_O & 0xff), (0x01 << 
NA_PowîDownMode_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_PowîDownMode_I
},

410 {(
NA_PowîDown_O
 >> 8), (NA_PowîDown_O & 0xff), (0x01 << 
NA_PowîDown_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_PowîDown_I
},

412 {(
NA_Re£tBbClockG©e_O
 >> 8), (NA_Re£tBbClockG©e_O & 0xff), (0x01 << 
NA_Re£tBbClockG©e_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_Re£tBbClockG©e_I
},

414 {(
NA_Re£tBbRadioCål_O
 >> 8), (NA_Re£tBbRadioCål_O & 0xff), (0x01 << 
NA_Re£tBbRadioCål_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_Re£tBbRadioCål_I
},

416 {(
NA_U£PuŒup4Te°_O
 >> 8), (NA_U£PuŒup4Te°_O & 0xff), (0x01 << 
NA_U£PuŒup4Te°_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Te°_I
},

418 {(
NA_U£PuŒdown4Te°_O
 >> 8), (NA_U£PuŒdown4Te°_O & 0xff), (0x01 << 
NA_U£PuŒdown4Te°_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Te°_I
},

421 {(
NA_E«bÀBbCry°Æ_O
 >> 8), (NA_E«bÀBbCry°Æ_O & 0xff), (0x01 << 
NA_E«bÀBbCry°Æ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_E«bÀBbCry°Æ_I
},

423 {(
NA_E«bÀBbClock_O
 >> 8), (NA_E«bÀBbClock_O & 0xff), (0x01 << 
NA_E«bÀBbClock_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_E«bÀBbClock_I
},

425 {(
NA_By∑ssBbCry°Æ_O
 >> 8), (NA_By∑ssBbCry°Æ_O & 0xff), (0x01 << 
NA_By∑ssBbCry°Æ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_By∑ssBbCry°Æ_I
},

427 {(
NA_FótuªClockFªq_O
 >> 8), (NA_FótuªClockFªq_O & 0xff), (0x07 << 
NA_FótuªClockFªq_LSB
), NA_FótuªClockFªq_LSB, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_FótuªClockFªq_I
},

429 {(
NA_E«bÀFótuªClock_O
 >> 8), (NA_E«bÀFótuªClock_O & 0xff), (0x01 << 
NA_E«bÀFótuªClock_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_E«bÀFótuªClock_I
},

432 {(
NA_U£PuŒup4Spi˛k_O
 >> 8), (NA_U£PuŒup4Spi˛k_O & 0xff), (0x01 << 
NA_U£PuŒup4Spi˛k_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Spi˛k_I
},

434 {(
NA_U£PuŒdown4Spi˛k_O
 >> 8), (NA_U£PuŒdown4Spi˛k_O & 0xff), (0x01 << 
NA_U£PuŒdown4Spi˛k_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Spi˛k_I
},

436 {(
NA_U£PuŒup4Spis¢_O
 >> 8), (NA_U£PuŒup4Spis¢_O & 0xff), (0x01 << 
NA_U£PuŒup4Spis¢_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Spis¢_I
},

438 {(
NA_U£PuŒdown4Spis¢_O
 >> 8), (NA_U£PuŒdown4Spis¢_O & 0xff), (0x01 << 
NA_U£PuŒdown4Spis¢_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Spis¢_I
},

440 {(
NA_U£PuŒup4Spúxd_O
 >> 8), (NA_U£PuŒup4Spúxd_O & 0xff), (0x01 << 
NA_U£PuŒup4Spúxd_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Spúxd_I
},

442 {(
NA_U£PuŒdown4Spúxd_O
 >> 8), (NA_U£PuŒdown4Spúxd_O & 0xff), (0x01 << 
NA_U£PuŒdown4Spúxd_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Spúxd_I
},

444 {(
NA_U£PuŒup4Spôxd_O
 >> 8), (NA_U£PuŒup4Spôxd_O & 0xff), (0x01 << 
NA_U£PuŒup4Spôxd_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Spôxd_I
},

446 {(
NA_U£PuŒdown4Spôxd_O
 >> 8), (NA_U£PuŒdown4Spôxd_O & 0xff), (0x01 << 
NA_U£PuŒdown4Spôxd_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Spôxd_I
},

449 {(
NA_U£PuŒup4P‹_O
 >> 8), (NA_U£PuŒup4P‹_O & 0xff), (0x01 << 
NA_U£PuŒup4P‹_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4P‹_I
},

451 {(
NA_U£PuŒdown4P‹_O
 >> 8), (NA_U£PuŒdown4P‹_O & 0xff), (0x01 << 
NA_U£PuŒdown4P‹_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4P‹_I
},

453 {(
NA_U£PuŒup4Pamp_O
 >> 8), (NA_U£PuŒup4Pamp_O & 0xff), (0x01 << 
NA_U£PuŒup4Pamp_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Pamp_I
},

455 {(
NA_U£PuŒdown4Pamp_O
 >> 8), (NA_U£PuŒdown4Pamp_O & 0xff), (0x01 << 
NA_U£PuŒdown4Pamp_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Pamp_I
},

457 {(
NA_U£PuŒup4Ucúq_O
 >> 8), (NA_U£PuŒup4Ucúq_O & 0xff), (0x01 << 
NA_U£PuŒup4Ucúq_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4Ucúq_I
},

459 {(
NA_U£PuŒdown4Ucúq_O
 >> 8), (NA_U£PuŒdown4Ucúq_O & 0xff), (0x01 << 
NA_U£PuŒdown4Ucúq_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4Ucúq_I
},

461 {(
NA_U£PuŒup4U¸°_O
 >> 8), (NA_U£PuŒup4U¸°_O & 0xff), (0x01 << 
NA_U£PuŒup4U¸°_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒup4U¸°_I
},

463 {(
NA_U£PuŒdown4U¸°_O
 >> 8), (NA_U£PuŒdown4U¸°_O & 0xff), (0x01 << 
NA_U£PuŒdown4U¸°_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£PuŒdown4U¸°_I
},

466 {(
NA_WrôePuŒs4Spi_O
 >> 8), (NA_WrôePuŒs4Spi_O & 0xff), (0x01 << 
NA_WrôePuŒs4Spi_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_WrôePuŒs4Spi_I
},

468 {(
NA_WrôePuŒs4Pads_O
 >> 8), (NA_WrôePuŒs4Pads_O & 0xff), (0x01 << 
NA_WrôePuŒs4Pads_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_WrôePuŒs4Pads_I
},

471 {(
NA_RamIndex_O
 >> 8), (NA_RamIndex_O & 0xff), (0x03 << 
NA_RamIndex_LSB
), NA_RamIndex_LSB, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_RamIndex_I
},

473 {(
NA_Devi˚Sñe˘_O
 >> 8), (NA_Devi˚Sñe˘_O & 0xff), (0x03 << 
NA_Devi˚Sñe˘_LSB
), NA_Devi˚Sñe˘_LSB, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_Devi˚Sñe˘_I
},

476 {(
NA_TxIrqE«bÀ_O
 >> 8), (NA_TxIrqE«bÀ_O & 0xff), (0x01 << 
NA_TxIrqE«bÀ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_TxIrqE«bÀ_I
},

478 {(
NA_RxIrqE«bÀ_O
 >> 8), (NA_RxIrqE«bÀ_O & 0xff), (0x01 << 
NA_RxIrqE«bÀ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_RxIrqE«bÀ_I
},

480 {(
NA_BbTimîIrqE«bÀ_O
 >> 8), (NA_BbTimîIrqE«bÀ_O & 0xff), (0x01 << 
NA_BbTimîIrqE«bÀ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_BbTimîIrqE«bÀ_I
},

482 {(
NA_LoIrqE«bÀ_O
 >> 8), (NA_LoIrqE«bÀ_O & 0xff), (0x01 << 
NA_LoIrqE«bÀ_B
), 
BOOL_OP
, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 
NA_LoIrqE«bÀ_I
},

484 {(
NA_TxIrqSètus_O
 >> 8), (NA_TxIrqSètus_O & 0xff), (0x01 << 
NA_TxIrqSètus_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_TxIrqSètus_I
},

486 {(
NA_RxIrqSètus_O
 >> 8), (NA_RxIrqSètus_O & 0xff), (0x01 << 
NA_RxIrqSètus_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxIrqSètus_I
},

488 {(
NA_BbTimîIrqSètus_O
 >> 8), (NA_BbTimîIrqSètus_O & 0xff), (0x01 << 
NA_BbTimîIrqSètus_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_BbTimîIrqSètus_I
},

490 {(
NA_LoIrqSètus_O
 >> 8), (NA_LoIrqSètus_O & 0xff), (0x01 << 
NA_LoIrqSètus_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_LoIrqSètus_I
},

493 {(
NA_TxI¡sRawSèt_O
 >> 8), (NA_TxI¡sRawSèt_O & 0xff), (0x3‡<< 
NA_TxI¡sRawSèt_LSB
), NA_TxI¡sRawSèt_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_TxI¡sRawSèt_I
},

495 {(
NA_TxI¡sRe£t_O
 >> 8), (NA_TxI¡sRe£t_O & 0xff), (0x3‡<< 
NA_TxI¡sRe£t_LSB
), NA_TxI¡sRe£t_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxI¡sRe£t_I
},

498 {(
NA_RxI¡sRawSèt_O
 >> 8), (NA_RxI¡sRawSèt_O & 0xff), (0x7‡<< 
NA_RxI¡sRawSèt_LSB
), NA_RxI¡sRawSèt_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxI¡sRawSèt_I
},

500 {(
NA_RxI¡sRe£t_O
 >> 8), (NA_RxI¡sRe£t_O & 0xff), (0x7‡<< 
NA_RxI¡sRe£t_LSB
), NA_RxI¡sRe£t_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxI¡sRe£t_I
},

503 {(
NA_LoI¡sRawSèt_O
 >> 8), (NA_LoI¡sRawSèt_O & 0xff), (0x01 << 
NA_LoI¡sRawSèt_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_LoI¡sRawSèt_I
},

505 {(
NA_LoI¡sRe£t_O
 >> 8), (NA_LoI¡sRe£t_O & 0xff), (0x03 << 
NA_LoI¡sRe£t_LSB
), NA_LoI¡sRe£t_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LoI¡sRe£t_I
},

507 {(
NA_CÀ¨Ba£b™dTimîI¡_O
 >> 8), (NA_CÀ¨Ba£b™dTimîI¡_O & 0xff), (0x01 << 
NA_CÀ¨Ba£b™dTimîI¡_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CÀ¨Ba£b™dTimîI¡_I
},

510 {(
NA_TxI¡sEn_O
 >> 8), (NA_TxI¡sEn_O & 0xff), (0x3‡<< 
NA_TxI¡sEn_LSB
), NA_TxI¡sEn_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxI¡sEn_I
},

513 {(
NA_RxI¡sEn_O
 >> 8), (NA_RxI¡sEn_O & 0xff), (0x7‡<< 
NA_RxI¡sEn_LSB
), NA_RxI¡sEn_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxI¡sEn_I
},

516 {(
NA_LoI¡sEn_O
 >> 8), (NA_LoI¡sEn_O & 0xff), (0x01 << 
NA_LoI¡sEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LoI¡sEn_I
},

521 {(
NA_LoE«bÀFa°Tunög_O
 >> 8), (NA_LoE«bÀFa°Tunög_O & 0xff), (0x01 << 
NA_LoE«bÀFa°Tunög_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LoE«bÀFa°Tunög_I
},

523 {(
NA_LoFa°TunögLevñ_O
 >> 8), (NA_LoFa°TunögLevñ_O & 0xff), (0x07 << 
NA_LoFa°TunögLevñ_LSB
), NA_LoFa°TunögLevñ_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LoFa°TunögLevñ_I
},

525 {(
NA_LoE«bÀLsbNeg_O
 >> 8), (NA_LoE«bÀLsbNeg_O & 0xff), (0x01 << 
NA_LoE«bÀLsbNeg_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LoE«bÀLsbNeg_I
},

527 {(
NA_U£LoRxC≠s_O
 >> 8), (NA_U£LoRxC≠s_O & 0xff), (0x01 << 
NA_U£LoRxC≠s_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£LoRxC≠s_I
},

530 {(
NA_LoT¨gëVÆue_O
 >> 8), (NA_LoT¨gëVÆue_O & 0xff), 2, 0, 
NTRX_WO_REG
, 
NTRX_RW_REG
, 0},

533 {(
NA_AgcThªsHﬁd1_O
 >> 8), (NA_AgcThªsHﬁd1_O & 0xff), (0xf‡<< 
NA_AgcThªsHﬁd1_LSB
), NA_AgcThªsHﬁd1_LSB, 
NTRX_WO_REG
, 
NTRX_NC_REG
, 
NA_AgcThªsHﬁd1_I
},

536 {(
NA_AgcThªsHﬁd2_O
 >> 8), (NA_AgcThªsHﬁd2_O & 0xff), (0xf‡<< 
NA_AgcThªsHﬁd2_LSB
), NA_AgcThªsHﬁd2_LSB, 
NTRX_WO_REG
, 
NTRX_NC_REG
, 
NA_AgcThªsHﬁd2_I
},

539 {(
NA_HﬁdAgcInBôSync_O
 >> 8), (NA_HﬁdAgcInBôSync_O & 0xff), (0x7‡<< 
NA_HﬁdAgcInBôSync_LSB
), NA_HﬁdAgcInBôSync_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_HﬁdAgcInBôSync_I
},

541 {(
NA_HﬁdAgcInFømeSync_O
 >> 8), (NA_HﬁdAgcInFømeSync_O & 0xff), (0x01 << 
NA_HﬁdAgcInFømeSync_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_HﬁdAgcInFømeSync_I
},

544 {(
NA_AgcDódTime_O
 >> 8), (NA_AgcDódTime_O & 0xff), (0x3‡<< 
NA_AgcDódTime_LSB
), NA_AgcDódTime_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcDódTime_I
},

546 {(
NA_AgcNªgLígth_O
 >> 8), (NA_AgcNªgLígth_O & 0xff), (0x03 << 
NA_AgcNªgLígth_LSB
), NA_AgcNªgLígth_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcNªgLígth_I
},

549 {(
NA_AgcI¡Time_O
 >> 8), (NA_AgcI¡Time_O & 0xff), 2, 0, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 0},

553 {(
NA_AgcVÆue_O
 >> 8), (NA_AgcVÆue_O & 0xff), (0x3‡<< 
NA_AgcVÆue_LSB
), NA_AgcVÆue_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcVÆue_I
},

555 {(
NA_AgcDeÁu…En_O
 >> 8), (NA_AgcDeÁu…En_O & 0xff), (0x01 << 
NA_AgcDeÁu…En_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcDeÁu…En_I
},

557 {(
NA_AgcHﬁd_O
 >> 8), (NA_AgcHﬁd_O & 0xff), (0x01 << 
NA_AgcHﬁd_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcHﬁd_I
},

560 {(
NA_AgcRssiThªs_O
 >> 8), (NA_AgcRssiThªs_O & 0xff), (0x3‡<< 
NA_AgcRssiThªs_LSB
), NA_AgcRssiThªs_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcRssiThªs_I
},

562 {(
NA_AgcGaö_O
 >> 8), (NA_AgcGaö_O & 0xff), (0x3‡<< 
NA_AgcGaö_LSB
), NA_AgcGaö_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_AgcGaö_I
},

565 {(
NA_ChúpFûãrC≠s_O
 >> 8), (NA_ChúpFûãrC≠s_O & 0xff), (0x0‡<< 
NA_ChúpFûãrC≠s_LSB
), NA_ChúpFûãrC≠s_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_ChúpFûãrC≠s_I
},

567 {(
NA_F˘ClockEn_O
 >> 8), (NA_F˘ClockEn_O & 0xff), (0x01 << 
NA_F˘ClockEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_F˘ClockEn_I
},

569 {(
NA_SèπF˘Mósuª_O
 >> 8), (NA_SèπF˘Mósuª_O & 0xff), (0x01 << 
NA_SèπF˘Mósuª_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_SèπF˘Mósuª_I
},

572 {(
NA_E«bÀTx_O
 >> 8), (NA_E«bÀTx_O & 0xff), (0x01 << 
NA_E«bÀTx_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_E«bÀTx_I
},

574 {(
NA_F˘Pîiod_O
 >> 8), (NA_F˘Pîiod_O & 0xff), (0x0‡<< 
NA_F˘Pîiod_LSB
), NA_F˘Pîiod_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_F˘Pîiod_I
},

577 {(
NA_TﬂOff£tMónD©aVÆid_O
 >> 8), (NA_TﬂOff£tMónD©aVÆid_O & 0xff), (0x01 << 
NA_TﬂOff£tMónD©aVÆid_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_TﬂOff£tMónD©aVÆid_I
},

580 {(
NA_Pha£Off£tD©a_O
 >> 8), (NA_Pha£Off£tD©a_O & 0xff), (0x07 << 
NA_Pha£Off£tD©a_LSB
), NA_Pha£Off£tD©a_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_Pha£Off£tD©a_I
},

582 {(
NA_Pha£Off£tAck_O
 >> 8), (NA_Pha£Off£tAck_O & 0xff), (0x07 << 
NA_Pha£Off£tAck_LSB
), NA_Pha£Off£tAck_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_Pha£Off£tAck_I
},

585 {(
NA_TﬂOff£tMónAckVÆid_O
 >> 8), (NA_TﬂOff£tMónAckVÆid_O & 0xff), (0x01 << 
NA_TﬂOff£tMónAckVÆid_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_TﬂOff£tMónAckVÆid_I
},

588 {(
NA_RxPackëTy≥_O
 >> 8), (NA_RxPackëTy≥_O & 0xff), (0x0‡<< 
NA_RxPackëTy≥_LSB
), NA_RxPackëTy≥_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxPackëTy≥_I
},

590 {(
NA_RxAddrM©ch_O
 >> 8), (NA_RxAddrM©ch_O & 0xff), (0x0‡<< 
NA_RxAddrM©ch_LSB
), NA_RxAddrM©ch_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrM©ch_I
},

592 {(
NA_RxCrc1Sèt_O
 >> 8), (NA_RxCrc1Sèt_O & 0xff), (0x01 << 
NA_RxCrc1Sèt_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxCrc1Sèt_I
},

594 {(
NA_RxCrc2Sèt_O
 >> 8), (NA_RxCrc2Sèt_O & 0xff), (0x01 << 
NA_RxCrc2Sèt_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxCrc2Sèt_I
},

597 {(
NA_RxC‹rBôEº_O
 >> 8), (NA_RxC‹rBôEº_O & 0xff), (0x0‡<< 
NA_RxC‹rBôEº_LSB
), NA_RxC‹rBôEº_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxC‹rBôEº_I
},

599 {(
NA_RxC‹rEºThªs_O
 >> 8), (NA_RxC‹rEºThªs_O & 0xff), (0x0‡<< 
NA_RxC‹rEºThªs_LSB
), NA_RxC‹rEºThªs_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxC‹rEºThªs_I
},

602 {(
NA_RxAddrSegEsM©ch_O
 >> 8), (NA_RxAddrSegEsM©ch_O & 0xff), (0x01 << 
NA_RxAddrSegEsM©ch_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrSegEsM©ch_I
},

604 {(
NA_RxAddrSegIsM©ch_O
 >> 8), (NA_RxAddrSegIsM©ch_O & 0xff), (0x01 << 
NA_RxAddrSegIsM©ch_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrSegIsM©ch_I
},

606 {(
NA_RxCry±En_O
 >> 8), (NA_RxCry±En_O & 0xff), (0x01 << 
NA_RxCry±En_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxCry±En_I
},

608 {(
NA_RxCry±Id_O
 >> 8), (NA_RxCry±Id_O & 0xff), (0x03 << 
NA_RxCry±Id_LSB
), NA_RxCry±Id_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxCry±Id_I
},

610 {(
NA_RxCry±SeqN_O
 >> 8), (NA_RxCry±SeqN_O & 0xff), (0x01 << 
NA_RxCry±SeqN_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxCry±SeqN_I
},

613 {(
NA_TxTimeSlŸC⁄åﬁ_O
 >> 8), (NA_TxTimeSlŸC⁄åﬁ_O & 0xff), (0x01 << 
NA_TxTimeSlŸC⁄åﬁ_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxTimeSlŸC⁄åﬁ_I
},

615 {(
NA_RxTimeSlŸC⁄åﬁ_O
 >> 8), (NA_RxTimeSlŸC⁄åﬁ_O & 0xff), (0x01 << 
NA_RxTimeSlŸC⁄åﬁ_B
), 
BOOL_OP
, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_RxTimeSlŸC⁄åﬁ_I
},

618 {(
NA_TxArqC¡_O
 >> 8), (NA_TxArqC¡_O & 0xff), (0x0‡<< 
NA_TxArqC¡_LSB
), NA_TxArqC¡_LSB, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 
NA_TxArqC¡_I
},

620 {(
NA_TxArqMax_O
 >> 8), (NA_TxArqMax_O & 0xff), (0x0‡<< 
NA_TxArqMax_LSB
), NA_TxArqMax_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxArqMax_I
},

623 {(
NA_CsqDôhîVÆue_O
 >> 8), (NA_CsqDôhîVÆue_O & 0xff), (0x03 << 
NA_CsqDôhîVÆue_LSB
), NA_CsqDôhîVÆue_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CsqDôhîVÆue_I
},

625 {(
NA_CsqU£Pha£Shi·_O
 >> 8), (NA_CsqU£Pha£Shi·_O & 0xff), (0x01 << 
NA_CsqU£Pha£Shi·_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CsqU£Pha£Shi·_I
},

627 {(
NA_CsqU£4Pha£s_O
 >> 8), (NA_CsqU£4Pha£s_O & 0xff), (0x01 << 
NA_CsqU£4Pha£s_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CsqU£4Pha£s_I
},

629 {(
NA_CsqAsyMode_O
 >> 8), (NA_CsqAsyMode_O & 0xff), (0x01 << 
NA_CsqAsyMode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CsqAsyMode_I
},

631 {(
NA_CsqMemAddrInô_O
 >> 8), (NA_CsqMemAddrInô_O & 0xff), (0x01 << 
NA_CsqMemAddrInô_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CsqMemAddrInô_I
},

633 {(
NA_CsqU£Ram_O
 >> 8), (NA_CsqU£Ram_O & 0xff), (0x01 << 
NA_CsqU£Ram_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_CsqU£Ram_I
},

636 {(
NA_D3lFixnM≠_O
 >> 8), (NA_D3lFixnM≠_O & 0xff), (0x01 << 
NA_D3lFixnM≠_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_D3lFixnM≠_I
},

638 {(
NA_D3lPomEn_O
 >> 8), (NA_D3lPomEn_O & 0xff), (0x01 << 
NA_D3lPomEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_D3lPomEn_I
},

640 {(
NA_D3lPomLí_O
 >> 8), (NA_D3lPomLí_O & 0xff), (0x03 << 
NA_D3lPomLí_LSB
), NA_D3lPomLí_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_D3lPomLí_I
},

642 {(
NA_D3lUpDownEx_O
 >> 8), (NA_D3lUpDownEx_O & 0xff), (0x01 << 
NA_D3lUpDownEx_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_D3lUpDownEx_I
},

645 {(
NA_LóveM≠Thªsh1InBôsync_O
 >> 8), (NA_LóveM≠Thªsh1InBôsync_O & 0xff), (0x7‡<< 
NA_LóveM≠Thªsh1InBôsync_LSB
), NA_LóveM≠Thªsh1InBôsync_LSB,
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LóveM≠Thªsh1InBôsync_I
},

647 {(
NA_U£M≠Thªsh1InFømesync_O
 >> 8), (NA_U£M≠Thªsh1InFømesync_O & 0xff), (0x01 << 
NA_U£M≠Thªsh1InFømesync_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£M≠Thªsh1InFømesync_I
},

650 {(
NA_Go2M≠Thªsh1InBôsync_O
 >> 8), (NA_Go2M≠Thªsh1InBôsync_O & 0xff), (0x7‡<< 
NA_Go2M≠Thªsh1InBôsync_LSB
), NA_Go2M≠Thªsh1InBôsync_LSB,
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Go2M≠Thªsh1InBôsync_I
},

653 {(
NA_E«bÀLO_O
 >> 8), (NA_E«bÀLO_O & 0xff), (0x01 << 
NA_E«bÀLO_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_E«bÀLO_I
},

655 {(
NA_E«bÀLOdiv10_O
 >> 8), (NA_E«bÀLOdiv10_O & 0xff), (0x01 << 
NA_E«bÀLOdiv10_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_E«bÀLOdiv10_I
},

657 {(
NA_E«bÀCsqClock_O
 >> 8), (NA_E«bÀCsqClock_O & 0xff), (0x01 << 
NA_E«bÀCsqClock_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_E«bÀCsqClock_I
},

659 {(
NA_InvîtRxClock_O
 >> 8), (NA_InvîtRxClock_O & 0xff), (0x01 << 
NA_InvîtRxClock_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_InvîtRxClock_I
},

661 {(
NA_E«bÀExtPA_O
 >> 8), (NA_E«bÀExtPA_O & 0xff), (0x01 << 
NA_E«bÀExtPA_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_E«bÀExtPA_I
},

664 {(
NA_L«FªqAdju°_O
 >> 8), (NA_L«FªqAdju°_O & 0xff), (0x7 << 
NA_L«FªqAdju°_LSB
), NA_L«FªqAdju°_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_L«FªqAdju°_I
},

666 {(
NA_TxPaBüs_O
 >> 8), (NA_TxPaBüs_O & 0xff), (0x7 << 
NA_TxPaBüs_LSB
), NA_TxPaBüs_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxPaBüs_I
},

669 {(
NA_TxOuçutPowî0_O
 >> 8), (NA_TxOuçutPowî0_O & 0xff), (0x3‡<< 
NA_TxOuçutPowî0_LSB
), NA_TxOuçutPowî0_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxOuçutPowî0_I
},

672 {(
NA_TxOuçutPowî1_O
 >> 8), (NA_TxOuçutPowî1_O & 0xff), (0x3‡<< 
NA_TxOuçutPowî1_LSB
), NA_TxOuçutPowî1_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxOuçutPowî1_I
},

675 {(
NA_RfRxCompVÆueI_O
 >> 8), (NA_RfRxCompVÆueI_O & 0xff), (0x1‡<< 
NA_RfRxCompVÆueI_LSB
), NA_RfRxCompVÆueI_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RfRxCompVÆueI_I
},

678 {(
NA_RfRxCompVÆueQ_O
 >> 8), (NA_RfRxCompVÆueQ_O & 0xff), (0x1‡<< 
NA_RfRxCompVÆueQ_LSB
), NA_RfRxCompVÆueQ_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RfRxCompVÆueQ_I
},

681 {(
NA_SymbﬁDur_O
 >> 8), (NA_SymbﬁDur_O & 0xff), (0x7 << 
NA_SymbﬁDur_LSB
), NA_SymbﬁDur_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_SymbﬁDur_I
},

683 {(
NA_SymbﬁR©e_O
 >> 8), (NA_SymbﬁR©e_O & 0xff), (0x7 << 
NA_SymbﬁR©e_LSB
), NA_SymbﬁR©e_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_SymbﬁR©e_I
},

685 {(
NA_Moduœti⁄Sy°em_O
 >> 8), (NA_Moduœti⁄Sy°em_O & 0xff), (0x01 << 
NA_Moduœti⁄Sy°em_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Moduœti⁄Sy°em_I
},

688 {(
NA_Crc2Ty≥_O
 >> 8), (NA_Crc2Ty≥_O & 0xff), (0x3 << 
NA_Crc2Ty≥_LSB
), NA_Crc2Ty≥_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Crc2Ty≥_I
},

690 {(
NA_U£Fec_O
 >> 8), (NA_U£Fec_O & 0xff), (0x01 << 
NA_U£Fec_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£Fec_I
},

692 {(
NA_TxRxCry±Crc2Mode_O
 >> 8), (NA_TxRxCry±Crc2Mode_O & 0xff), (0x01 << 
NA_TxRxCry±Crc2Mode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxRxCry±Crc2Mode_I
},

694 {(
NA_TxRxCry±ClkMode_O
 >> 8), (NA_TxRxCry±ClkMode_O & 0xff), (0x0‡<< 
NA_TxRxCry±ClkMode_LSB
), NA_TxRxCry±ClkMode_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxRxCry±ClkMode_I
},

697 {(
NA_Sw≠BbBuf„rs_O
 >> 8), (NA_Sw≠BbBuf„rs_O & 0xff), (0x01 << 
NA_Sw≠BbBuf„rs_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Sw≠BbBuf„rs_I
},

699 {(
NA_TxRxBbBuf„rMode1_O
 >> 8), (NA_TxRxBbBuf„rMode1_O & 0xff), (0x01 << 
NA_TxRxBbBuf„rMode1_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxRxBbBuf„rMode1_I
},

701 {(
NA_TxRxBbBuf„rMode0_O
 >> 8), (NA_TxRxBbBuf„rMode0_O & 0xff), (0x01 << 
NA_TxRxBbBuf„rMode0_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxRxBbBuf„rMode0_I
},

703 {(
NA_FdmaE«bÀ_O
 >> 8), (NA_FdmaE«bÀ_O & 0xff), (0x01 << 
NA_FdmaE«bÀ_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_FdmaE«bÀ_I
},

705 {(
NA_TxRxMode_O
 >> 8), (NA_TxRxMode_O & 0xff), (0x01 << 
NA_TxRxMode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxRxMode_I
},

708 {(
NA_ChúpM©rix0_O
 >> 8), (NA_ChúpM©rix0_O & 0xff), (0x07 << 
NA_ChúpM©rix0_LSB
), NA_ChúpM©rix0_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_ChúpM©rix0_I
},

710 {(
NA_ChúpM©rix1_O
 >> 8), (NA_ChúpM©rix1_O & 0xff), (0x07 << 
NA_ChúpM©rix1_LSB
), NA_ChúpM©rix1_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_ChúpM©rix1_I
},

713 {(
NA_ChúpM©rix2_O
 >> 8), (NA_ChúpM©rix2_O & 0xff), (0x07 << 
NA_ChúpM©rix2_LSB
), NA_ChúpM©rix2_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_ChúpM©rix2_I
},

715 {(
NA_ChúpM©rix3_O
 >> 8), (NA_ChúpM©rix3_O & 0xff), (0x07 << 
NA_ChúpM©rix3_LSB
), NA_ChúpM©rix3_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_ChúpM©rix3_I
},

718 {(
NA_TxPªTøûM©rix0_O
 >> 8), (NA_TxPªTøûM©rix0_O & 0xff), (0x03 << 
NA_TxPªTøûM©rix0_LSB
), NA_TxPªTøûM©rix0_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxPªTøûM©rix0_I
},

720 {(
NA_TxPªTøûM©rix1_O
 >> 8), (NA_TxPªTøûM©rix1_O & 0xff), (0x03 << 
NA_TxPªTøûM©rix1_LSB
), NA_TxPªTøûM©rix1_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxPªTøûM©rix1_I
},

722 {(
NA_TxUndîrunIgn‹e_O
 >> 8), (NA_TxUndîrunIgn‹e_O & 0xff), (0x01 << 
NA_TxUndîrunIgn‹e_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxUndîrunIgn‹e_I
},

724 {(
NA_TxMacCifsDis_O
 >> 8), (NA_TxMacCifsDis_O & 0xff), (0x01 << 
NA_TxMacCifsDis_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxMacCifsDis_I
},

727 {(
NA_TxVC¨rSís_O
 >> 8), (NA_TxVC¨rSís_O & 0xff), (0x01 << 
NA_TxVC¨rSís_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxVC¨rSís_I
},

729 {(
NA_TxPhC¨rSí£Mode_O
 >> 8), (NA_TxPhC¨rSí£Mode_O & 0xff), (0x03 << 
NA_TxPhC¨rSí£Mode_LSB
), NA_TxPhC¨rSí£Mode_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxPhC¨rSí£Mode_I
},

731 {(
NA_TxVC¨rSísAck_O
 >> 8), (NA_TxVC¨rSísAck_O & 0xff), (0x01 << 
NA_TxVC¨rSísAck_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxVC¨rSísAck_I
},

733 {(
NA_TxArq_O
 >> 8), (NA_TxArq_O & 0xff), (0x01 << 
NA_TxArq_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxArq_I
},

735 {(
NA_Tx3Way_O
 >> 8), (NA_Tx3Way_O & 0xff), (0x01 << 
NA_Tx3Way_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Tx3Way_I
},

737 {(
NA_TxBackOffAlg_O
 >> 8), (NA_TxBackOffAlg_O & 0xff), (0x01 << 
NA_TxBackOffAlg_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxBackOffAlg_I
},

739 {(
NA_TxFøgPrio_O
 >> 8), (NA_TxFøgPrio_O & 0xff), (0x01 << 
NA_TxFøgPrio_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxFøgPrio_I
},

742 {(
NA_TxBackOffSìd_O
 >> 8), (NA_TxBackOffSìd_O & 0xff), (0xf‡<< 
NA_TxBackOffSìd_LSB
), NA_TxBackOffSìd_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxBackOffSìd_I
},

745 {(
NA_TxCry±SeqRe£t_O
 >> 8), (NA_TxCry±SeqRe£t_O & 0xff), (0x0‡<< 
NA_TxCry±SeqRe£t_LSB
), NA_TxCry±SeqRe£t_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxCry±SeqRe£t_I
},

747 {(
NA_TxCry±En_O
 >> 8), (NA_TxCry±En_O & 0xff), (0x01 << 
NA_TxCry±En_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxCry±En_I
},

749 {(
NA_TxCry±Id_O
 >> 8), (NA_TxCry±Id_O & 0xff), (0x03 << 
NA_TxCry±Id_LSB
), NA_TxCry±Id_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxCry±Id_I
},

751 {(
NA_TxCry±SeqN_O
 >> 8), (NA_TxCry±SeqN_O & 0xff), (0x01 << 
NA_TxCry±SeqN_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxCry±SeqN_I
},

754 {(
NA_TxS¸ambInô_O
 >> 8), (NA_TxS¸ambInô_O & 0xff), (0x7‡<< 
NA_TxS¸ambInô_LSB
), NA_TxS¸ambInô_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxS¸ambInô_I
},

756 {(
NA_TxS¸ambEn_O
 >> 8), (NA_TxS¸ambEn_O & 0xff), (0x01 << 
NA_TxS¸ambEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxS¸ambEn_I
},

759 {(
NA_TxPackëTy≥_O
 >> 8), (NA_TxPackëTy≥_O & 0xff), (0x0‡<< 
NA_TxPackëTy≥_LSB
), NA_TxPackëTy≥_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxPackëTy≥_I
},

761 {(
NA_TxAddrSl˘_O
 >> 8), (NA_TxAddrSl˘_O & 0xff), (0x01 << 
NA_TxAddrSl˘_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_TxAddrSl˘_I
},

764 {(
NA_TxCmdSt›_O
 >> 8), (NA_TxCmdSt›_O & 0xff), (0x01 << 
NA_TxCmdSt›_B
), 
BOOL_OP
, 
NTRX_NC_REG
, 
NTRX_TC_REG
, 
NA_TxCmdSt›_I
},

766 {(
NA_TxCmdSèπ_O
 >> 8), (NA_TxCmdSèπ_O & 0xff), (0x01 << 
NA_TxCmdSèπ_B
), 
BOOL_OP
, 
NTRX_NC_REG
, 
NTRX_TC_REG
, 
NA_TxCmdSèπ_I
},

768 {(
NA_TxBuf„rCmd_O
 >> 8), (NA_TxBuf„rCmd_O & 0xff), (0x03 << 
NA_TxBuf„rCmd_LSB
), NA_TxBuf„rCmd_LSB, 
NTRX_NC_REG
, 
NTRX_TC_REG
, 
NA_TxBuf„rCmd_I
},

771 {(
NA_RxCmdSt›_O
 >> 8), (NA_RxCmdSt›_O & 0xff), (0x01 << 
NA_RxCmdSt›_B
), 
BOOL_OP
, 
NTRX_NC_REG
, 
NTRX_TC_REG
, 
NA_RxCmdSt›_I
},

773 {(
NA_RxCmdSèπ_O
 >> 8), (NA_RxCmdSèπ_O & 0xff), (0x01 << 
NA_RxCmdSèπ_B
), 
BOOL_OP
, 
NTRX_NC_REG
, 
NTRX_TC_REG
, 
NA_RxCmdSèπ_I
},

775 {(
NA_RxBuf„rCmd_O
 >> 8), (NA_RxBuf„rCmd_O & 0xff), (0x03 << 
NA_RxBuf„rCmd_LSB
), NA_RxBuf„rCmd_LSB, 
NTRX_NC_REG
, 
NTRX_TC_REG
, 
NA_RxBuf„rCmd_I
},

778 {(
NA_RxCry±SeqRe£t_O
 >> 8), (NA_RxCry±SeqRe£t_O & 0xff), (0x0‡<< 
NA_RxCry±SeqRe£t_LSB
), NA_RxCry±SeqRe£t_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxCry±SeqRe£t_I
},

781 {(
NA_RxTimeBCrc1Mode_O
 >> 8), (NA_RxTimeBCrc1Mode_O & 0xff), (0x01 << 
NA_RxTimeBCrc1Mode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxTimeBCrc1Mode_I
},

783 {(
NA_RxCrc2Mode_O
 >> 8), (NA_RxCrc2Mode_O & 0xff), (0x01 << 
NA_RxCrc2Mode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxCrc2Mode_I
},

785 {(
NA_RxArqMode_O
 >> 8), (NA_RxArqMode_O & 0xff), (0x03 << 
NA_RxArqMode_LSB
), NA_RxArqMode_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxArqMode_I
},

787 {(
NA_RxAddrSegEsMode_O
 >> 8), (NA_RxAddrSegEsMode_O & 0xff), (0x01 << 
NA_RxAddrSegEsMode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrSegEsMode_I
},

789 {(
NA_RxAddrSegIsMode_O
 >> 8), (NA_RxAddrSegIsMode_O & 0xff), (0x01 << 
NA_RxAddrSegIsMode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrSegIsMode_I
},

791 {(
NA_RxAddrSegDevIdL_O
 >> 8), (NA_RxAddrSegDevIdL_O & 0xff), (0x03 << 
NA_RxAddrSegDevIdL_LSB
), NA_RxAddrSegDevIdL_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrSegDevIdL_I
},

794 {(
NA_RxD©aEn_O
 >> 8), (NA_RxD©aEn_O & 0xff), (0x01 << 
NA_RxD©aEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxD©aEn_I
},

796 {(
NA_RxBrdˇ°En_O
 >> 8), (NA_RxBrdˇ°En_O & 0xff), (0x01 << 
NA_RxBrdˇ°En_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxBrdˇ°En_I
},

798 {(
NA_RxTimeBEn_O
 >> 8), (NA_RxTimeBEn_O & 0xff), (0x01 << 
NA_RxTimeBEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxTimeBEn_I
},

800 {(
NA_RxAddrMode_O
 >> 8), (NA_RxAddrMode_O & 0xff), (0x01 << 
NA_RxAddrMode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RxAddrMode_I
},

802 {(
NA_R™gögPul£s_O
 >> 8), (NA_R™gögPul£s_O & 0xff), (0x0‡<< 
NA_R™gögPul£s_LSB
), NA_R™gögPul£s_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_R™gögPul£s_I
},

805 {(
NA_Pul£DëDñay_O
 >> 8), (NA_Pul£DëDñay_O & 0xff), (0x1‡<< 
NA_Pul£DëDñay_LSB
), NA_Pul£DëDñay_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Pul£DëDñay_I
},

808 {(
NA_G©eAdjThªshﬁd_O
 >> 8), (NA_G©eAdjThªshﬁd_O & 0xff), (0x07 << 
NA_G©eAdjThªshﬁd_LSB
), NA_G©eAdjThªshﬁd_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_G©eAdjThªshﬁd_I
},

810 {(
NA_DownPul£Dëe˘Dis_O
 >> 8), (NA_DownPul£Dëe˘Dis_O & 0xff), (0x01 << 
NA_DownPul£Dëe˘Dis_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_R™gögPul£s_I
},

812 {(
NA_UpPul£Dëe˘Dis_O
 >> 8), (NA_UpPul£Dëe˘Dis_O & 0xff), (0x01 << 
NA_UpPul£Dëe˘Dis_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_UpPul£Dëe˘Dis_I
},

815 {(
NA_G©eSizeUnsync_O
 >> 8), (NA_G©eSizeUnsync_O & 0xff), (0x03 << 
NA_G©eSizeUnsync_LSB
), NA_G©eSizeUnsync_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_G©eSizeUnsync_I
},

817 {(
NA_G©eSizeBôsync_O
 >> 8), (NA_G©eSizeBôsync_O & 0xff), (0x03 << 
NA_G©eSizeBôsync_LSB
), NA_G©eSizeBôsync_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_G©eSizeBôsync_I
},

819 {(
NA_G©eSizeFømesync_O
 >> 8), (NA_G©eSizeFømesync_O & 0xff), (0x03 << 
NA_G©eSizeFømesync_LSB
), NA_G©eSizeFømesync_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_G©eSizeFømesync_I
},

821 {(
NA_G©eAdjBôsyncEn_O
 >> 8), (NA_G©eAdjBôsyncEn_O & 0xff), (0x01 << 
NA_G©eAdjBôsyncEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_G©eAdjBôsyncEn_I
},

823 {(
NA_G©eAdjFømesyncEn_O
 >> 8), (NA_G©eAdjFømesyncEn_O & 0xff), (0x01 << 
NA_G©eAdjFømesyncEn_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_G©eAdjFømesyncEn_I
},

827 {(
NA_Go2BôsyncThªshﬁd_O
 >> 8), (NA_Go2BôsyncThªshﬁd_O & 0xff), (0x07 << 
NA_Go2BôsyncThªshﬁd_LSB
), NA_Go2BôsyncThªshﬁd_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_Go2BôsyncThªshﬁd_I
},

829 {(
NA_LóveBôsyncThªshﬁd_O
 >> 8), (NA_LóveBôsyncThªshﬁd_O & 0xff), (0x07 << 
NA_LóveBôsyncThªshﬁd_LSB
), NA_LóveBôsyncThªshﬁd_LSB,
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_LóveBôsyncThªshﬁd_I
},

832 {(
NA_RtcTimeBTxAdj_O
 >> 8), (NA_RtcTimeBTxAdj_O & 0xff), (0xf‡<< 
NA_RtcTimeBTxAdj_LSB
), NA_RtcTimeBTxAdj_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RtcTimeBTxAdj_I
},

835 {(
NA_RtcTimeBRxAdj_O
 >> 8), (NA_RtcTimeBRxAdj_O & 0xff), (0xf‡<< 
NA_RtcTimeBRxAdj_LSB
), NA_RtcTimeBRxAdj_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RtcTimeBRxAdj_I
},

838 {(
NA_RtcCmdWr_O
 >> 8), (NA_RtcCmdWr_O & 0xff), (0x01 << 
NA_RtcCmdWr_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RtcCmdWr_I
},

840 {(
NA_RtcCmdRd_O
 >> 8), (NA_RtcCmdRd_O & 0xff), (0x01 << 
NA_RtcCmdRd_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RtcCmdRd_I
},

842 {(
NA_RtcTimeBAutoMode_O
 >> 8), (NA_RtcTimeBAutoMode_O & 0xff), (0x01 << 
NA_RtcTimeBAutoMode_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_RtcTimeBAutoMode_I
},

845 {(
NA_AgcAm∂ôude_O
 >> 8), (NA_AgcAm∂ôude_O & 0xff), (0xf‡<< 
NA_AgcAm∂ôude_LSB
), NA_AgcAm∂ôude_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcAm∂ôude_I
},

848 {(
NA_AgcR™geOff£t_O
 >> 8), (NA_AgcR™geOff£t_O & 0xff), (0xf‡<< 
NA_AgcR™geOff£t_LSB
), NA_AgcR™geOff£t_LSB, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_AgcR™geOff£t_I
},

850 {(
NA_U£A…î«tiveAgc_O
 >> 8), (NA_U£A…î«tiveAgc_O & 0xff), (0x01 << 
NA_U£A…î«tiveAgc_B
), 
BOOL_OP
, 
NTRX_WO_REG
, 
NTRX_TC_REG
, 
NA_U£A…î«tiveAgc_I
},

853 {(
NA_RamTxLígth_O
 >> 8), (NA_RamTxLígth_O & 0xff), 2, 0, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 0},

856 {(
NA_RamSèAddr0_O
 >> 8), (NA_RamSèAddr0_O & 0xff), 6, 0, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 0},

858 {(
NA_SyncW‹d_O
 >> 8), (NA_SyncW‹d_O & 0xff), 8, 0, 
NTRX_RW_REG
, 
NTRX_TC_REG
, 0},

860 {(
NA_TﬂOff£tMónD©a_O
 >> 8), (NA_TﬂOff£tMónD©a_O & 0xff), 2, 0, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 0},

862 {(
NA_TxRe•Time_O
 >> 8), (NA_TxRe•Time_O & 0xff), 2, 0, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 0},

864 {(
NA_TﬂOff£tMónAck_O
 >> 8), (NA_TﬂOff£tMónAck_O & 0xff), 2, 0, 
NTRX_RO_REG
, 
NTRX_TC_REG
, 0},

877 
MyBoﬁT
 
	$NTRXCheckTabÀ
 ()

879 i‡((
	`RódRomByã
(
ªgCmd
[
TRX_CHIRP_GEN_DATA
].
addrHi
) == 0)

880 && (
	`RódRomByã
(
ªgCmd
[
TRX_CHIRP_GEN_DATA
].
addrLo
) == 1)

881 && (
	`RódRomByã
(
ªgCmd
[
TRX_CHIRP_GEN_DATA
].
mask
) == 1)

882 && (
	`RódRomByã
(
ªgCmd
[
TRX_CHIRP_GEN_DATA
].
›î©i⁄
) == 2)

883 && (
	`RódRomByã
(
ªgCmd
[
TRX_CHIRP_GEN_DATA
].
shadow
) == 3)

884 && (
	`RódRomByã
(
ªgCmd
[
TRX_CHIRP_GEN_DATA
].
ªgId
) == 5))

886  
TRUE
;

888  
FALSE
;

889 
	}
}

904 
	$NTRXSëRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 
vÆue
)

906 
MyByã8T
 
ªg
;

911 i‡((
	`RódRomByã
(
ªgCmd
[
cmd
].
shadow
Ë=
NTRX_RW_REG
)

912 || (
	`RódRomByã
(
ªgCmd
[
cmd
].
shadow
Ë=
NTRX_WO_REG
))

915 
ªg
 = 
¡rxShadowReg
[
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
)];

919 
ªg
 = 0x00;

925 i‡(
	`RódRomByã
(
ªgCmd
[
cmd
].
›î©i⁄
Ë=
BOOL_OP
)

927 i‡(
vÆue
 =
TRUE
)

929 
vÆue
 = 
	`RódRomByã
(
ªgCmd
[
cmd
].
mask
);

932 i‡(
vÆue
 != 0)

937 
vÆue
 <<
	`RódRomByã
(
ªgCmd
[
cmd
].
›î©i⁄
);

943 i‡(
	`RódRomByã
(
ªgCmd
[
cmd
].
mask
Ë!
BOOL_OP
)

945 
ªg
 &~(
	`RódRomByã
(
ªgCmd
[
cmd
].
mask
));

946 
ªg
 |(
	`RódRomByã
(
ªgCmd
[
cmd
].
mask
Ë& 
vÆue
);

950 
ªg
 = 
vÆue
;

957 i‡((
	`RódRomByã
(
ªgCmd
[
cmd
].
shadow
Ë=
NTRX_RW_REG
)

958 || (
	`RódRomByã
(
ªgCmd
[
cmd
].
shadow
Ë=
NTRX_WO_REG
))

960 
¡rxShadowReg
[
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
)] = 
ªg
;

963 
	`NTRXSëRamIndex
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrHi
));

965 
	`NTRXWrôeSögÀSPI
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
), 
ªg
);

966 
	}
}

981 
	$NTRXGëRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 *
ªg
)

983 
	`NTRXSëRamIndex
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrHi
));

985 i‡(
	`RódRomByã
(
ªgCmd
[
cmd
].
shadow
Ë=
NTRX_WO_REG
)

987 *
ªg
 = 
¡rxShadowReg
[
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
)];

991 
	`NTRXRódSPI
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
), 
ªg
, 1);

994 *
ªg
 &
	`RódRomByã
(
ªgCmd
[
cmd
].
mask
);

996 i‡(
	`RódRomByã
(
ªgCmd
[
cmd
].
›î©i⁄
Ë=
BOOL_OP
)

998 i‡(*
ªg
 !
FALSE
)

1000 *
ªg
 = 
TRUE
;

1005 *
ªg
 >>
	`RódRomByã
(
ªgCmd
[
cmd
].
›î©i⁄
);

1007 
	}
}

1021 
	$NTRXSëNRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 *
d©a
)

1023 
	`NTRXSëRamIndex
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrHi
));

1025 
	`NTRXWrôeSPI
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
), 
d©a
, RódRomByã‘egCmd[cmd].
mask
));

1026 
	}
}

1040 
	$NTRXGëNRegi°î
 (
NTRXCmdTE
 
cmd
, 
MyByã8T
 *
ªg
)

1042 
	`NTRXSëRamIndex
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrHi
));

1044 
	`NTRXRódSPI
 (
	`RódRomByã
(
ªgCmd
[
cmd
].
addrLo
), 
ªg
, RódRomByã‘egCmd[cmd].
mask
));

1045 
	}
}

1059 
	$NTRXPro˚ssTabÀ
 (c⁄° 
MyByã8T
 *
èbÀ
)

1061 
ödex_
 = 0;

1062 
timî
;

1063 
MyByã8T
 
d©a
[2];

1064 
i
;

1066 
	`RódRomByã
 (
èbÀ
[
ödex_
]Ë< 
CMD_ERROR
)

1068 
	`RódRomByã
 (
èbÀ
[
ödex_
]))

1070 
TRX_DELAY
: 
timî
 = 
	`RódRomByã
 (
èbÀ
[
ödex_
 + 1]);

1071 
	`hwdñay
 (
timî
 * 1000);

1074 
NA_LoT¨gëVÆue
:

1075 
NA_AgcI¡Time
:

1076 
i
 = 0; i < 2; i++)

1078 
d©a
[
i
] = 
	`RódRomByã
 (
èbÀ
[
ödex_
 + 1 + i]);

1080 
	`NTRXSëNRegi°î
 (
	`RódRomByã
 (
èbÀ
[
ödex_
]), 
d©a
);

1081 
ödex_
++;

1084 
NA_RamTxLígth
:

1085 
d©a
[0] = 0x00;

1086 
¡rxShadowReg
[
NA_RamIndex_O
] = 
d©a
[0];

1087 
	`NTRXWrôeSögÀSPI
 (
NA_RamIndex_O
, 
d©a
[0]);

1088 
i
 = 0; i < 2; i++)

1090 
d©a
[
i
] = 
	`RódRomByã
 (
èbÀ
[
ödex_
 + 1 + i]);

1092 
	`NTRXSëNRegi°î
 (
	`RódRomByã
 (
èbÀ
[
ödex_
]), 
d©a
);

1093 
ödex_
++;

1096 : 
	`NTRXSëRegi°î
 (
	`RódRomByã
 (
èbÀ
[
ödex_
]),

1097 
	`RódRomByã
 (
èbÀ
[
ödex_
 + 1]));

1100 
ödex_
 += 2;

1102 
	}
}

1104 
	$NTRXPro˚ssSequí˚
 (c⁄° 
MyByã8T
 *
èbÀ
)

1106 
MyByã8T
 
i
;

1107 
MyByã8T
 
∑ylﬂd
[64];

1109 
∑ylﬂd
[0] = 
èbÀ
[0];

1110 
	`NTRXWrôeSögÀSPI
 (0x0e, 
∑ylﬂd
[0]);

1111 
¡rxShadowReg
[0x0e] = 
èbÀ
[0];

1113 
i
 = 0; i < 
èbÀ
[2]; i++)

1115 
∑ylﬂd
[
i
] = 
èbÀ
[3 + i];

1117 
	`NTRXWrôeSPI
 (
èbÀ
[1], 
∑ylﬂd
,Åable[2]);

1118 
	}
}

1129 
MyBoﬁT
 
	$NTRXCheckVîRev
 ()

1131 
MyByã8T
 
buff
[2] = { 0x00, 0x00 };

1133 
	`NTRXRódSPI
 (
NA_Vîsi⁄_O
, 
buff
, 1);

1134 
	`NTRXRódSPI
 (
NA_Revisi⁄_O
, &(
buff
[1]), 1);

1139 #i‡((
CONFIG_PRINTF
Ë&& (
CONFIG_LOGO
))

1140 
	`¥ötf
("vî:%d,Ñev:%d\n", 
buff
[0], buff[1]);

1143 i‡(
buff
[0] =
NA_Vîsi⁄_I
 && buff[1] =
NA_Revisi⁄_I
)

1145  
TRUE
;

1149  
FALSE
;

1151 
	}
}

1161 
MyByã8T
 
	$NTRXGëTxARQmax
 ()

1164  ((
¡rxShadowReg
[
NA_TxArqMax_O
] >> 4) & 0x0f);

1165 
	}
}

1174 
MyBoﬁT
 
	$NTRXGëRxCRC2mode
 ()

1176  ((
¡rxShadowReg
[
NA_RxCrc2Mode_O
] & (1<< 
NA_RxCrc2Mode_B
)) >> NA_RxCrc2Mode_B);

1177 
	}
}

1190 
MyByã8T
 
	$NTRXGëRfOuçutPowî
 (
MyByã8T
 
ty≥
)

1192 
MyByã8T
 
off£t
;

1194 
ty≥
)

1196 
pwrOutD©a
:

1197 
off£t
 = 
NA_TxOuçutPowî0_O
;

1199 
pwrOutReq°
:

1200 
off£t
 = 
NA_TxOuçutPowî1_O
;

1205  0x3F & 
¡rxShadowReg
[
off£t
];

1206 
	}
}

1208 c⁄° 
MyByã8T
 
	gNTRXPwrOutL©
[] =

1242 
MyByã8T
 
	$NTRXGëPowîE¡ry
 (
MyByã8T
 
vÆue
)

1244  
NTRXPwrOutL©
[0x3‡& 
vÆue
];

1245 
	}
}

1248 
	$NTRXF˘CÆ
 ()

1250 
ˇpsVÆ
 = 7;

1251 
èrgëVÆMax
 = 174;

1252 
èrgëVÆMö
 = 152;

1253 
f˘Sum
 = 0;

1254 
˘ªf
;

1255 
∑ylﬂd
;

1258 
∑ylﬂd
 = ( 1 << 
NA_F˘ClockEn_B
 ) | 
ˇpsVÆ
;

1259 
	`NTRXWrôeSögÀSPI
 (
NA_ChúpFûãrC≠s_O
, 
∑ylﬂd
);

1260 
	`hwdñay
 (10);

1262 (
ˇpsVÆ
 < 16) && (capsVal >= 0))

1264 
f˘Sum
 = 0;

1265 
˘ªf
 = 0; ctref < 4; ctref++)

1267 
∑ylﬂd
 = ( 1 << 
NA_F˘ClockEn_B
 ) | ( 1 << 
NA_SèπF˘Mósuª_B
 ) | 
ˇpsVÆ
;

1268 
	`NTRXWrôeSögÀSPI
 (
NA_ChúpFûãrC≠s_O
, 
∑ylﬂd
);

1269 
	`hwdñay
 (15);

1271 
	`NTRXRódSögÀSPI
 (
NA_F˘Pîiod_O
, &
∑ylﬂd
);

1272 
f˘Sum
 +
∑ylﬂd
;

1274 i‡(
f˘Sum
 >
èrgëVÆMax
)

1276 
ˇpsVÆ
--;

1278 i‡(
f˘Sum
 <
èrgëVÆMö
)

1280 
ˇpsVÆ
++;

1284 
∑ylﬂd
 = 
ˇpsVÆ
;

1285 
	`NTRXWrôeSögÀSPI
 (
NA_ChúpFûãrC≠s_O
, 
∑ylﬂd
);

1289 
∑ylﬂd
 = 6;

1290 
	`NTRXWrôeSögÀSPI
 (
NA_ChúpFûãrC≠s_O
, 
∑ylﬂd
);

1291 
	}
}

1293 
	$NTRXSëSyncW‹d
 (
MyByã8T
 *
vÆue
)

1295 
	`NTRXSëNRegi°î
 (
NA_SyncW‹d
, 
vÆue
);

1296 
	}
}

1299 #ifde‡
CONFIG_22MHZ_DEF_ONLY


1300 c⁄° 
MyByã8T
 
	gNTRXInôTabÀ1
[] 
	gPROGMEM
 =

1302 
NA_RxCmdSt›
, 
TRUE
,

1303 
NA_RxI¡sRe£t
, 0xff,

1304 
NA_RxBuf„rCmd
, 3,

1306 
NA_Re£tBbRadioCål
, 
TRUE
,

1307 
NA_Re£tBbRadioCål
, 
FALSE
,

1308 
NA_E«bÀBbClock
, 
FALSE
,

1309 
NA_Re£tBbClockG©e
, 
TRUE
,

1310 
NA_E«bÀBbCry°Æ
, 
FALSE
,

1311 
NA_Re£tBbClockG©e
, 
TRUE
,

1312 
NA_E«bÀBbCry°Æ
, 
TRUE
,

1313 
TRX_DELAY
, 5,

1314 
NA_Re£tBbClockG©e
, 
FALSE
,

1315 
NA_E«bÀBbClock
, 
TRUE
,

1316 
NA_Re£tBbRadioCål
, 
TRUE
,

1317 
NA_Re£tBbRadioCål
, 
FALSE
,

1318 
NA_G©eAdjFømesyncEn
, 
FALSE
,

1319 
NA_G©eAdjBôsyncEn
, 
FALSE
,

1322 
NA_AgcHﬁd
, 
TRUE
,

1323 
NA_AgcDeÁu…En
, 
TRUE
,

1324 
NA_AgcVÆue
, 35,

1325 
NA_Pul£DëDñay
, 2,

1326 
NA_G©eSizeFømesync
, 
NA_G©eSize9SlŸs_VC_C
,

1328 
NA_U£Fec
, 
TRUE
,

1329 
CMD_ERROR


1332 c⁄° 
	gNAInôTxTabÀ2tx
[] 
	gPROGMEM
 =

1335 
NA_E«bÀExtPA
, 
TRUE
,

1336 
NA_CsqU£Pha£Shi·
, 
FALSE
,

1337 
CMD_ERROR


1340 
	$NTRXSëupTRxMode
 (
MyByã8T
 
fdma
, MyByã8T 
sd
, MyByã8T 
§
)

1343 
£âögVÆ
.
bw
 = 
fdma
;

1344 
£âögVÆ
.
sd
 = sd;

1345 
£âögVÆ
.
§
 = sr;

1346 
£âögVÆ
.
fdma
 = 
TRUE
;

1347 
£âögVÆ
.
fixnm≠
 = 
NA_FIX_MODE
;

1348 
curCh
 = 1;

1350 
	`NTRXSëIndexReg
 (0x00);

1352 
	`NTRXPro˚ssTabÀ
 (
NTRXInôTabÀ1
);

1355 
	`NTRXSëIndexReg
 (0x00);

1357 
	`NTRXSëC‹rThªshﬁd2
 ();

1360 
	`NTRXPro˚ssTabÀ
 (
NAInôTxTabÀ2tx
);

1362 
	`NTRXSëIndexReg
 (0x00);

1364 
	`NTRXF˘CÆ
 ();

1366 
bRxCrc2Mode
=
TRUE
;

1367 #ifde‡
CONFIG_NTRX_AUTO_RECALIB


1368 
	`NTRXAŒCÆibøti⁄
 ();

1370 
	`NTRXRe°¨t
 ();

1371 
	}
}

1373 c⁄° 
MyByã8T
 
	gNTRXInôTabÀ1
[] 
	gPROGMEM
 =

1375 
NA_Re£tBbClockG©e
, 
TRUE
,

1376 
NA_E«bÀBbCry°Æ
, 
TRUE
,

1377 
TRX_DELAY
, 5,

1378 
NA_Re£tBbClockG©e
, 
FALSE
,

1379 
NA_E«bÀBbClock
, 
TRUE
,

1380 
NA_Re£tBbRadioCål
, 
TRUE
,

1381 
NA_Re£tBbRadioCål
, 
FALSE
,

1382 
CMD_ERROR


1385 c⁄° 
MyByã8T
 
	gNTRXInôTabÀ2rx
[] 
	gPROGMEM
 =

1388 
NA_RxArqMode
, 
NA_RxArqModeCrc2_VC_C
,

1390 
NA_RxTimeBCrc1Mode
, 
FALSE
,

1391 
NA_RxCrc2Mode
, 
TRUE
,

1392 
NA_RfRxCompVÆueI
, 14,

1393 
NA_RfRxCompVÆueQ
, 14,

1394 
CMD_ERROR


1397 c⁄° 
MyByã8T
 
	gNTRXInôTabÀ3rx
[] 
	gPROGMEM
 =

1399 
NA_Devi˚Sñe˘
, 
NA_Devi˚Sñe˘BbRam0_C
,

1400 
NA_HﬁdAgcInFømeSync
, 
TRUE
,

1401 
NA_HﬁdAgcInBôSync
, 24,

1402 
NA_U£A…î«tiveAgc
, 
FALSE
,

1403 
NA_ChúpFûãrC≠s
, 0,

1404 
NA_G©eAdjFømesyncEn
, 
FALSE
,

1405 
NA_G©eAdjBôsyncEn
, 
FALSE
,

1406 
CMD_ERROR


1409 c⁄° 
MyByã8T
 
	gNTRXInôTabÀ4
[] 
	gPROGMEM
 =

1411 
NA_Devi˚Sñe˘
, 
NA_Devi˚Sñe˘BbRam0_C
,

1412 
TRX_DELAY
, 2,

1413 
CMD_ERROR


1415 c⁄° 
	gNAInôTxTabÀ2tx
[] 
	gPROGMEM
 =

1417 
NA_TxArq
, 
TRUE
,

1418 
NA_TxArqMax
, 
NA_MAX_ARQ_CNT
,

1419 
NA_TxS¸ambEn
, 
TRUE
,

1420 
NA_E«bÀExtPA
, 
TRUE
,

1421 
NA_RxAddrMode
, 
TRUE
,

1422 
NA_CsqU£Pha£Shi·
, 
FALSE
,

1423 
NA_E«bÀCsqClock
, 
TRUE
,

1424 
NA_CsqU£Ram
, 
TRUE
,

1425 
NA_CsqAsyMode
, 
FALSE
,

1426 
NA_TxOuçutPowî0
, 
RfTxOuçutPowîD©a_DEFAULT
,

1427 
NA_TxOuçutPowî1
, 
RfTxOuçutPowîReq_DEFAULT
,

1437 
CMD_ERROR


1440 c⁄° 
	gNAInôTabÀ3tx
[] 
	gPROGMEM
 =

1442 
NA_E«bÀLO
, 
FALSE
,

1443 
NA_E«bÀLOdiv10
, 
FALSE
,

1444 
NA_TxAddrSl˘
, 0,

1445 
CMD_ERROR


1448 
	$NTRXSëupTRxMode
 (
MyByã8T
 
fdma
, MyByã8T 
sd
, MyByã8T 
§
)

1450 
£âögVÆ
.
bw
 = 
fdma
;

1451 
£âögVÆ
.
sd
 = sd;

1452 
£âögVÆ
.
§
 = sr;

1453 i‡(
fdma
 =
NA_22MHz
)

1455 
curCh
 = 1;

1456 
£âögVÆ
.
fdma

TRUE
;

1457 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

1461 
curCh
 = 0;

1462 
£âögVÆ
.
fdma

FALSE
;

1463 
£âögVÆ
.
fixnm≠
=
NA_FIX_MODE
;

1466 i‡(
fú°Time
++ != 0)

1468 
	`NTRXSëIndexReg
 (0x00);

1469 
	`NTRXSëRegi°î
 (
NA_RxCmdSt›
, 
TRUE
);

1470 
	`NTRXSëRegi°î
 (
NA_RxI¡sRe£t
, 0xff);

1471 
	`NTRXSëRegi°î
 (
NA_RxBuf„rCmd
, 3);

1473 
	`NTRXSëRegi°î
 (
NA_Re£tBbRadioCål
, 
TRUE
);

1474 
	`NTRXSëRegi°î
 (
NA_Re£tBbRadioCål
, 
FALSE
);

1475 
	`NTRXSëRegi°î
 (
NA_E«bÀBbClock
, 
FALSE
);

1476 
	`NTRXSëRegi°î
 (
NA_Re£tBbClockG©e
, 
TRUE
);

1477 
	`NTRXSëRegi°î
 (
NA_E«bÀBbCry°Æ
, 
FALSE
);

1482 
	`NTRXPro˚ssTabÀ
 (
NTRXInôTabÀ1
);

1484 
	`NTRXPro˚ssTabÀ
 (
NTRXInôTabÀ2rx
);

1485 
	`NTRXSëRxIQM©rix
 (
fdma
, 
sd
);

1486 
	`NTRXPro˚ssTabÀ
 (
NTRXInôTabÀ3rx
);

1487 
	`NTRXSëC‹rThªshﬁd
 (
fdma
, 
sd
);

1488 
	`NTRXPro˚ssTabÀ
 (
NTRXInôTabÀ4
);

1491 
	`NTRXPro˚ssTabÀ
 (
NAInôTxTabÀ2tx
);

1492 
	`NTRXSëTxIQM©rix
 (
fdma
, 
sd
);

1493 i‡(
fdma
 !
NA_22MHz_HR
)

1495 
	`NTRXF˘CÆ
 ();

1498 
˘ˇps
 = 15;

1499 
	`NTRXWrôeSögÀSPI
 (
NA_ChúpFûãrC≠s_O
, 
˘ˇps
);

1501 
	`NTRXPro˚ssTabÀ
 (
NAInôTabÀ3tx
);

1503 
bRxCrc2Mode
=
TRUE
;

1504 
	`NTRXAŒCÆibøti⁄
 ();

1505 
	`NTRXSëAgcVÆues
 (
fdma
, 
sd
, 
§
);

1506 
	`NTRXSëRegi°î
 (
NA_U£Fec
, 
TRUE
);

1507 
	`NTRXRe°¨t
 ();

1508 
	}
}

1511 
	$NTRXSëTøn•¨ítMode
–
MyBoﬁT
 
⁄
 )

1513 
MyByã8T
 
Àn
[2];

1515 if–
⁄
 =
TRUE
 )

1517 
Àn
[0] = 0x80;

1518 
Àn
[1] = 0;

1519 
	`NTRXWrôeSPI
–
NA_RxTønsByãs_O
, 
Àn
, 2 );

1521 
	`NTRXSëRegi°î
–
NA_TxRxMode
, 
TRUE
 );

1522 
	`NTRXSëRegi°î
–
NA_TxRxBbBuf„rMode0
, 
TRUE
 );

1523 
	`NTRXSëRegi°î
–
NA_TxS¸ambEn
, 
FALSE
 );

1524 
	`NTRXSëRegi°î
–
NA_TxS¸ambInô
, 0 );

1525 
	`NTRXSëRegi°î
–
NA_TxArq
, 
FALSE
 );

1526 
	`NTRXSëRegi°î
–
NA_TxArqMax
, 0 );

1527 
	`NTRXSëRegi°î
–
NA_RxArqMode
, 
NA_RxArqModeN⁄e_VC_C
 );

1528 
	`NTRXSëRegi°î
–
NA_RxCrc2Mode
, 
FALSE
 );

1532 
	`NTRXSëRegi°î
–
NA_TxRxMode
, 
FALSE
 );

1533 
	`NTRXSëRegi°î
–
NA_TxS¸ambEn
, 
TRUE
 );

1534 
	`NTRXSëRegi°î
–
NA_TxS¸ambInô
, 0x7f );

1535 
	`NTRXSëRegi°î
–
NA_TxArq
, 
TRUE
 );

1536 
	`NTRXSëRegi°î
–
NA_TxArqMax
, 
NA_MAX_ARQ_CNT
 );

1538 
	`NTRXSëRegi°î
–
NA_RxArqMode
, 
NA_RxArqModeCrc2_VC_C
 );

1539 
	`NTRXSëRegi°î
–
NA_RxCrc2Mode
, 
TRUE
 );

1541 
	}
}

1543 
MyDw‹d32T
 
	$NTRXGëRTC
 (
MyBoﬁT
 
f‹˚
)

1546 
MyDw‹d32T
 
cuºítRTC
;

1547 
MyDw‹d32T
 
cuºítHw˛ock
 = 0xFFFFFFFF;

1548 
MyDw‹d32T
 
now
 = 
	`hw˛ock
();

1554 i‡((
now
 !
cuºítHw˛ock
Ë|| (
f‹˚
)){

1555 
MyByã8T
 
πc
[5];

1556 
MyByã8T
 
ªg
;

1560 
ENTER_TASK
;

1561 
ªg
 = 1<<
NA_RtcCmdRd_B
;

1562 
	`NTRXWrôeSögÀSPI
(
NA_RtcCmdRd_O
, 
ªg
);

1563 
	`hwdñay
(130);

1564 
	`NTRXRódSPI
(
NA_RamRtcReg_O
 + 1, 
πc
, 5);

1565 
ªg
 = 0;

1566 
	`NTRXWrôeSögÀSPI
(
NA_RtcCmdRd_O
, 
ªg
);

1569 
cuºítRTC
 = (

1570 (((
MyDw‹d32T
)
πc
[0]) << 0)

1571 | (((
MyDw‹d32T
)
πc
[1]) << 8)

1572 | (((
MyDw‹d32T
)
πc
[2]) << 16)

1573 | (((
MyDw‹d32T
)
πc
[3]) << 24)

1577 
cuºítHw˛ock
 = 
now
;

1578 
LEAVE_TASK
;

1580  
cuºítRTC
;

1581 
	}
}

1594 
	$NTRXPowîdownMode
 (
MyByã8T
 
mode
, 
MyDw‹d32T
 
£c⁄ds
)

1596 
MyByã8T
 
vÆue
, 
vÆNuŒ
 = 0;

1597 
MyByã8T
 
i
;

1598 
MyByã8T
 
wakeupTime8
;

1599 
MyDw‹d32T
 
wakeupTime32
;

1602 
	`NTRXSëRegi°î
 (
NA_RxCmdSt›
, 
TRUE
);

1604 i‡(
£c⁄ds
 > 0)

1606 
wakeupTime32
 = (
£c⁄ds
 << 7Ë+ 
	`NTRXGëRTC
(1);

1609 
i
 = 
NA_WakeUpTimeWe_LSB
; i <
NA_WakeUpTimeWe_MSB
; i++)

1613 
wakeupTime8
 = (
MyByã8T
)(
wakeupTime32
 & 0xFF);

1614 
wakeupTime32
 >>= 8;

1617 
	`NTRXWrôeSögÀSPI
–
NA_WakeUpTimeByã_O
, 
wakeupTime8
 );

1620 
vÆue
 = 1 << (
i
);

1621 
	`NTRXWrôeSögÀSPI
–
NA_WakeUpTimeWe_O
, 
vÆue
 );

1622 
	`NTRXWrôeSögÀSPI
–
NA_WakeUpTimeWe_O
, 
vÆNuŒ
 );

1626 
vÆue
 = ( 0x00 | ( 1 << 
NA_Re£tBbClockG©e_B
 ));

1627 
	`NTRXWrôeSögÀSPI
–
NA_PowîDown_O
, 
vÆue
 );

1628 
vÆue
 = 0;

1629 
	`NTRXWrôeSögÀSPI
–0x8, 
vÆue
 );

1631 i‡(
£c⁄ds
 > 0)

1633 
vÆue
 = (0x00

1634 | ( 1 << 
NA_E«bÀWakeUpRtc_B
 )

1635 | ( 1 << 
NA_PowîUpTime_LSB
 )

1636 | (–0x01 & 
mode
 ) << 
NA_PowîDownMode_B
 ));

1640 
vÆue
 = (–0x01 & 
mode
 ) << 
NA_PowîDownMode_B
 );

1642 
	`NTRXWrôeSögÀSPI
–
NA_E«bÀWakeUpRtc_O
, 
vÆue
 );

1644 
vÆue
 =(0x00

1645 | ( 1 << 
NA_PowîDown_B
 )

1646 | ( 1 << 
NA_Re£tBbClockG©e_B
 ));

1647 
	`NTRXWrôeSögÀSPI
–
NA_PowîDown_O
, 
vÆue
 );

1648 
	}
}

1653 
	$NTRXSèπBa£b™dTimî
 (
MyI¡16T
 
°¨tvÆue
)

1655 
	`NTRXWrôeSPI
 (
NA_Ba£b™dTimîSèπVÆue_O
, (
MyByã8T
 *)(&
°¨tvÆue
), 2);

1656 
	}
}

1661 
	$NTRXSt›Ba£b™dTimî
 ()

1663 
	`NTRXSëRegi°î
 (
NA_CÀ¨Ba£b™dTimîI¡
, 
TRUE
);

1664 
	}
}

	@timer.c

1 
	~<io.h
>

2 
	~<sig«l.h
>

3 
	~<sys/öây≥s.h
>

4 
	~"comm⁄_def.h
"

5 
	~"ymŸe2_io.h
"

7 
	~"timî.h
"

8 
	~"Àd.h
"

10 
	#MAX_TIMER_TICK
 1000

11 
	#SW_DELAY
 0x70

	)

12 
	#BT_CONSOLE_DELAY
 0x200

	)

14 
uöt16_t
 
	gTick1S
 = 0;

15 
uöt16_t
 
	gSWC¡
 = 0;

16 
uöt16_t
 
	gBTC⁄sﬁe
 = 
OFF
;

20 
	$InôTimî
()

22 
	`msdñay
(1);

23 
	`_DINT
();

25 
TACTL
 = 
TASSEL_SMCLK
 + 
ID_DIV1
 + 
MC_1
;

26 
TACCTL0
 = 
CCIE
;

27 
TACCTL1
 = 0;

28 
TACCTL2
 = 0;

30 
TACCR0
 = 
MAX_TIMER_TICK
;

32 
	`_EINT
();

35 
	}
}

38 
	$öãºu±
(
TIMERA0_VECTOR
Ë
	$TIMERA0
()

40 
uöt16_t
 
i
 = 0;

41 
uöt16_t
 
C¡
 = 0;

45 if(
C¡
++ > 1000)

47 
C¡
 = 0;

48 
Tick1S
++;

54 if(!(
P1IN
 & 
USR_SW
))

56 
i
++;

57 if(
i
 > 
BT_CONSOLE_DELAY
)

59 if(
BTC⁄sﬁe
 =
OFF
)

60 
BTC⁄sﬁe
 = 
ON
;

62 
BTC⁄sﬁe
 = 
OFF
;

64 
i
 = 0;

70 if(
i
 > 
SW_DELAY
)

71 
SWC¡
++;

73 
i
 = 0;

76 
	}
}

	@usart.c

1 
	~<io.h
>

2 
	~<sig«l.h
>

4 
	~"ußπ.h
"

5 
	~"comm⁄_def.h
"

6 
	~"ymŸe2_io.h
"

7 
	~"dñay.h
"

15 
	$u¨t_öô
()

17 
	`msdñay
(1);

19 
	`BIT_CLEAR
(
P3SEL
, 
I2C_SDA
 + 
I2C_SCL
);

22 
P3SEL
 |= (1<<4) | (1<<5);

25 
U0CTL
 = 0;

28 
U0CTL
 = 
CHAR
 + 
SWRST
;

29 
ME1
 = 
UTXE0
 + 
URXE0
;

30 
U0TCTL
 = 
SSEL_SMCLK
;

31 
U0BR1
 = 0x00;

32 
U0BR0
 = 0x12;

33 
U0MCTL
 = 0x84;

34 
U0CTL
 &~
SWRST
;

45 
	`BIT_CLEAR
(
IFG1
, 
UTXIFG0
);

46 
	`BIT_CLEAR
(
IFG1
, 
URXIFG0
);

84 
	}
}

86 
	$TxPrötf
(*
F‹m
, ...)

88 
Buff
[
TRACE_MAX_BUFFER_SIZE
];

89 *
Så
;

91 
va_li°
 
ArgPå
;

92 
	`va_°¨t
(
ArgPå
,
F‹m
);

93 
	`v•rötf
(
Buff
, 
F‹m
, 
ArgPå
);

94 
	`va_íd
(
ArgPå
);

95 
Så
 = 
Buff
;

97 
	`CRITICAL_SECTION_START
();

99 *
Så
)

101 if(*
Så
 == '\n')

103 
TXBUF0
 = '\r';

104 !(
IFG1
 & 
UTXIFG0
));

107 
TXBUF0
 = *
Så
++;

108 !(
IFG1
 & 
UTXIFG0
));

111 
	`CRITICAL_SECTION_END
();

112 
	}
}

	@util.c

1 
	~<io.h
>

2 
	~"utû.h
"

3 
	~"Àd.h
"

4 
	~"dñay.h
"

9 
	$îr‹_h™dÀr
(
uöt16_t
 
Àd
, uöt16_à
dñay
)

11 #ifdef 
CONFIG_CONSOLE


12 #ifdef 
CONFIG_PRINTF


17 
	`Àds_£t
(0, 
LEDS_NORMAL
);

20 
	`Àds_£t
(
Àd
, 
LEDS_TOGGLE
);

21 
	`msdñay
(
dñay
);

23 
	}
}

25 
	#DELIMETER
() \

26 
	`msdñay
(500); \

27 
	`Àds_£t
(0, 
LEDS_NORMAL
); \

28 
	`msdñay
(250); \

29 
	`Àds_£t
(7, 
LEDS_NORMAL
); \

30 
	`msdñay
(25); \

31 
	`Àds_£t
(0, 
LEDS_NORMAL
); \

32 
	`msdñay
(500);

	)

34 
	$di•_Àd
(
uöt8_t
 
vÆ
)

36 
	`DELIMETER
();

37 
	`Àds_£t
(
vÆ
, 
LEDS_NORMAL
);

38 
	`DELIMETER
();

39 
	`Àds_£t
(
vÆ
>>3, 
LEDS_NORMAL
);

40 
	`DELIMETER
();

41 
	`Àds_£t
(
vÆ
>>6, 
LEDS_NORMAL
);

42 
	`DELIMETER
();

43 
	}
}

45 
	$hÆt
()

48 
	}
}

50 
uöt16_t
 
	$__make_¸ôiˇl_£˘i⁄
()

52 
uöt16_t
 
ªt
 = (

54 
uöt16_t
 
__x
;

55 
__asm
 vﬁ©ûê("movÑ2, %0" : "Ù"((
uöt16_t
 )
__x
));

56 
__x
;

59 
	`DINT
();

60  
ªt
;

61 
	}
}

63 
	$__quô_¸ôiˇl_£˘i⁄
(
uöt16_t
 
__¸ôiˇl_£˘i⁄
)

65 i‡(
__¸ôiˇl_£˘i⁄
Ë
	`EINT
();

66 
	}
}

68 
	$SëUSART0_SPI_MODE
()

70 
	`msdñay
(1);

73 
P3DIR
 |= (1<<4) | (1<<5);

74 
P3SEL
 &= ~((1<<4) | (1<<5));

75 
P3SEL
 |= (1<<1)|(1<<2)|(1<<3);

78 
UCTL0
 = 
CHAR
 + 
SYNC
 + 
MM
 + 
SWRST
;

79 
ME1
 = 
USPIE0
;

80 
UTCTL0
 = 
CKPL
 + 
SSEL1
 + 
SSEL0
 + 
STC
;

81 
UBR00
 = 0X02;

82 
UBR10
 = 0X00;

83 
UMCTL0
 = 0;

84 
UCTL0
 &~
SWRST
;

85 
	}
}

87 
	$SëUSART0_UART_MODE
()

89 
	`msdñay
(1);

92 
P3DIR
 |= (1<<1)|(1<<2)|(1<<3);

93 
P3SEL
 &= ~((1<<1)|(1<<2)|(1<<3));

94 
P3SEL
 |= (1<<4) | (1<<5);

97 
UCTL0
 = 
CHAR
 + 
SWRST
;

98 
ME1
 = 
UTXE0
 + 
URXE0
;

99 
U0TCTL
 = 
SSEL0
 | 
SSEL1
;

100 
U0BR0
 = 0x0012 & 0x0FF;

101 
U0BR1
 = (0x0012 >> 8) & 0x0FF;

102 
U0MCTL
 = 0x84;

103 
U0CTL
 &~
SWRST
;

104 
	}
}

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

295 
__THROW
 
__wur
;

300 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

415 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

416 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

417 #ifde‡
__REDIRECT


421 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

422 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

423 
__isoc99_fsˇnf
Ë
__wur
;

424 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

425 
__isoc99_sˇnf
Ë
__wur
;

426 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

427 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

428 
__isoc99_ssˇnf
Ë
__THROW
;

430 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

432 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

435 
	#fsˇnf
 
__isoc99_fsˇnf


	)

436 
	#sˇnf
 
__isoc99_sˇnf


	)

437 
	#ssˇnf
 
__isoc99_ssˇnf


	)

441 
__END_NAMESPACE_STD


443 #ifdef 
__USE_ISOC99


444 
__BEGIN_NAMESPACE_C99


449 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

450 
_G_va_li°
 
__¨g
)

451 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

457 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

461 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

463 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

465 #i‡!
deföed
 
__USE_GNU
 \

466 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

467 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

468 #ifde‡
__REDIRECT


472 
	`__REDIRECT
 (
vfsˇnf
,

473 (
FILE
 *
__ª°ri˘
 
__s
,

474 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

475 
__isoc99_vfsˇnf
)

476 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

477 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

478 
_G_va_li°
 
__¨g
), 
__isoc99_vfsˇnf
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

480 
	`__REDIRECT
 (
vssˇnf
,

481 (
__c⁄°
 *
__ª°ri˘
 
__s
,

482 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

483 
__isoc99_vssˇnf
)

484 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

486 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

487 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

488 
_G_va_li°
 
__¨g
Ë
__wur
;

489 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

490 
_G_va_li°
 
__¨g
Ë
__wur
;

491 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

493 
_G_va_li°
 
__¨g
Ë
__THROW
;

494 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

495 
	#vsˇnf
 
__isoc99_vsˇnf


	)

496 
	#vssˇnf
 
__isoc99_vssˇnf


	)

500 
__END_NAMESPACE_C99


504 
__BEGIN_NAMESPACE_STD


509 
	`fgëc
 (
FILE
 *
__°ªam
);

510 
	`gëc
 (
FILE
 *
__°ªam
);

516 
	`gëch¨
 ();

517 
__END_NAMESPACE_STD


521 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

523 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


528 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

529 
	`gëch¨_u∆ocked
 ();

532 #ifde‡
__USE_MISC


539 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

543 
__BEGIN_NAMESPACE_STD


551 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

552 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

558 
	`putch¨
 (
__c
);

559 
__END_NAMESPACE_STD


563 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

565 #ifde‡
__USE_MISC


572 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

575 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


580 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

581 
	`putch¨_u∆ocked
 (
__c
);

585 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

586 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

588 
	`gëw
 (
FILE
 *
__°ªam
);

591 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

595 
__BEGIN_NAMESPACE_STD


600 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

601 
__wur
;

608 *
	$gës
 (*
__s
Ë
__wur
;

609 
__END_NAMESPACE_STD


611 #ifde‡
__USE_GNU


618 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

619 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

623 #ifdef 
__USE_GNU


634 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

635 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

636 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

637 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

638 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

639 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

648 
size_t
 *
__ª°ri˘
 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 
__BEGIN_NAMESPACE_STD


658 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

664 
	`puts
 (
__c⁄°
 *
__s
);

671 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

678 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

679 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

685 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

686 
__END_NAMESPACE_STD


688 #ifde‡
__USE_GNU


695 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
);

699 #ifde‡
__USE_MISC


706 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

713 
__BEGIN_NAMESPACE_STD


718 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

723 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

728 
	`ªwöd
 (
FILE
 *
__°ªam
);

729 
__END_NAMESPACE_STD


736 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


737 #i‚de‡
__USE_FILE_OFFSET64


742 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

747 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

749 #ifde‡
__REDIRECT


750 
	`__REDIRECT
 (
f£eko
,

751 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

752 
f£eko64
);

753 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

755 
	#f£eko
 
f£eko64


	)

756 
	#·ñlo
 
·ñlo64


	)

761 
__BEGIN_NAMESPACE_STD


762 #i‚de‡
__USE_FILE_OFFSET64


767 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

772 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

774 #ifde‡
__REDIRECT


775 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

776 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

777 
	`__REDIRECT
 (
f£ços
,

778 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

780 
	#fgëpos
 
fgëpos64


	)

781 
	#f£ços
 
f£ços64


	)

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_LARGEFILE64


787 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

788 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

789 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

790 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

793 
__BEGIN_NAMESPACE_STD


795 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

797 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

799 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

800 
__END_NAMESPACE_STD


802 #ifde‡
__USE_MISC


804 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

805 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

806 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
__BEGIN_NAMESPACE_STD


815 
	`≥º‹
 (
__c⁄°
 *
__s
);

816 
__END_NAMESPACE_STD


822 
	~<bôs/sys_îæi°.h
>

825 #ifdef 
__USE_POSIX


827 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 #ifde‡
__USE_MISC


832 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

837 
deföed
 
__USE_MISC
)

842 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

848 
	`p˛o£
 (
FILE
 *
__°ªam
);

852 #ifdef 
__USE_POSIX


854 *
	$˘îmid
 (*
__s
Ë
__THROW
;

858 #ifde‡
__USE_XOPEN


860 *
	`cu£rid
 (*
__s
);

864 #ifdef 
__USE_GNU


865 
ob°ack
;

868 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

869 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

870 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

871 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

872 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

873 
_G_va_li°
 
__¨gs
)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

878 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


882 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

886 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

889 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

892 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


896 
	#__√ed_gë›t


	)

897 
	~<gë›t.h
>

902 #ifde‡
__USE_EXTERN_INLINES


903 
	~<bôs/°dio.h
>

905 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


906 
	~<bôs/°dio2.h
>

908 #ifde‡
__LDBL_COMPAT


909 
	~<bôs/°dio-ldbl.h
>

912 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

676 #ifde‡
__USE_GNU


677 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

680 
__BEGIN_NAMESPACE_STD


683 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

684 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

685 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

689 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

690 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 #ifde‡
__USE_GNU


692 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

693 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

694 
	`__n⁄nuŒ
 ((1, 4));

699 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

700 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__END_NAMESPACE_STD


703 #ifde‡
__USE_ISOC99


704 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

705 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__BEGIN_NAMESPACE_STD


713 
div_t
 
	$div
 (
__numî
, 
__díom
)

714 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

715 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

716 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_ISOC99


720 
__BEGIN_NAMESPACE_C99


721 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

722 
__díom
)

723 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

724 
__END_NAMESPACE_C99


728 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


735 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

736 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

741 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

742 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

747 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

748 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

751 #ifde‡
__USE_MISC


753 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

754 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

755 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

756 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

757 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

758 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

759 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

760 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

765 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

766 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

767 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

769 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

770 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

772 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

773 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

774 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

775 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

777 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

778 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

779 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

784 
__BEGIN_NAMESPACE_STD


787 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

790 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

794 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

798 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

799 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

801 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

802 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

803 
__THROW
;

804 
__END_NAMESPACE_STD


807 #ifde‡
__USE_SVID


812 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

816 #ifde‡
__USE_XOPEN_EXTENDED


823 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

824 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

825 **
__ª°ri˘
 
__vÆuï
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

830 #ifde‡
__USE_XOPEN


832 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 #ifde‡
__USE_XOPEN2K


840 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

843 #ifde‡
__USE_XOPEN


848 
	$gø¡±
 (
__fd
Ë
__THROW
;

852 
	$u∆ock±
 (
__fd
Ë
__THROW
;

857 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

860 #ifde‡
__USE_GNU


864 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

865 
__THROW
 
	`__n⁄nuŒ
 ((2));

868 
	`gë±
 ();

871 #ifde‡
__USE_BSD


875 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

876 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/°dlib.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/°dlib-ldbl.h
>

889 #unde‡
__√ed_mÆloc_™d_ˇŒoc


891 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡
_FORTIFY_SOURCE
 > 1

287 
	#__USE_FORTIFY_LEVEL
 2

	)

289 
	#__USE_FORTIFY_LEVEL
 1

	)

292 
	#__USE_FORTIFY_LEVEL
 0

	)

296 
	#__STDC_IEC_559__
 1

	)

297 
	#__STDC_IEC_559_COMPLEX__
 1

	)

300 
	#__STDC_ISO_10646__
 200009L

	)

308 #unde‡
__GNU_LIBRARY__


309 
	#__GNU_LIBRARY__
 6

	)

313 
	#__GLIBC__
 2

	)

314 
	#__GLIBC_MINOR__
 8

	)

316 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

317 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

320 #i‡
deföed
 
__GNUC__
 \

321 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

322 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

323 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

324 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

328 #i‚de‡
__ASSEMBLER__


329 #i‚de‡
_SYS_CDEFS_H


330 
	~<sys/cdefs.h
>

335 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


336 
	#__USE_LARGEFILE
 1

	)

337 
	#__USE_LARGEFILE64
 1

	)

343 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

344 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

345 && 
deföed
 
	g__exã∫_ölöe


346 
	#__USE_EXTERN_INLINES
 1

	)

354 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

312 #i‡
__GNUC_PREREQ
 (4,3)

313 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

314 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

321 #i‡!
__GNUC_PREREQ
 (2,8)

322 
	#__exãnsi⁄__


	)

326 #i‡!
__GNUC_PREREQ
 (2,92)

327 
	#__ª°ri˘


	)

333 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


334 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

336 #ifde‡
__GNUC__


337 
	#__ª°ri˘_¨r


	)

339 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

340 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

343 
	#__ª°ri˘_¨r


	)

348 
	~<bôs/w‹dsize.h
>

350 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


351 
	#__LDBL_COMPAT
 1

	)

352 #ifde‡
__REDIRECT


353 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

354 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

355 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

356 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

357 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

358 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

359 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

360 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

361 
	#__LDBL_REDIR_DECL
(
«me
) \

362 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

363 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

364 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

365 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

366 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

369 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

372 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

373 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

374 
	#__LDBL_REDIR_DECL
(
«me
)

	)

375 #ifde‡
__REDIRECT


376 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
 (
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


76 
	#__mb°©e_t_deföed
 1

	)

80 
	m__cou¡
;

83 #ifde‡
__WINT_TYPE__


84 
__WINT_TYPE__
 
	m__wch
;

86 
wöt_t
 
	m__wch
;

88 
	m__wchb
[4];

89 } 
	m__vÆue
;

90 } 
	t__mb°©e_t
;

92 #unde‡
__√ed_mb°©e_t


97 #ifde‡
_WCHAR_H


99 
__BEGIN_NAMESPACE_C99


101 
__mb°©e_t
 
	tmb°©e_t
;

102 
	g__END_NAMESPACE_C99


103 #ifde‡
__USE_GNU


104 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

107 #i‚de‡
WCHAR_MIN


109 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

110 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

113 #i‚de‡
WEOF


114 
	#WEOF
 (0xffffffffu)

	)

119 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


120 
	~<w˘y≥.h
>

124 
__BEGIN_DECLS


126 
__BEGIN_NAMESPACE_STD


129 
tm
;

130 
__END_NAMESPACE_STD


134 
	$__USING_NAMESPACE_STD
(
tm
)

137 
__BEGIN_NAMESPACE_STD


139 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

142 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

143 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

144 
__THROW
;

147 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

156 
__THROW
 
__©åibuã_puª__
;

158 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

159 
__THROW
 
__©åibuã_puª__
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_GNU


164 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

167 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
size_t
 
__n
Ë
__THROW
;

172 
	~<xloˇÀ.h
>

174 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

175 
__loˇÀ_t
 
__loc
Ë
__THROW
;

177 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

181 
__BEGIN_NAMESPACE_STD


184 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

188 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

189 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_GNU


198 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

199 
__loˇÀ_t
 
__loc
Ë
__THROW
;

204 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

205 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

208 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

211 
__BEGIN_NAMESPACE_STD


213 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

214 
__THROW
 
__©åibuã_puª__
;

216 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

217 
__THROW
 
__©åibuã_puª__
;

218 
__END_NAMESPACE_STD


220 #ifde‡
__USE_GNU


223 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

224 
__THROW
 
__©åibuã_puª__
;

227 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

231 
__THROW
 
__©åibuã_puª__
;

234 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

235 
__THROW
 
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

238 
__THROW
 
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

241 
__THROW
 
__©åibuã_puª__
;

244 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

245 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

246 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

249 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

250 
__END_NAMESPACE_STD


252 #ifde‡
__USE_XOPEN


254 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

255 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__USE_GNU


260 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

261 
__THROW
 
__©åibuã_puª__
;

265 
__BEGIN_NAMESPACE_STD


267 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

268 
__THROW
 
__©åibuã_puª__
;

271 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

272 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

273 
__THROW
 
__©åibuã_puª__
;

276 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

281 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

282 
__THROW
;

285 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

286 
__END_NAMESPACE_STD


288 #ifde‡
__USE_GNU


291 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

292 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

293 
__THROW
;

297 
__BEGIN_NAMESPACE_STD


300 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

304 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

308 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

312 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

313 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

314 
mb°©e_t
 *
__p
Ë
__THROW
;

317 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

321 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

322 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

323 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_EXTERN_INLINES


333 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

334 
__exã∫_ölöe
 
wöt_t


335 
	`__NTH
 (
	$btowc
 (
__c
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

337 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

339 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

340 
__exã∫_ölöe
 

341 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

342 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

343 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

345 
__exã∫_ölöe
 
size_t


346 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

347 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

348 {  (
__ps
 !
NULL


349 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

352 
__BEGIN_NAMESPACE_STD


355 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

356 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

362 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

363 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

364 
__END_NAMESPACE_STD


367 #ifdef 
__USE_GNU


370 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

371 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

372 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

377 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

378 
size_t
 
__nwc
, size_à
__Àn
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

384 #ifde‡
__USE_XOPEN


386 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

390 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

394 
__BEGIN_NAMESPACE_STD


397 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

398 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

399 
__END_NAMESPACE_STD


401 #ifde‡
__USE_ISOC99


402 
__BEGIN_NAMESPACE_C99


404 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

406 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

408 
__END_NAMESPACE_C99


412 
__BEGIN_NAMESPACE_STD


415 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

416 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

420 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

423 
__END_NAMESPACE_STD


425 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

426 
__BEGIN_NAMESPACE_C99


429 
__exãnsi⁄__


430 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

431 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

432 
__THROW
;

436 
__exãnsi⁄__


437 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__ba£
Ë
__THROW
;

440 
__END_NAMESPACE_C99


443 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


446 
__exãnsi⁄__


447 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

449 
__THROW
;

453 
__exãnsi⁄__


454 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

456 
__ba£
Ë
__THROW
;

459 #ifde‡
__USE_GNU


473 
	~<xloˇÀ.h
>

477 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

479 
__loˇÀ_t
 
__loc
Ë
__THROW
;

481 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

485 
__exãnsi⁄__


486 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

488 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
, 
__loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

502 
__THROW
;

504 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__loˇÀ_t
 
__loc
Ë
__THROW
;

510 #ifdef 
__USE_GNU


513 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

517 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

518 
__THROW
;

524 #ifdef 
__USE_GNU


527 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

530 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


531 
__BEGIN_NAMESPACE_STD


534 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

541 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

542 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

548 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

551 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

552 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

553 
__THROW
 ;

559 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

560 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
)

567 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

568 
__gnuc_va_li°
 
__¨g
)

572 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

573 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

574 
__gnuc_va_li°
 
__¨g
)

575 
__THROW
 ;

582 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

583 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

589 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

594 
__THROW
 ;

596 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

597 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

598 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

599 #ifde‡
__REDIRECT


603 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

605 
__isoc99_fwsˇnf
)

607 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

608 
__isoc99_wsˇnf
)

610 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

612 
__isoc99_swsˇnf
)

613 
__THROW
 ;

615 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

616 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

617 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

618 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
;

621 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

622 
	#wsˇnf
 
__isoc99_wsˇnf


	)

623 
	#swsˇnf
 
__isoc99_swsˇnf


	)

627 
__END_NAMESPACE_STD


630 #ifde‡
__USE_ISOC99


631 
__BEGIN_NAMESPACE_C99


636 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

637 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

638 
__gnuc_va_li°
 
__¨g
)

644 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

645 
__gnuc_va_li°
 
__¨g
)

648 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

650 
__gnuc_va_li°
 
__¨g
)

651 
__THROW
 ;

653 #i‡!
deföed
 
__USE_GNU
 \

654 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

655 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

656 #ifde‡
__REDIRECT


657 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

661 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

664 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

665 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

667 
__THROW
 ;

669 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
);

672 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

673 
__gnuc_va_li°
 
__¨g
);

674 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

676 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

677 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

678 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

679 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

683 
__END_NAMESPACE_C99


687 
__BEGIN_NAMESPACE_STD


692 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

693 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

699 
wöt_t
 
	`gëwch¨
 ();

706 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

707 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

721 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

722 
__FILE
 *
__ª°ri˘
 
__°ªam
);

728 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

736 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

737 
__END_NAMESPACE_STD


740 #ifde‡
__USE_GNU


748 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

757 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

774 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

775 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

784 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

793 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

794 
__FILE
 *
__ª°ri˘
 
__°ªam
);

798 
__BEGIN_NAMESPACE_C99


802 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

803 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

805 
__END_NAMESPACE_C99


807 #ifde‡
__USE_GNU


808 
	~<xloˇÀ.h
>

812 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

813 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

814 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

815 
__loˇÀ_t
 
__loc
Ë
__THROW
;

824 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


825 
	#__√ed_iswxxx


	)

826 
	~<w˘y≥.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


831 
	~<bôs/wch¨2.h
>

834 #ifde‡
__LDBL_COMPAT


835 
	~<bôs/wch¨-ldbl.h
>

838 
__END_DECLS


844 #unde‡
__√ed_mb°©e_t


845 #unde‡
__√ed_wöt_t


	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_GNU


70 
	mPTHREAD_MUTEX_STALLED_NP
,

71 
	mPTHREAD_MUTEX_ROBUST_NP


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_UNIX98


430 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

433 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

436 #ifde‡
__USE_GNU


441 
	$±hªad_yõld
 (Ë
__THROW
;

446 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

447 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3));

451 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

452 
˝u_£t_t
 *
__˝u£t
)

453 
__THROW
 
	`__n⁄nuŒ
 ((3));

466 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

467 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

478 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

482 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

485 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

490 
	`±hªad_ã°ˇn˚l
 ();

499 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

500 
__mask_was_ßved
;

501 } 
__ˇn˚l_jmp_buf
[1];

502 *
__∑d
[4];

503 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

506 #i‚de‡
__˛ónup_f˘_©åibuã


507 
	#__˛ónup_f˘_©åibuã


	)

512 
	s__±hªad_˛ónup_‰ame


514 (*
__ˇn˚l_routöe
) (*);

515 *
__ˇn˚l_¨g
;

516 
__do_ô
;

517 
__ˇn˚l_ty≥
;

520 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


521 #ifde‡
__˝lu•lus


523 ˛as†
	c__±hªad_˛ónup_˛ass


525 (*
__ˇn˚l_routöe
) (*);

526 *
__ˇn˚l_¨g
;

527 
__do_ô
;

528 
__ˇn˚l_ty≥
;

530 
public
:

531 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

532 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

533 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

534 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

535 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

536 &
__ˇn˚l_ty≥
); 
	}
}

537 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

547 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

549 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

553 
	#±hªad_˛ónup_p›
(
execuã
) \

554 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

555 } 0)

	)

557 #ifde‡
__USE_GNU


561 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

563 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

564 
__˛‰ame
.
	`__de„r
 ()

	)

569 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

570 
__˛‰ame
.
	`__ª°‹e
 (); \

571 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

572 } 0)

	)

579 
__exã∫_ölöe
 

580 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

582 i‡(
__‰ame
->
__do_ô
)

583 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

584 
	}
}

593 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

595 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

596 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

597 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

598 .
__do_ô
 = 1 };

	)

602 
	#±hªad_˛ónup_p›
(
execuã
) \

603 
__˛‰ame
.
__do_ô
 = (
execuã
); \

604 } 0)

	)

606 #ifde‡
__USE_GNU


610 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

612 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

613 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

614 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

615 .
__do_ô
 = 1 }; \

616 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

617 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

622 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

623 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

624 
__˛‰ame
.
__do_ô
 = (
execuã
); \

625 } 0)

	)

636 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

638 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

639 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

640 *
__ˇn˚l_¨g
 = (
¨g
); \

641 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

642 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

643 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

645 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

646 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

650 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

651 dÿ{

	)

652 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

653 
__˛ónup_f˘_©åibuã
;

657 
	#±hªad_˛ónup_p›
(
execuã
) \

660 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

661 i‡(
execuã
) \

662 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

663 } 0)

	)

664 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

667 #ifde‡
__USE_GNU


671 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

673 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

674 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

675 *
__ˇn˚l_¨g
 = (
¨g
); \

676 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

677 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

678 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

680 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

681 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

685 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

686 dÿ{

	)

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

688 
__˛ónup_f˘_©åibuã
;

693 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

696 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

697 i‡(
execuã
) \

698 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

699 
	}
} 0)

	)

700 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

701 
__˛ónup_f˘_©åibuã
;

705 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

706 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

707 #i‚de‡
SHARED


708 
	`__©åibuã__
 ((
__wók__
))

714 
__jmp_buf_èg
;

715 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

721 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

722 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

723 
__THROW
 
	`__n⁄nuŒ
 ((1));

726 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

727 
__THROW
 
	`__n⁄nuŒ
 ((1));

730 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

731 
__THROW
 
	`__n⁄nuŒ
 ((1));

734 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

737 #ifde‡
__USE_XOPEN2K


739 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

740 
__c⁄°
 
time•ec
 *
__ª°ri˘


741 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

745 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_UNIX98


751 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

752 
__ª°ri˘
 
__muãx
,

753 *
__ª°ri˘
 
__¥io˚ûög
)

754 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

758 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 
__¥io˚ûög
,

760 *
__ª°ri˘
 
__ﬁd_˚ûög
)

761 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

765 #ifde‡
__USE_GNU


767 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

768 
__THROW
 
	`__n⁄nuŒ
 ((1));

776 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1));

780 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

784 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

785 
__ª°ri˘
 
__©å
,

786 *
__ª°ri˘
 
__psh¨ed
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

790 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

791 
__psh¨ed
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_UNIX98


796 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


797 
__©å
, *
__ª°ri˘
 
__köd
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

803 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1));

807 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

808 
__ª°ri˘
 
__©å
,

809 *
__ª°ri˘
 
__¥Ÿocﬁ
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

814 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

815 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1));

819 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

820 
__ª°ri˘
 
__©å
,

821 *
__ª°ri˘
 
__¥io˚ûög
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

825 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

826 
__¥io˚ûög
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_GNU


832 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

833 *
__robu°√ss
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

837 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

838 
__robu°√ss
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1));

843 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


848 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

849 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


850 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

853 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

857 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

864 #ifde‡
__USE_XOPEN2K


866 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

867 
__c⁄°
 
time•ec
 *
__ª°ri˘


868 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

872 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

873 
__THROW
 
	`__n⁄nuŒ
 ((1));

876 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

877 
__THROW
 
	`__n⁄nuŒ
 ((1));

879 #ifde‡
__USE_XOPEN2K


881 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

882 
__c⁄°
 
time•ec
 *
__ª°ri˘


883 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

887 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

888 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

895 
__THROW
 
	`__n⁄nuŒ
 ((1));

898 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1));

902 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

903 
__ª°ri˘
 
__©å
,

904 *
__ª°ri˘
 
__psh¨ed
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

908 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

909 
__psh¨ed
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1));

913 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

914 
__ª°ri˘
 
__©å
,

915 *
__ª°ri˘
 
__¥ef
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

919 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

920 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

929 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


930 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

950 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

951 
	`__n⁄nuŒ
 ((1, 2));

960 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

961 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

962 
__c⁄°
 
time•ec
 *
__ª°ri˘


963 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

968 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

969 
__THROW
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1));

976 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

977 
__ª°ri˘
 
__©å
,

978 *
__ª°ri˘
 
__psh¨ed
)

979 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

982 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

983 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

985 #ifde‡
__USE_XOPEN2K


987 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

988 
__ª°ri˘
 
__©å
,

989 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

990 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

993 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

994 
__˛ockid_t
 
__˛ock_id
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1));

999 #ifde‡
__USE_XOPEN2K


1004 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1005 
__THROW
 
	`__n⁄nuŒ
 ((1));

1008 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1));

1012 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1013 
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1017 
__THROW
 
	`__n⁄nuŒ
 ((1));

1020 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1029 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1030 
__©å
, 
__cou¡
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1));

1034 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((1));

1038 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1044 
__THROW
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1048 
__THROW
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1052 
__ª°ri˘
 
__©å
,

1053 *
__ª°ri˘
 
__psh¨ed
)

1054 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1057 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1058 
__psh¨ed
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1072 (*
__de°r_fun˘i⁄
) (*))

1073 
__THROW
 
	`__n⁄nuŒ
 ((1));

1076 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1079 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1082 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1083 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1086 #ifde‡
__USE_XOPEN2K


1088 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1089 
__˛ockid_t
 *
__˛ock_id
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((2));

1105 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1106 (*
__∑ª¡
) (),

1107 (*
__chûd
Ë()Ë
__THROW
;

1110 #ifde‡
__USE_EXTERN_INLINES


1112 
__exã∫_ölöe
 

1113 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1115  
__thªad1
 =
__thªad2
;

1116 
	}
}

1119 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_GNU


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__¨r
->
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] |
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

144 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 < 8 * (
£tsize
) \

148 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] &~
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

149 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

150 (
__exãnsi⁄__
 \

151 ({ 
size_t
 
__˝u
 = (
˝u
); \

152 
__˝u
 < 8 * (
£tsize
) \

153 ? (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] & 
	`__CPUMASK
 (__cpu))) != 0 \

154 : 0; }))

	)

156 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

157 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

159 #i‡
__GNUC_PREREQ
 (2, 91)

160 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

161 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

163 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

164 (
__exãnsi⁄__
 \

165 ({ 
˝u_£t_t
 *
__¨r1
 = (
˝u£ç1
); \

166 
˝u_£t_t
 *
__¨r2
 = (
˝u£ç2
); \

167 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

168 
size_t
 
__i
; \

169 
__i
 = 0; __ò< 
__imax
; ++__i) \

170 i‡(
__¨r1
->
__bôs
[
__i
] !
__¨r2
->__bits[__i]) \

172 
__i
 =
__imax
; }))

	)

175 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

176 (
__exãnsi⁄__
 \

177 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

178 
˝u_£t_t
 *
__¨r1
 = (
§c£t1
); \

179 
˝u_£t_t
 *
__¨r2
 = (
§c£t2
); \

180 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

181 
size_t
 
__i
; \

182 
__i
 = 0; __ò< 
__imax
; ++__i) \

183 
__de°
->
__bôs
[
__i
] = 
__¨r1
->__bôs[__i] 
›
 
__¨r2
->__bits[__i]; \

184 
__de°
; }))

	)

186 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

187 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË* 8)

	)

188 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

189 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

191 
__BEGIN_DECLS


193 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

194 
__THROW
;

195 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

196 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

198 
__END_DECLS


	@
1
.
1
/usr/include
110
2062
adc.c
app.c
bm.c
compass.c
dco.c
delay.c
gps.c
h/OffstMapInit.h
h/adc.h
h/bm.h
h/common_def.h
h/compass.h
h/config.h
h/dco.h
h/delay.h
h/gps.h
h/hwclock.h
h/i2c.h
h/ina219.h
h/keys.h
h/led.h
h/main.h
h/na5tr1.h
h/nnspi.h
h/ntrxdil.h
h/ntrxiqpar.h
h/ntrxranging.h
h/ntrxtypes.h
h/ntrxutil.h
h/pinmacros.h
h/timer.h
h/types.h
h/usart.h
h/util.h
h/ymote2_io.h
hbm2x1m.c
hbm2x1m.h
hwclock.c
i2c.c
ina219.c
led.c
main.c
nnspi.c
ntrxdil.c
ntrxinit.c
ntrxiqpar.c
ntrxranging.c
ntrxutil.c
timer.c
usart.c
util.c
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/alloca.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/types.h
/usr/include/sys/ucontext.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/time.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/wchar.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
